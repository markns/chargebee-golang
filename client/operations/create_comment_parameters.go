// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/markns/chargebee-golang/models"
)

// NewCreateCommentParams creates a new CreateCommentParams object
// with the default values initialized.
func NewCreateCommentParams() *CreateCommentParams {
	var ()
	return &CreateCommentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCommentParamsWithTimeout creates a new CreateCommentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateCommentParamsWithTimeout(timeout time.Duration) *CreateCommentParams {
	var ()
	return &CreateCommentParams{

		timeout: timeout,
	}
}

// NewCreateCommentParamsWithContext creates a new CreateCommentParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateCommentParamsWithContext(ctx context.Context) *CreateCommentParams {
	var ()
	return &CreateCommentParams{

		Context: ctx,
	}
}

// NewCreateCommentParamsWithHTTPClient creates a new CreateCommentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateCommentParamsWithHTTPClient(client *http.Client) *CreateCommentParams {
	var ()
	return &CreateCommentParams{
		HTTPClient: client,
	}
}

/*CreateCommentParams contains all the parameters to send to the API endpoint
for the create comment operation typically these are written to a http.Request
*/
type CreateCommentParams struct {

	/*CommentCreateRequest*/
	CommentCreateRequest *models.CommentCreateRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create comment params
func (o *CreateCommentParams) WithTimeout(timeout time.Duration) *CreateCommentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create comment params
func (o *CreateCommentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create comment params
func (o *CreateCommentParams) WithContext(ctx context.Context) *CreateCommentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create comment params
func (o *CreateCommentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create comment params
func (o *CreateCommentParams) WithHTTPClient(client *http.Client) *CreateCommentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create comment params
func (o *CreateCommentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCommentCreateRequest adds the commentCreateRequest to the create comment params
func (o *CreateCommentParams) WithCommentCreateRequest(commentCreateRequest *models.CommentCreateRequest) *CreateCommentParams {
	o.SetCommentCreateRequest(commentCreateRequest)
	return o
}

// SetCommentCreateRequest adds the commentCreateRequest to the create comment params
func (o *CreateCommentParams) SetCommentCreateRequest(commentCreateRequest *models.CommentCreateRequest) {
	o.CommentCreateRequest = commentCreateRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCommentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CommentCreateRequest == nil {
		o.CommentCreateRequest = new(models.CommentCreateRequest)
	}

	if err := r.SetBodyParam(o.CommentCreateRequest); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
