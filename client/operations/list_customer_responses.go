// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/markns/chargebee-golang/models"
)

// ListCustomerReader is a Reader for the ListCustomer structure.
type ListCustomerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCustomerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListCustomerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListCustomerOK creates a ListCustomerOK with default headers values
func NewListCustomerOK() *ListCustomerOK {
	return &ListCustomerOK{}
}

/*ListCustomerOK handles this case with default header values.

listCustomer response
*/
type ListCustomerOK struct {
	Payload ListCustomerOKBody
}

func (o *ListCustomerOK) Error() string {
	return fmt.Sprintf("[GET /customers][%d] listCustomerOK  %+v", 200, o.Payload)
}

func (o *ListCustomerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListCustomerOKBody list customer o k body
swagger:model ListCustomerOKBody
*/

type ListCustomerOKBody struct {

	// list
	// Required: true
	List []*models.CustomerResponse `json:"list"`

	// next offset
	// Required: true
	NextOffset *string `json:"next_offset"`
}

/* polymorph ListCustomerOKBody list false */

/* polymorph ListCustomerOKBody next_offset false */

// Validate validates this list customer o k body
func (o *ListCustomerOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateList(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNextOffset(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListCustomerOKBody) validateList(formats strfmt.Registry) error {

	if err := validate.Required("listCustomerOK"+"."+"list", "body", o.List); err != nil {
		return err
	}

	for i := 0; i < len(o.List); i++ {

		if swag.IsZero(o.List[i]) { // not required
			continue
		}

		if o.List[i] != nil {

			if err := o.List[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listCustomerOK" + "." + "list" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListCustomerOKBody) validateNextOffset(formats strfmt.Registry) error {

	if err := validate.Required("listCustomerOK"+"."+"next_offset", "body", o.NextOffset); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListCustomerOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListCustomerOKBody) UnmarshalBinary(b []byte) error {
	var res ListCustomerOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
