// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/markns/chargebee-golang/models"
)

// NewAddPromotionalCreditParams creates a new AddPromotionalCreditParams object
// with the default values initialized.
func NewAddPromotionalCreditParams() *AddPromotionalCreditParams {
	var ()
	return &AddPromotionalCreditParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddPromotionalCreditParamsWithTimeout creates a new AddPromotionalCreditParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddPromotionalCreditParamsWithTimeout(timeout time.Duration) *AddPromotionalCreditParams {
	var ()
	return &AddPromotionalCreditParams{

		timeout: timeout,
	}
}

// NewAddPromotionalCreditParamsWithContext creates a new AddPromotionalCreditParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddPromotionalCreditParamsWithContext(ctx context.Context) *AddPromotionalCreditParams {
	var ()
	return &AddPromotionalCreditParams{

		Context: ctx,
	}
}

// NewAddPromotionalCreditParamsWithHTTPClient creates a new AddPromotionalCreditParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddPromotionalCreditParamsWithHTTPClient(client *http.Client) *AddPromotionalCreditParams {
	var ()
	return &AddPromotionalCreditParams{
		HTTPClient: client,
	}
}

/*AddPromotionalCreditParams contains all the parameters to send to the API endpoint
for the add promotional credit operation typically these are written to a http.Request
*/
type AddPromotionalCreditParams struct {

	/*PromotionalCreditAddRequest*/
	PromotionalCreditAddRequest *models.PromotionalCreditAddRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add promotional credit params
func (o *AddPromotionalCreditParams) WithTimeout(timeout time.Duration) *AddPromotionalCreditParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add promotional credit params
func (o *AddPromotionalCreditParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add promotional credit params
func (o *AddPromotionalCreditParams) WithContext(ctx context.Context) *AddPromotionalCreditParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add promotional credit params
func (o *AddPromotionalCreditParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add promotional credit params
func (o *AddPromotionalCreditParams) WithHTTPClient(client *http.Client) *AddPromotionalCreditParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add promotional credit params
func (o *AddPromotionalCreditParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPromotionalCreditAddRequest adds the promotionalCreditAddRequest to the add promotional credit params
func (o *AddPromotionalCreditParams) WithPromotionalCreditAddRequest(promotionalCreditAddRequest *models.PromotionalCreditAddRequest) *AddPromotionalCreditParams {
	o.SetPromotionalCreditAddRequest(promotionalCreditAddRequest)
	return o
}

// SetPromotionalCreditAddRequest adds the promotionalCreditAddRequest to the add promotional credit params
func (o *AddPromotionalCreditParams) SetPromotionalCreditAddRequest(promotionalCreditAddRequest *models.PromotionalCreditAddRequest) {
	o.PromotionalCreditAddRequest = promotionalCreditAddRequest
}

// WriteToRequest writes these params to a swagger request
func (o *AddPromotionalCreditParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PromotionalCreditAddRequest != nil {
		if err := r.SetBodyParam(o.PromotionalCreditAddRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
