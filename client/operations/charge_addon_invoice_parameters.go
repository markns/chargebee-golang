// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/markns/chargebee-golang/models"
)

// NewChargeAddonInvoiceParams creates a new ChargeAddonInvoiceParams object
// with the default values initialized.
func NewChargeAddonInvoiceParams() *ChargeAddonInvoiceParams {
	var ()
	return &ChargeAddonInvoiceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewChargeAddonInvoiceParamsWithTimeout creates a new ChargeAddonInvoiceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewChargeAddonInvoiceParamsWithTimeout(timeout time.Duration) *ChargeAddonInvoiceParams {
	var ()
	return &ChargeAddonInvoiceParams{

		timeout: timeout,
	}
}

// NewChargeAddonInvoiceParamsWithContext creates a new ChargeAddonInvoiceParams object
// with the default values initialized, and the ability to set a context for a request
func NewChargeAddonInvoiceParamsWithContext(ctx context.Context) *ChargeAddonInvoiceParams {
	var ()
	return &ChargeAddonInvoiceParams{

		Context: ctx,
	}
}

// NewChargeAddonInvoiceParamsWithHTTPClient creates a new ChargeAddonInvoiceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewChargeAddonInvoiceParamsWithHTTPClient(client *http.Client) *ChargeAddonInvoiceParams {
	var ()
	return &ChargeAddonInvoiceParams{
		HTTPClient: client,
	}
}

/*ChargeAddonInvoiceParams contains all the parameters to send to the API endpoint
for the charge addon invoice operation typically these are written to a http.Request
*/
type ChargeAddonInvoiceParams struct {

	/*InvoiceChargeAddonRequest*/
	InvoiceChargeAddonRequest *models.InvoiceChargeAddonRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) WithTimeout(timeout time.Duration) *ChargeAddonInvoiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) WithContext(ctx context.Context) *ChargeAddonInvoiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) WithHTTPClient(client *http.Client) *ChargeAddonInvoiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInvoiceChargeAddonRequest adds the invoiceChargeAddonRequest to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) WithInvoiceChargeAddonRequest(invoiceChargeAddonRequest *models.InvoiceChargeAddonRequest) *ChargeAddonInvoiceParams {
	o.SetInvoiceChargeAddonRequest(invoiceChargeAddonRequest)
	return o
}

// SetInvoiceChargeAddonRequest adds the invoiceChargeAddonRequest to the charge addon invoice params
func (o *ChargeAddonInvoiceParams) SetInvoiceChargeAddonRequest(invoiceChargeAddonRequest *models.InvoiceChargeAddonRequest) {
	o.InvoiceChargeAddonRequest = invoiceChargeAddonRequest
}

// WriteToRequest writes these params to a swagger request
func (o *ChargeAddonInvoiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.InvoiceChargeAddonRequest == nil {
		o.InvoiceChargeAddonRequest = new(models.InvoiceChargeAddonRequest)
	}

	if err := r.SetBodyParam(o.InvoiceChargeAddonRequest); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
