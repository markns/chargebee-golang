// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/markns/chargebee-golang/models"
)

// NewChargeInvoiceParams creates a new ChargeInvoiceParams object
// with the default values initialized.
func NewChargeInvoiceParams() *ChargeInvoiceParams {
	var ()
	return &ChargeInvoiceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewChargeInvoiceParamsWithTimeout creates a new ChargeInvoiceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewChargeInvoiceParamsWithTimeout(timeout time.Duration) *ChargeInvoiceParams {
	var ()
	return &ChargeInvoiceParams{

		timeout: timeout,
	}
}

// NewChargeInvoiceParamsWithContext creates a new ChargeInvoiceParams object
// with the default values initialized, and the ability to set a context for a request
func NewChargeInvoiceParamsWithContext(ctx context.Context) *ChargeInvoiceParams {
	var ()
	return &ChargeInvoiceParams{

		Context: ctx,
	}
}

// NewChargeInvoiceParamsWithHTTPClient creates a new ChargeInvoiceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewChargeInvoiceParamsWithHTTPClient(client *http.Client) *ChargeInvoiceParams {
	var ()
	return &ChargeInvoiceParams{
		HTTPClient: client,
	}
}

/*ChargeInvoiceParams contains all the parameters to send to the API endpoint
for the charge invoice operation typically these are written to a http.Request
*/
type ChargeInvoiceParams struct {

	/*InvoiceChargeRequest*/
	InvoiceChargeRequest *models.InvoiceChargeRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the charge invoice params
func (o *ChargeInvoiceParams) WithTimeout(timeout time.Duration) *ChargeInvoiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the charge invoice params
func (o *ChargeInvoiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the charge invoice params
func (o *ChargeInvoiceParams) WithContext(ctx context.Context) *ChargeInvoiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the charge invoice params
func (o *ChargeInvoiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the charge invoice params
func (o *ChargeInvoiceParams) WithHTTPClient(client *http.Client) *ChargeInvoiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the charge invoice params
func (o *ChargeInvoiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInvoiceChargeRequest adds the invoiceChargeRequest to the charge invoice params
func (o *ChargeInvoiceParams) WithInvoiceChargeRequest(invoiceChargeRequest *models.InvoiceChargeRequest) *ChargeInvoiceParams {
	o.SetInvoiceChargeRequest(invoiceChargeRequest)
	return o
}

// SetInvoiceChargeRequest adds the invoiceChargeRequest to the charge invoice params
func (o *ChargeInvoiceParams) SetInvoiceChargeRequest(invoiceChargeRequest *models.InvoiceChargeRequest) {
	o.InvoiceChargeRequest = invoiceChargeRequest
}

// WriteToRequest writes these params to a swagger request
func (o *ChargeInvoiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.InvoiceChargeRequest != nil {
		if err := r.SetBodyParam(o.InvoiceChargeRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
