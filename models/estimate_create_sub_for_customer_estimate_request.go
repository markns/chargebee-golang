// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EstimateCreateSubForCustomerEstimateRequest estimate create sub for customer estimate request
// swagger:model EstimateCreateSubForCustomerEstimateRequest

type EstimateCreateSubForCustomerEstimateRequest struct {

	// billing alignment mode
	BillingAlignmentMode string `json:"billing_alignment_mode,omitempty"`

	// billing cycles
	BillingCycles int32 `json:"billing_cycles,omitempty"`

	// coupon ids
	CouponIds string `json:"coupon_ids,omitempty"`

	// invoice immediately
	InvoiceImmediately bool `json:"invoice_immediately,omitempty"`

	// shipping address city
	ShippingAddressCity string `json:"shipping_address[city],omitempty"`

	// shipping address country
	ShippingAddressCountry string `json:"shipping_address[country],omitempty"`

	// shipping address line1
	ShippingAddressLine1 string `json:"shipping_address[line1],omitempty"`

	// shipping address line2
	ShippingAddressLine2 string `json:"shipping_address[line2],omitempty"`

	// shipping address line3
	ShippingAddressLine3 string `json:"shipping_address[line3],omitempty"`

	// shipping address state code
	ShippingAddressStateCode string `json:"shipping_address[state_code],omitempty"`

	// shipping address validation status
	ShippingAddressValidationStatus string `json:"shipping_address[validation_status],omitempty"`

	// shipping address zip
	ShippingAddressZip string `json:"shipping_address[zip],omitempty"`

	// subscription id
	SubscriptionID string `json:"subscription[id],omitempty"`

	// subscription plan id
	SubscriptionPlanID string `json:"subscription[plan_id],omitempty"`

	// subscription plan quantity
	SubscriptionPlanQuantity int32 `json:"subscription[plan_quantity],omitempty"`

	// subscription plan unit price
	SubscriptionPlanUnitPrice int32 `json:"subscription[plan_unit_price],omitempty"`

	// subscription setup fee
	SubscriptionSetupFee int32 `json:"subscription[setup_fee],omitempty"`

	// subscription start date
	SubscriptionStartDate int64 `json:"subscription[start_date],omitempty"`

	// subscription trial end
	SubscriptionTrialEnd int64 `json:"subscription[trial_end],omitempty"`

	// terms to charge
	TermsToCharge int32 `json:"terms_to_charge,omitempty"`

	// use existing balances
	UseExistingBalances bool `json:"use_existing_balances,omitempty"`
}

/* polymorph EstimateCreateSubForCustomerEstimateRequest billing_alignment_mode false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest billing_cycles false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest coupon_ids false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest invoice_immediately false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[city] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[country] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[line1] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[line2] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[line3] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[state_code] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[validation_status] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest shipping_address[zip] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[id] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[plan_id] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[plan_quantity] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[plan_unit_price] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[setup_fee] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[start_date] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest subscription[trial_end] false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest terms_to_charge false */

/* polymorph EstimateCreateSubForCustomerEstimateRequest use_existing_balances false */

// Validate validates this estimate create sub for customer estimate request
func (m *EstimateCreateSubForCustomerEstimateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAlignmentMode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateShippingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var estimateCreateSubForCustomerEstimateRequestTypeBillingAlignmentModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["immediate","delayed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubForCustomerEstimateRequestTypeBillingAlignmentModePropEnum = append(estimateCreateSubForCustomerEstimateRequestTypeBillingAlignmentModePropEnum, v)
	}
}

const (
	// EstimateCreateSubForCustomerEstimateRequestBillingAlignmentModeImmediate captures enum value "immediate"
	EstimateCreateSubForCustomerEstimateRequestBillingAlignmentModeImmediate string = "immediate"
	// EstimateCreateSubForCustomerEstimateRequestBillingAlignmentModeDelayed captures enum value "delayed"
	EstimateCreateSubForCustomerEstimateRequestBillingAlignmentModeDelayed string = "delayed"
)

// prop value enum
func (m *EstimateCreateSubForCustomerEstimateRequest) validateBillingAlignmentModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubForCustomerEstimateRequestTypeBillingAlignmentModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubForCustomerEstimateRequest) validateBillingAlignmentMode(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAlignmentMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAlignmentModeEnum("billing_alignment_mode", "body", m.BillingAlignmentMode); err != nil {
		return err
	}

	return nil
}

var estimateCreateSubForCustomerEstimateRequestTypeShippingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubForCustomerEstimateRequestTypeShippingAddressValidationStatusPropEnum = append(estimateCreateSubForCustomerEstimateRequestTypeShippingAddressValidationStatusPropEnum, v)
	}
}

const (
	// EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusNotValidated string = "not_validated"
	// EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusValid captures enum value "valid"
	EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusValid string = "valid"
	// EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusPartiallyValid string = "partially_valid"
	// EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusInvalid captures enum value "invalid"
	EstimateCreateSubForCustomerEstimateRequestShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *EstimateCreateSubForCustomerEstimateRequest) validateShippingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubForCustomerEstimateRequestTypeShippingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubForCustomerEstimateRequest) validateShippingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateShippingAddressValidationStatusEnum("shipping_address[validation_status]", "body", m.ShippingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EstimateCreateSubForCustomerEstimateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EstimateCreateSubForCustomerEstimateRequest) UnmarshalBinary(b []byte) error {
	var res EstimateCreateSubForCustomerEstimateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
