// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreditNoteCreateRequest credit note create request
// swagger:model CreditNoteCreateRequest

type CreditNoteCreateRequest struct {

	// customer notes
	CustomerNotes string `json:"customer_notes,omitempty"`

	// date
	Date int64 `json:"date,omitempty"`

	// reason code
	ReasonCode string `json:"reason_code,omitempty"`

	// reference invoice id
	ReferenceInvoiceID string `json:"reference_invoice_id,omitempty"`

	// total
	Total int32 `json:"total,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

/* polymorph CreditNoteCreateRequest customer_notes false */

/* polymorph CreditNoteCreateRequest date false */

/* polymorph CreditNoteCreateRequest reason_code false */

/* polymorph CreditNoteCreateRequest reference_invoice_id false */

/* polymorph CreditNoteCreateRequest total false */

/* polymorph CreditNoteCreateRequest type false */

// Validate validates this credit note create request
func (m *CreditNoteCreateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReasonCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var creditNoteCreateRequestTypeReasonCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["write_off","subscription_change","subscription_cancellation","chargeback","product_unsatisfactory","service_unsatisfactory","order_change","order_cancellation","waiver","other","fraudulent"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		creditNoteCreateRequestTypeReasonCodePropEnum = append(creditNoteCreateRequestTypeReasonCodePropEnum, v)
	}
}

const (
	// CreditNoteCreateRequestReasonCodeWriteOff captures enum value "write_off"
	CreditNoteCreateRequestReasonCodeWriteOff string = "write_off"
	// CreditNoteCreateRequestReasonCodeSubscriptionChange captures enum value "subscription_change"
	CreditNoteCreateRequestReasonCodeSubscriptionChange string = "subscription_change"
	// CreditNoteCreateRequestReasonCodeSubscriptionCancellation captures enum value "subscription_cancellation"
	CreditNoteCreateRequestReasonCodeSubscriptionCancellation string = "subscription_cancellation"
	// CreditNoteCreateRequestReasonCodeChargeback captures enum value "chargeback"
	CreditNoteCreateRequestReasonCodeChargeback string = "chargeback"
	// CreditNoteCreateRequestReasonCodeProductUnsatisfactory captures enum value "product_unsatisfactory"
	CreditNoteCreateRequestReasonCodeProductUnsatisfactory string = "product_unsatisfactory"
	// CreditNoteCreateRequestReasonCodeServiceUnsatisfactory captures enum value "service_unsatisfactory"
	CreditNoteCreateRequestReasonCodeServiceUnsatisfactory string = "service_unsatisfactory"
	// CreditNoteCreateRequestReasonCodeOrderChange captures enum value "order_change"
	CreditNoteCreateRequestReasonCodeOrderChange string = "order_change"
	// CreditNoteCreateRequestReasonCodeOrderCancellation captures enum value "order_cancellation"
	CreditNoteCreateRequestReasonCodeOrderCancellation string = "order_cancellation"
	// CreditNoteCreateRequestReasonCodeWaiver captures enum value "waiver"
	CreditNoteCreateRequestReasonCodeWaiver string = "waiver"
	// CreditNoteCreateRequestReasonCodeOther captures enum value "other"
	CreditNoteCreateRequestReasonCodeOther string = "other"
	// CreditNoteCreateRequestReasonCodeFraudulent captures enum value "fraudulent"
	CreditNoteCreateRequestReasonCodeFraudulent string = "fraudulent"
)

// prop value enum
func (m *CreditNoteCreateRequest) validateReasonCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, creditNoteCreateRequestTypeReasonCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreditNoteCreateRequest) validateReasonCode(formats strfmt.Registry) error {

	if swag.IsZero(m.ReasonCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonCodeEnum("reason_code", "body", m.ReasonCode); err != nil {
		return err
	}

	return nil
}

var creditNoteCreateRequestTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["card","paypal_express_checkout","amazon_payments","direct_debit","generic","alipay","unionpay","apple_pay"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		creditNoteCreateRequestTypeTypePropEnum = append(creditNoteCreateRequestTypeTypePropEnum, v)
	}
}

const (
	// CreditNoteCreateRequestTypeCard captures enum value "card"
	CreditNoteCreateRequestTypeCard string = "card"
	// CreditNoteCreateRequestTypePaypalExpressCheckout captures enum value "paypal_express_checkout"
	CreditNoteCreateRequestTypePaypalExpressCheckout string = "paypal_express_checkout"
	// CreditNoteCreateRequestTypeAmazonPayments captures enum value "amazon_payments"
	CreditNoteCreateRequestTypeAmazonPayments string = "amazon_payments"
	// CreditNoteCreateRequestTypeDirectDebit captures enum value "direct_debit"
	CreditNoteCreateRequestTypeDirectDebit string = "direct_debit"
	// CreditNoteCreateRequestTypeGeneric captures enum value "generic"
	CreditNoteCreateRequestTypeGeneric string = "generic"
	// CreditNoteCreateRequestTypeAlipay captures enum value "alipay"
	CreditNoteCreateRequestTypeAlipay string = "alipay"
	// CreditNoteCreateRequestTypeUnionpay captures enum value "unionpay"
	CreditNoteCreateRequestTypeUnionpay string = "unionpay"
	// CreditNoteCreateRequestTypeApplePay captures enum value "apple_pay"
	CreditNoteCreateRequestTypeApplePay string = "apple_pay"
)

// prop value enum
func (m *CreditNoteCreateRequest) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, creditNoteCreateRequestTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreditNoteCreateRequest) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreditNoteCreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreditNoteCreateRequest) UnmarshalBinary(b []byte) error {
	var res CreditNoteCreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
