// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomerChangeBillingDateRequest customer change billing date request
// swagger:model CustomerChangeBillingDateRequest
type CustomerChangeBillingDateRequest struct {

	// billing date
	BillingDate int32 `json:"billing_date,omitempty"`

	// billing date mode
	BillingDateMode string `json:"billing_date_mode,omitempty"`

	// billing day of week
	BillingDayOfWeek string `json:"billing_day_of_week,omitempty"`

	// billing day of week mode
	BillingDayOfWeekMode string `json:"billing_day_of_week_mode,omitempty"`
}

// Validate validates this customer change billing date request
func (m *CustomerChangeBillingDateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingDateMode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBillingDayOfWeek(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBillingDayOfWeekMode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var customerChangeBillingDateRequestTypeBillingDateModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["using_defaults","manually_set"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customerChangeBillingDateRequestTypeBillingDateModePropEnum = append(customerChangeBillingDateRequestTypeBillingDateModePropEnum, v)
	}
}

const (

	// CustomerChangeBillingDateRequestBillingDateModeUsingDefaults captures enum value "using_defaults"
	CustomerChangeBillingDateRequestBillingDateModeUsingDefaults string = "using_defaults"

	// CustomerChangeBillingDateRequestBillingDateModeManuallySet captures enum value "manually_set"
	CustomerChangeBillingDateRequestBillingDateModeManuallySet string = "manually_set"
)

// prop value enum
func (m *CustomerChangeBillingDateRequest) validateBillingDateModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, customerChangeBillingDateRequestTypeBillingDateModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CustomerChangeBillingDateRequest) validateBillingDateMode(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingDateMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingDateModeEnum("billing_date_mode", "body", m.BillingDateMode); err != nil {
		return err
	}

	return nil
}

var customerChangeBillingDateRequestTypeBillingDayOfWeekPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["sunday","monday","tuesday","wednesday","thursday","friday","saturday"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customerChangeBillingDateRequestTypeBillingDayOfWeekPropEnum = append(customerChangeBillingDateRequestTypeBillingDayOfWeekPropEnum, v)
	}
}

const (

	// CustomerChangeBillingDateRequestBillingDayOfWeekSunday captures enum value "sunday"
	CustomerChangeBillingDateRequestBillingDayOfWeekSunday string = "sunday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekMonday captures enum value "monday"
	CustomerChangeBillingDateRequestBillingDayOfWeekMonday string = "monday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekTuesday captures enum value "tuesday"
	CustomerChangeBillingDateRequestBillingDayOfWeekTuesday string = "tuesday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekWednesday captures enum value "wednesday"
	CustomerChangeBillingDateRequestBillingDayOfWeekWednesday string = "wednesday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekThursday captures enum value "thursday"
	CustomerChangeBillingDateRequestBillingDayOfWeekThursday string = "thursday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekFriday captures enum value "friday"
	CustomerChangeBillingDateRequestBillingDayOfWeekFriday string = "friday"

	// CustomerChangeBillingDateRequestBillingDayOfWeekSaturday captures enum value "saturday"
	CustomerChangeBillingDateRequestBillingDayOfWeekSaturday string = "saturday"
)

// prop value enum
func (m *CustomerChangeBillingDateRequest) validateBillingDayOfWeekEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, customerChangeBillingDateRequestTypeBillingDayOfWeekPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CustomerChangeBillingDateRequest) validateBillingDayOfWeek(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingDayOfWeek) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingDayOfWeekEnum("billing_day_of_week", "body", m.BillingDayOfWeek); err != nil {
		return err
	}

	return nil
}

var customerChangeBillingDateRequestTypeBillingDayOfWeekModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["using_defaults","manually_set"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customerChangeBillingDateRequestTypeBillingDayOfWeekModePropEnum = append(customerChangeBillingDateRequestTypeBillingDayOfWeekModePropEnum, v)
	}
}

const (

	// CustomerChangeBillingDateRequestBillingDayOfWeekModeUsingDefaults captures enum value "using_defaults"
	CustomerChangeBillingDateRequestBillingDayOfWeekModeUsingDefaults string = "using_defaults"

	// CustomerChangeBillingDateRequestBillingDayOfWeekModeManuallySet captures enum value "manually_set"
	CustomerChangeBillingDateRequestBillingDayOfWeekModeManuallySet string = "manually_set"
)

// prop value enum
func (m *CustomerChangeBillingDateRequest) validateBillingDayOfWeekModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, customerChangeBillingDateRequestTypeBillingDayOfWeekModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CustomerChangeBillingDateRequest) validateBillingDayOfWeekMode(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingDayOfWeekMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingDayOfWeekModeEnum("billing_day_of_week_mode", "body", m.BillingDayOfWeekMode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerChangeBillingDateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerChangeBillingDateRequest) UnmarshalBinary(b []byte) error {
	var res CustomerChangeBillingDateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
