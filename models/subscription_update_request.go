// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SubscriptionUpdateRequest subscription update request
// swagger:model SubscriptionUpdateRequest
type SubscriptionUpdateRequest struct {

	// billing address city
	BillingAddressCity string `json:"billing_address[city],omitempty"`

	// billing address company
	BillingAddressCompany string `json:"billing_address[company],omitempty"`

	// billing address country
	BillingAddressCountry string `json:"billing_address[country],omitempty"`

	// billing address email
	BillingAddressEmail string `json:"billing_address[email],omitempty"`

	// billing address first name
	BillingAddressFirstName string `json:"billing_address[first_name],omitempty"`

	// billing address last name
	BillingAddressLastName string `json:"billing_address[last_name],omitempty"`

	// billing address line1
	BillingAddressLine1 string `json:"billing_address[line1],omitempty"`

	// billing address line2
	BillingAddressLine2 string `json:"billing_address[line2],omitempty"`

	// billing address line3
	BillingAddressLine3 string `json:"billing_address[line3],omitempty"`

	// billing address phone
	BillingAddressPhone string `json:"billing_address[phone],omitempty"`

	// billing address state
	BillingAddressState string `json:"billing_address[state],omitempty"`

	// billing address state code
	BillingAddressStateCode string `json:"billing_address[state_code],omitempty"`

	// billing address validation status
	BillingAddressValidationStatus string `json:"billing_address[validation_status],omitempty"`

	// billing address zip
	BillingAddressZip string `json:"billing_address[zip],omitempty"`

	// billing alignment mode
	BillingAlignmentMode string `json:"billing_alignment_mode,omitempty"`

	// billing cycles
	BillingCycles int32 `json:"billing_cycles,omitempty"`

	// card billing addr1
	CardBillingAddr1 string `json:"card[billing_addr1],omitempty"`

	// card billing addr2
	CardBillingAddr2 string `json:"card[billing_addr2],omitempty"`

	// card billing city
	CardBillingCity string `json:"card[billing_city],omitempty"`

	// card billing country
	CardBillingCountry string `json:"card[billing_country],omitempty"`

	// card billing state
	CardBillingState string `json:"card[billing_state],omitempty"`

	// card billing state code
	CardBillingStateCode string `json:"card[billing_state_code],omitempty"`

	// card billing zip
	CardBillingZip string `json:"card[billing_zip],omitempty"`

	// card cvv
	CardCvv string `json:"card[cvv],omitempty"`

	// card expiry month
	CardExpiryMonth int32 `json:"card[expiry_month],omitempty"`

	// card expiry year
	CardExpiryYear int32 `json:"card[expiry_year],omitempty"`

	// card first name
	CardFirstName string `json:"card[first_name],omitempty"`

	// card gateway
	CardGateway string `json:"card[gateway],omitempty"`

	// card gateway account id
	CardGatewayAccountID string `json:"card[gateway_account_id],omitempty"`

	// card ip address
	CardIPAddress string `json:"card[ip_address],omitempty"`

	// card last name
	CardLastName string `json:"card[last_name],omitempty"`

	// card number
	CardNumber string `json:"card[number],omitempty"`

	// card tmp token
	CardTmpToken string `json:"card[tmp_token],omitempty"`

	// coupon
	Coupon string `json:"coupon,omitempty"`

	// coupon ids
	CouponIds string `json:"coupon_ids,omitempty"`

	// customer registered for gst
	CustomerRegisteredForGst bool `json:"customer[registered_for_gst],omitempty"`

	// customer vat number
	CustomerVatNumber string `json:"customer[vat_number],omitempty"`

	// end of term
	EndOfTerm bool `json:"end_of_term,omitempty"`

	// force term reset
	ForceTermReset bool `json:"force_term_reset,omitempty"`

	// invoice immediately
	InvoiceImmediately bool `json:"invoice_immediately,omitempty"`

	// invoice notes
	InvoiceNotes string `json:"invoice_notes,omitempty"`

	// meta data
	MetaData interface{} `json:"meta_data,omitempty"`

	// payment method gateway
	PaymentMethodGateway string `json:"payment_method[gateway],omitempty"`

	// payment method gateway account id
	PaymentMethodGatewayAccountID string `json:"payment_method[gateway_account_id],omitempty"`

	// payment method issuing country
	PaymentMethodIssuingCountry string `json:"payment_method[issuing_country],omitempty"`

	// payment method reference id
	PaymentMethodReferenceID string `json:"payment_method[reference_id],omitempty"`

	// payment method tmp token
	PaymentMethodTmpToken string `json:"payment_method[tmp_token],omitempty"`

	// payment method type
	PaymentMethodType string `json:"payment_method[type],omitempty"`

	// plan id
	PlanID string `json:"plan_id,omitempty"`

	// plan quantity
	PlanQuantity int32 `json:"plan_quantity,omitempty"`

	// plan unit price
	PlanUnitPrice int32 `json:"plan_unit_price,omitempty"`

	// po number
	PoNumber string `json:"po_number,omitempty"`

	// prorate
	Prorate bool `json:"prorate,omitempty"`

	// reactivate
	Reactivate bool `json:"reactivate,omitempty"`

	// reactivate from
	ReactivateFrom int64 `json:"reactivate_from,omitempty"`

	// replace addon list
	ReplaceAddonList bool `json:"replace_addon_list,omitempty"`

	// replace coupon list
	ReplaceCouponList bool `json:"replace_coupon_list,omitempty"`

	// setup fee
	SetupFee int32 `json:"setup_fee,omitempty"`

	// shipping address city
	ShippingAddressCity string `json:"shipping_address[city],omitempty"`

	// shipping address company
	ShippingAddressCompany string `json:"shipping_address[company],omitempty"`

	// shipping address country
	ShippingAddressCountry string `json:"shipping_address[country],omitempty"`

	// shipping address email
	ShippingAddressEmail string `json:"shipping_address[email],omitempty"`

	// shipping address first name
	ShippingAddressFirstName string `json:"shipping_address[first_name],omitempty"`

	// shipping address last name
	ShippingAddressLastName string `json:"shipping_address[last_name],omitempty"`

	// shipping address line1
	ShippingAddressLine1 string `json:"shipping_address[line1],omitempty"`

	// shipping address line2
	ShippingAddressLine2 string `json:"shipping_address[line2],omitempty"`

	// shipping address line3
	ShippingAddressLine3 string `json:"shipping_address[line3],omitempty"`

	// shipping address phone
	ShippingAddressPhone string `json:"shipping_address[phone],omitempty"`

	// shipping address state
	ShippingAddressState string `json:"shipping_address[state],omitempty"`

	// shipping address state code
	ShippingAddressStateCode string `json:"shipping_address[state_code],omitempty"`

	// shipping address validation status
	ShippingAddressValidationStatus string `json:"shipping_address[validation_status],omitempty"`

	// shipping address zip
	ShippingAddressZip string `json:"shipping_address[zip],omitempty"`

	// start date
	StartDate int64 `json:"start_date,omitempty"`

	// terms to charge
	TermsToCharge int32 `json:"terms_to_charge,omitempty"`

	// trial end
	TrialEnd int64 `json:"trial_end,omitempty"`
}

// Validate validates this subscription update request
func (m *SubscriptionUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBillingAlignmentMode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCardGateway(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePaymentMethodGateway(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePaymentMethodType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateShippingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var subscriptionUpdateRequestTypeBillingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypeBillingAddressValidationStatusPropEnum = append(subscriptionUpdateRequestTypeBillingAddressValidationStatusPropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestBillingAddressValidationStatusNotValidated captures enum value "not_validated"
	SubscriptionUpdateRequestBillingAddressValidationStatusNotValidated string = "not_validated"

	// SubscriptionUpdateRequestBillingAddressValidationStatusValid captures enum value "valid"
	SubscriptionUpdateRequestBillingAddressValidationStatusValid string = "valid"

	// SubscriptionUpdateRequestBillingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	SubscriptionUpdateRequestBillingAddressValidationStatusPartiallyValid string = "partially_valid"

	// SubscriptionUpdateRequestBillingAddressValidationStatusInvalid captures enum value "invalid"
	SubscriptionUpdateRequestBillingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validateBillingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypeBillingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validateBillingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAddressValidationStatusEnum("billing_address[validation_status]", "body", m.BillingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var subscriptionUpdateRequestTypeBillingAlignmentModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["immediate","delayed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypeBillingAlignmentModePropEnum = append(subscriptionUpdateRequestTypeBillingAlignmentModePropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestBillingAlignmentModeImmediate captures enum value "immediate"
	SubscriptionUpdateRequestBillingAlignmentModeImmediate string = "immediate"

	// SubscriptionUpdateRequestBillingAlignmentModeDelayed captures enum value "delayed"
	SubscriptionUpdateRequestBillingAlignmentModeDelayed string = "delayed"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validateBillingAlignmentModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypeBillingAlignmentModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validateBillingAlignmentMode(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAlignmentMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAlignmentModeEnum("billing_alignment_mode", "body", m.BillingAlignmentMode); err != nil {
		return err
	}

	return nil
}

var subscriptionUpdateRequestTypeCardGatewayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["chargebee","stripe","wepay","braintree","authorize_net","paypal_pro","pin","eway","eway_rapid","worldpay","balanced_payments","beanstream","bluepay","elavon","first_data_global","hdfc","migs","nmi","ogone","paymill","paypal_payflow_pro","sage_pay","tco","wirecard","amazon_payments","paypal_express_checkout","gocardless","adyen","orbital","moneris_us","moneris","not_applicable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypeCardGatewayPropEnum = append(subscriptionUpdateRequestTypeCardGatewayPropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestCardGatewayChargebee captures enum value "chargebee"
	SubscriptionUpdateRequestCardGatewayChargebee string = "chargebee"

	// SubscriptionUpdateRequestCardGatewayStripe captures enum value "stripe"
	SubscriptionUpdateRequestCardGatewayStripe string = "stripe"

	// SubscriptionUpdateRequestCardGatewayWepay captures enum value "wepay"
	SubscriptionUpdateRequestCardGatewayWepay string = "wepay"

	// SubscriptionUpdateRequestCardGatewayBraintree captures enum value "braintree"
	SubscriptionUpdateRequestCardGatewayBraintree string = "braintree"

	// SubscriptionUpdateRequestCardGatewayAuthorizeNet captures enum value "authorize_net"
	SubscriptionUpdateRequestCardGatewayAuthorizeNet string = "authorize_net"

	// SubscriptionUpdateRequestCardGatewayPaypalPro captures enum value "paypal_pro"
	SubscriptionUpdateRequestCardGatewayPaypalPro string = "paypal_pro"

	// SubscriptionUpdateRequestCardGatewayPin captures enum value "pin"
	SubscriptionUpdateRequestCardGatewayPin string = "pin"

	// SubscriptionUpdateRequestCardGatewayEway captures enum value "eway"
	SubscriptionUpdateRequestCardGatewayEway string = "eway"

	// SubscriptionUpdateRequestCardGatewayEwayRapid captures enum value "eway_rapid"
	SubscriptionUpdateRequestCardGatewayEwayRapid string = "eway_rapid"

	// SubscriptionUpdateRequestCardGatewayWorldpay captures enum value "worldpay"
	SubscriptionUpdateRequestCardGatewayWorldpay string = "worldpay"

	// SubscriptionUpdateRequestCardGatewayBalancedPayments captures enum value "balanced_payments"
	SubscriptionUpdateRequestCardGatewayBalancedPayments string = "balanced_payments"

	// SubscriptionUpdateRequestCardGatewayBeanstream captures enum value "beanstream"
	SubscriptionUpdateRequestCardGatewayBeanstream string = "beanstream"

	// SubscriptionUpdateRequestCardGatewayBluepay captures enum value "bluepay"
	SubscriptionUpdateRequestCardGatewayBluepay string = "bluepay"

	// SubscriptionUpdateRequestCardGatewayElavon captures enum value "elavon"
	SubscriptionUpdateRequestCardGatewayElavon string = "elavon"

	// SubscriptionUpdateRequestCardGatewayFirstDataGlobal captures enum value "first_data_global"
	SubscriptionUpdateRequestCardGatewayFirstDataGlobal string = "first_data_global"

	// SubscriptionUpdateRequestCardGatewayHdfc captures enum value "hdfc"
	SubscriptionUpdateRequestCardGatewayHdfc string = "hdfc"

	// SubscriptionUpdateRequestCardGatewayMigs captures enum value "migs"
	SubscriptionUpdateRequestCardGatewayMigs string = "migs"

	// SubscriptionUpdateRequestCardGatewayNmi captures enum value "nmi"
	SubscriptionUpdateRequestCardGatewayNmi string = "nmi"

	// SubscriptionUpdateRequestCardGatewayOgone captures enum value "ogone"
	SubscriptionUpdateRequestCardGatewayOgone string = "ogone"

	// SubscriptionUpdateRequestCardGatewayPaymill captures enum value "paymill"
	SubscriptionUpdateRequestCardGatewayPaymill string = "paymill"

	// SubscriptionUpdateRequestCardGatewayPaypalPayflowPro captures enum value "paypal_payflow_pro"
	SubscriptionUpdateRequestCardGatewayPaypalPayflowPro string = "paypal_payflow_pro"

	// SubscriptionUpdateRequestCardGatewaySagePay captures enum value "sage_pay"
	SubscriptionUpdateRequestCardGatewaySagePay string = "sage_pay"

	// SubscriptionUpdateRequestCardGatewayTco captures enum value "tco"
	SubscriptionUpdateRequestCardGatewayTco string = "tco"

	// SubscriptionUpdateRequestCardGatewayWirecard captures enum value "wirecard"
	SubscriptionUpdateRequestCardGatewayWirecard string = "wirecard"

	// SubscriptionUpdateRequestCardGatewayAmazonPayments captures enum value "amazon_payments"
	SubscriptionUpdateRequestCardGatewayAmazonPayments string = "amazon_payments"

	// SubscriptionUpdateRequestCardGatewayPaypalExpressCheckout captures enum value "paypal_express_checkout"
	SubscriptionUpdateRequestCardGatewayPaypalExpressCheckout string = "paypal_express_checkout"

	// SubscriptionUpdateRequestCardGatewayGocardless captures enum value "gocardless"
	SubscriptionUpdateRequestCardGatewayGocardless string = "gocardless"

	// SubscriptionUpdateRequestCardGatewayAdyen captures enum value "adyen"
	SubscriptionUpdateRequestCardGatewayAdyen string = "adyen"

	// SubscriptionUpdateRequestCardGatewayOrbital captures enum value "orbital"
	SubscriptionUpdateRequestCardGatewayOrbital string = "orbital"

	// SubscriptionUpdateRequestCardGatewayMonerisUs captures enum value "moneris_us"
	SubscriptionUpdateRequestCardGatewayMonerisUs string = "moneris_us"

	// SubscriptionUpdateRequestCardGatewayMoneris captures enum value "moneris"
	SubscriptionUpdateRequestCardGatewayMoneris string = "moneris"

	// SubscriptionUpdateRequestCardGatewayNotApplicable captures enum value "not_applicable"
	SubscriptionUpdateRequestCardGatewayNotApplicable string = "not_applicable"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validateCardGatewayEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypeCardGatewayPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validateCardGateway(formats strfmt.Registry) error {

	if swag.IsZero(m.CardGateway) { // not required
		return nil
	}

	// value enum
	if err := m.validateCardGatewayEnum("card[gateway]", "body", m.CardGateway); err != nil {
		return err
	}

	return nil
}

var subscriptionUpdateRequestTypePaymentMethodGatewayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["chargebee","stripe","wepay","braintree","authorize_net","paypal_pro","pin","eway","eway_rapid","worldpay","balanced_payments","beanstream","bluepay","elavon","first_data_global","hdfc","migs","nmi","ogone","paymill","paypal_payflow_pro","sage_pay","tco","wirecard","amazon_payments","paypal_express_checkout","gocardless","adyen","orbital","moneris_us","moneris","not_applicable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypePaymentMethodGatewayPropEnum = append(subscriptionUpdateRequestTypePaymentMethodGatewayPropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestPaymentMethodGatewayChargebee captures enum value "chargebee"
	SubscriptionUpdateRequestPaymentMethodGatewayChargebee string = "chargebee"

	// SubscriptionUpdateRequestPaymentMethodGatewayStripe captures enum value "stripe"
	SubscriptionUpdateRequestPaymentMethodGatewayStripe string = "stripe"

	// SubscriptionUpdateRequestPaymentMethodGatewayWepay captures enum value "wepay"
	SubscriptionUpdateRequestPaymentMethodGatewayWepay string = "wepay"

	// SubscriptionUpdateRequestPaymentMethodGatewayBraintree captures enum value "braintree"
	SubscriptionUpdateRequestPaymentMethodGatewayBraintree string = "braintree"

	// SubscriptionUpdateRequestPaymentMethodGatewayAuthorizeNet captures enum value "authorize_net"
	SubscriptionUpdateRequestPaymentMethodGatewayAuthorizeNet string = "authorize_net"

	// SubscriptionUpdateRequestPaymentMethodGatewayPaypalPro captures enum value "paypal_pro"
	SubscriptionUpdateRequestPaymentMethodGatewayPaypalPro string = "paypal_pro"

	// SubscriptionUpdateRequestPaymentMethodGatewayPin captures enum value "pin"
	SubscriptionUpdateRequestPaymentMethodGatewayPin string = "pin"

	// SubscriptionUpdateRequestPaymentMethodGatewayEway captures enum value "eway"
	SubscriptionUpdateRequestPaymentMethodGatewayEway string = "eway"

	// SubscriptionUpdateRequestPaymentMethodGatewayEwayRapid captures enum value "eway_rapid"
	SubscriptionUpdateRequestPaymentMethodGatewayEwayRapid string = "eway_rapid"

	// SubscriptionUpdateRequestPaymentMethodGatewayWorldpay captures enum value "worldpay"
	SubscriptionUpdateRequestPaymentMethodGatewayWorldpay string = "worldpay"

	// SubscriptionUpdateRequestPaymentMethodGatewayBalancedPayments captures enum value "balanced_payments"
	SubscriptionUpdateRequestPaymentMethodGatewayBalancedPayments string = "balanced_payments"

	// SubscriptionUpdateRequestPaymentMethodGatewayBeanstream captures enum value "beanstream"
	SubscriptionUpdateRequestPaymentMethodGatewayBeanstream string = "beanstream"

	// SubscriptionUpdateRequestPaymentMethodGatewayBluepay captures enum value "bluepay"
	SubscriptionUpdateRequestPaymentMethodGatewayBluepay string = "bluepay"

	// SubscriptionUpdateRequestPaymentMethodGatewayElavon captures enum value "elavon"
	SubscriptionUpdateRequestPaymentMethodGatewayElavon string = "elavon"

	// SubscriptionUpdateRequestPaymentMethodGatewayFirstDataGlobal captures enum value "first_data_global"
	SubscriptionUpdateRequestPaymentMethodGatewayFirstDataGlobal string = "first_data_global"

	// SubscriptionUpdateRequestPaymentMethodGatewayHdfc captures enum value "hdfc"
	SubscriptionUpdateRequestPaymentMethodGatewayHdfc string = "hdfc"

	// SubscriptionUpdateRequestPaymentMethodGatewayMigs captures enum value "migs"
	SubscriptionUpdateRequestPaymentMethodGatewayMigs string = "migs"

	// SubscriptionUpdateRequestPaymentMethodGatewayNmi captures enum value "nmi"
	SubscriptionUpdateRequestPaymentMethodGatewayNmi string = "nmi"

	// SubscriptionUpdateRequestPaymentMethodGatewayOgone captures enum value "ogone"
	SubscriptionUpdateRequestPaymentMethodGatewayOgone string = "ogone"

	// SubscriptionUpdateRequestPaymentMethodGatewayPaymill captures enum value "paymill"
	SubscriptionUpdateRequestPaymentMethodGatewayPaymill string = "paymill"

	// SubscriptionUpdateRequestPaymentMethodGatewayPaypalPayflowPro captures enum value "paypal_payflow_pro"
	SubscriptionUpdateRequestPaymentMethodGatewayPaypalPayflowPro string = "paypal_payflow_pro"

	// SubscriptionUpdateRequestPaymentMethodGatewaySagePay captures enum value "sage_pay"
	SubscriptionUpdateRequestPaymentMethodGatewaySagePay string = "sage_pay"

	// SubscriptionUpdateRequestPaymentMethodGatewayTco captures enum value "tco"
	SubscriptionUpdateRequestPaymentMethodGatewayTco string = "tco"

	// SubscriptionUpdateRequestPaymentMethodGatewayWirecard captures enum value "wirecard"
	SubscriptionUpdateRequestPaymentMethodGatewayWirecard string = "wirecard"

	// SubscriptionUpdateRequestPaymentMethodGatewayAmazonPayments captures enum value "amazon_payments"
	SubscriptionUpdateRequestPaymentMethodGatewayAmazonPayments string = "amazon_payments"

	// SubscriptionUpdateRequestPaymentMethodGatewayPaypalExpressCheckout captures enum value "paypal_express_checkout"
	SubscriptionUpdateRequestPaymentMethodGatewayPaypalExpressCheckout string = "paypal_express_checkout"

	// SubscriptionUpdateRequestPaymentMethodGatewayGocardless captures enum value "gocardless"
	SubscriptionUpdateRequestPaymentMethodGatewayGocardless string = "gocardless"

	// SubscriptionUpdateRequestPaymentMethodGatewayAdyen captures enum value "adyen"
	SubscriptionUpdateRequestPaymentMethodGatewayAdyen string = "adyen"

	// SubscriptionUpdateRequestPaymentMethodGatewayOrbital captures enum value "orbital"
	SubscriptionUpdateRequestPaymentMethodGatewayOrbital string = "orbital"

	// SubscriptionUpdateRequestPaymentMethodGatewayMonerisUs captures enum value "moneris_us"
	SubscriptionUpdateRequestPaymentMethodGatewayMonerisUs string = "moneris_us"

	// SubscriptionUpdateRequestPaymentMethodGatewayMoneris captures enum value "moneris"
	SubscriptionUpdateRequestPaymentMethodGatewayMoneris string = "moneris"

	// SubscriptionUpdateRequestPaymentMethodGatewayNotApplicable captures enum value "not_applicable"
	SubscriptionUpdateRequestPaymentMethodGatewayNotApplicable string = "not_applicable"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validatePaymentMethodGatewayEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypePaymentMethodGatewayPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validatePaymentMethodGateway(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentMethodGateway) { // not required
		return nil
	}

	// value enum
	if err := m.validatePaymentMethodGatewayEnum("payment_method[gateway]", "body", m.PaymentMethodGateway); err != nil {
		return err
	}

	return nil
}

var subscriptionUpdateRequestTypePaymentMethodTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["card","paypal_express_checkout","amazon_payments","direct_debit","generic","alipay","unionpay","apple_pay"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypePaymentMethodTypePropEnum = append(subscriptionUpdateRequestTypePaymentMethodTypePropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestPaymentMethodTypeCard captures enum value "card"
	SubscriptionUpdateRequestPaymentMethodTypeCard string = "card"

	// SubscriptionUpdateRequestPaymentMethodTypePaypalExpressCheckout captures enum value "paypal_express_checkout"
	SubscriptionUpdateRequestPaymentMethodTypePaypalExpressCheckout string = "paypal_express_checkout"

	// SubscriptionUpdateRequestPaymentMethodTypeAmazonPayments captures enum value "amazon_payments"
	SubscriptionUpdateRequestPaymentMethodTypeAmazonPayments string = "amazon_payments"

	// SubscriptionUpdateRequestPaymentMethodTypeDirectDebit captures enum value "direct_debit"
	SubscriptionUpdateRequestPaymentMethodTypeDirectDebit string = "direct_debit"

	// SubscriptionUpdateRequestPaymentMethodTypeGeneric captures enum value "generic"
	SubscriptionUpdateRequestPaymentMethodTypeGeneric string = "generic"

	// SubscriptionUpdateRequestPaymentMethodTypeAlipay captures enum value "alipay"
	SubscriptionUpdateRequestPaymentMethodTypeAlipay string = "alipay"

	// SubscriptionUpdateRequestPaymentMethodTypeUnionpay captures enum value "unionpay"
	SubscriptionUpdateRequestPaymentMethodTypeUnionpay string = "unionpay"

	// SubscriptionUpdateRequestPaymentMethodTypeApplePay captures enum value "apple_pay"
	SubscriptionUpdateRequestPaymentMethodTypeApplePay string = "apple_pay"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validatePaymentMethodTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypePaymentMethodTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validatePaymentMethodType(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentMethodType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePaymentMethodTypeEnum("payment_method[type]", "body", m.PaymentMethodType); err != nil {
		return err
	}

	return nil
}

var subscriptionUpdateRequestTypeShippingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionUpdateRequestTypeShippingAddressValidationStatusPropEnum = append(subscriptionUpdateRequestTypeShippingAddressValidationStatusPropEnum, v)
	}
}

const (

	// SubscriptionUpdateRequestShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	SubscriptionUpdateRequestShippingAddressValidationStatusNotValidated string = "not_validated"

	// SubscriptionUpdateRequestShippingAddressValidationStatusValid captures enum value "valid"
	SubscriptionUpdateRequestShippingAddressValidationStatusValid string = "valid"

	// SubscriptionUpdateRequestShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	SubscriptionUpdateRequestShippingAddressValidationStatusPartiallyValid string = "partially_valid"

	// SubscriptionUpdateRequestShippingAddressValidationStatusInvalid captures enum value "invalid"
	SubscriptionUpdateRequestShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *SubscriptionUpdateRequest) validateShippingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionUpdateRequestTypeShippingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionUpdateRequest) validateShippingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateShippingAddressValidationStatusEnum("shipping_address[validation_status]", "body", m.ShippingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SubscriptionUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SubscriptionUpdateRequest) UnmarshalBinary(b []byte) error {
	var res SubscriptionUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
