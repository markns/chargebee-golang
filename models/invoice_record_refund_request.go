// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InvoiceRecordRefundRequest invoice record refund request
// swagger:model InvoiceRecordRefundRequest
type InvoiceRecordRefundRequest struct {

	// comment
	Comment string `json:"comment,omitempty"`

	// credit note reason code
	CreditNoteReasonCode string `json:"credit_note[reason_code],omitempty"`

	// customer notes
	CustomerNotes string `json:"customer_notes,omitempty"`

	// transaction amount
	TransactionAmount int32 `json:"transaction[amount],omitempty"`

	// transaction date
	TransactionDate int64 `json:"transaction[date],omitempty"`

	// transaction payment method
	TransactionPaymentMethod *PaymentMethod `json:"transaction[payment_method],omitempty"`

	// transaction reference number
	TransactionReferenceNumber string `json:"transaction[reference_number],omitempty"`
}

// Validate validates this invoice record refund request
func (m *InvoiceRecordRefundRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreditNoteReasonCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTransactionPaymentMethod(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var invoiceRecordRefundRequestTypeCreditNoteReasonCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["write_off","subscription_change","subscription_cancellation","chargeback","product_unsatisfactory","service_unsatisfactory","order_change","order_cancellation","waiver","other","fraudulent"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceRecordRefundRequestTypeCreditNoteReasonCodePropEnum = append(invoiceRecordRefundRequestTypeCreditNoteReasonCodePropEnum, v)
	}
}

const (

	// InvoiceRecordRefundRequestCreditNoteReasonCodeWriteOff captures enum value "write_off"
	InvoiceRecordRefundRequestCreditNoteReasonCodeWriteOff string = "write_off"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeSubscriptionChange captures enum value "subscription_change"
	InvoiceRecordRefundRequestCreditNoteReasonCodeSubscriptionChange string = "subscription_change"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeSubscriptionCancellation captures enum value "subscription_cancellation"
	InvoiceRecordRefundRequestCreditNoteReasonCodeSubscriptionCancellation string = "subscription_cancellation"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeChargeback captures enum value "chargeback"
	InvoiceRecordRefundRequestCreditNoteReasonCodeChargeback string = "chargeback"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeProductUnsatisfactory captures enum value "product_unsatisfactory"
	InvoiceRecordRefundRequestCreditNoteReasonCodeProductUnsatisfactory string = "product_unsatisfactory"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeServiceUnsatisfactory captures enum value "service_unsatisfactory"
	InvoiceRecordRefundRequestCreditNoteReasonCodeServiceUnsatisfactory string = "service_unsatisfactory"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeOrderChange captures enum value "order_change"
	InvoiceRecordRefundRequestCreditNoteReasonCodeOrderChange string = "order_change"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeOrderCancellation captures enum value "order_cancellation"
	InvoiceRecordRefundRequestCreditNoteReasonCodeOrderCancellation string = "order_cancellation"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeWaiver captures enum value "waiver"
	InvoiceRecordRefundRequestCreditNoteReasonCodeWaiver string = "waiver"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeOther captures enum value "other"
	InvoiceRecordRefundRequestCreditNoteReasonCodeOther string = "other"

	// InvoiceRecordRefundRequestCreditNoteReasonCodeFraudulent captures enum value "fraudulent"
	InvoiceRecordRefundRequestCreditNoteReasonCodeFraudulent string = "fraudulent"
)

// prop value enum
func (m *InvoiceRecordRefundRequest) validateCreditNoteReasonCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceRecordRefundRequestTypeCreditNoteReasonCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceRecordRefundRequest) validateCreditNoteReasonCode(formats strfmt.Registry) error {

	if swag.IsZero(m.CreditNoteReasonCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateCreditNoteReasonCodeEnum("credit_note[reason_code]", "body", m.CreditNoteReasonCode); err != nil {
		return err
	}

	return nil
}

func (m *InvoiceRecordRefundRequest) validateTransactionPaymentMethod(formats strfmt.Registry) error {

	if swag.IsZero(m.TransactionPaymentMethod) { // not required
		return nil
	}

	if m.TransactionPaymentMethod != nil {

		if err := m.TransactionPaymentMethod.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("transaction[payment_method]")
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *InvoiceRecordRefundRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoiceRecordRefundRequest) UnmarshalBinary(b []byte) error {
	var res InvoiceRecordRefundRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
