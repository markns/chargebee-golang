// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AddonCreateRequest addon create request
// swagger:model AddonCreateRequest

type AddonCreateRequest struct {

	// accounting category1
	AccountingCategory1 string `json:"accounting_category1,omitempty"`

	// accounting category2
	AccountingCategory2 string `json:"accounting_category2,omitempty"`

	// accounting code
	AccountingCode string `json:"accounting_code,omitempty"`

	// charge type
	ChargeType string `json:"charge_type,omitempty"`

	// currency code
	CurrencyCode string `json:"currency_code,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// enabled in portal
	EnabledInPortal bool `json:"enabled_in_portal,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// invoice name
	InvoiceName string `json:"invoice_name,omitempty"`

	// invoice notes
	InvoiceNotes string `json:"invoice_notes,omitempty"`

	// meta data
	MetaData string `json:"meta_data,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// period
	Period int32 `json:"period,omitempty"`

	// period unit
	PeriodUnit string `json:"period_unit,omitempty"`

	// price
	Price int32 `json:"price,omitempty"`

	// sku
	Sku string `json:"sku,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// tax code
	TaxCode string `json:"tax_code,omitempty"`

	// tax profile id
	TaxProfileID string `json:"tax_profile_id,omitempty"`

	// taxable
	Taxable bool `json:"taxable,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// unit
	Unit string `json:"unit,omitempty"`
}

/* polymorph AddonCreateRequest accounting_category1 false */

/* polymorph AddonCreateRequest accounting_category2 false */

/* polymorph AddonCreateRequest accounting_code false */

/* polymorph AddonCreateRequest charge_type false */

/* polymorph AddonCreateRequest currency_code false */

/* polymorph AddonCreateRequest description false */

/* polymorph AddonCreateRequest enabled_in_portal false */

/* polymorph AddonCreateRequest id false */

/* polymorph AddonCreateRequest invoice_name false */

/* polymorph AddonCreateRequest invoice_notes false */

/* polymorph AddonCreateRequest meta_data false */

/* polymorph AddonCreateRequest name false */

/* polymorph AddonCreateRequest period false */

/* polymorph AddonCreateRequest period_unit false */

/* polymorph AddonCreateRequest price false */

/* polymorph AddonCreateRequest sku false */

/* polymorph AddonCreateRequest status false */

/* polymorph AddonCreateRequest tax_code false */

/* polymorph AddonCreateRequest tax_profile_id false */

/* polymorph AddonCreateRequest taxable false */

/* polymorph AddonCreateRequest type false */

/* polymorph AddonCreateRequest unit false */

// Validate validates this addon create request
func (m *AddonCreateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChargeType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePeriodUnit(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var addonCreateRequestTypeChargeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["recurring","non_recurring"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addonCreateRequestTypeChargeTypePropEnum = append(addonCreateRequestTypeChargeTypePropEnum, v)
	}
}

const (
	// AddonCreateRequestChargeTypeRecurring captures enum value "recurring"
	AddonCreateRequestChargeTypeRecurring string = "recurring"
	// AddonCreateRequestChargeTypeNonRecurring captures enum value "non_recurring"
	AddonCreateRequestChargeTypeNonRecurring string = "non_recurring"
)

// prop value enum
func (m *AddonCreateRequest) validateChargeTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, addonCreateRequestTypeChargeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AddonCreateRequest) validateChargeType(formats strfmt.Registry) error {

	if swag.IsZero(m.ChargeType) { // not required
		return nil
	}

	// value enum
	if err := m.validateChargeTypeEnum("charge_type", "body", m.ChargeType); err != nil {
		return err
	}

	return nil
}

var addonCreateRequestTypePeriodUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["week","month","year"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addonCreateRequestTypePeriodUnitPropEnum = append(addonCreateRequestTypePeriodUnitPropEnum, v)
	}
}

const (
	// AddonCreateRequestPeriodUnitWeek captures enum value "week"
	AddonCreateRequestPeriodUnitWeek string = "week"
	// AddonCreateRequestPeriodUnitMonth captures enum value "month"
	AddonCreateRequestPeriodUnitMonth string = "month"
	// AddonCreateRequestPeriodUnitYear captures enum value "year"
	AddonCreateRequestPeriodUnitYear string = "year"
)

// prop value enum
func (m *AddonCreateRequest) validatePeriodUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, addonCreateRequestTypePeriodUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AddonCreateRequest) validatePeriodUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.PeriodUnit) { // not required
		return nil
	}

	// value enum
	if err := m.validatePeriodUnitEnum("period_unit", "body", m.PeriodUnit); err != nil {
		return err
	}

	return nil
}

var addonCreateRequestTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["in_progress","success","voided","failure","timeout","needs_attention"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addonCreateRequestTypeStatusPropEnum = append(addonCreateRequestTypeStatusPropEnum, v)
	}
}

const (
	// AddonCreateRequestStatusInProgress captures enum value "in_progress"
	AddonCreateRequestStatusInProgress string = "in_progress"
	// AddonCreateRequestStatusSuccess captures enum value "success"
	AddonCreateRequestStatusSuccess string = "success"
	// AddonCreateRequestStatusVoided captures enum value "voided"
	AddonCreateRequestStatusVoided string = "voided"
	// AddonCreateRequestStatusFailure captures enum value "failure"
	AddonCreateRequestStatusFailure string = "failure"
	// AddonCreateRequestStatusTimeout captures enum value "timeout"
	AddonCreateRequestStatusTimeout string = "timeout"
	// AddonCreateRequestStatusNeedsAttention captures enum value "needs_attention"
	AddonCreateRequestStatusNeedsAttention string = "needs_attention"
)

// prop value enum
func (m *AddonCreateRequest) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, addonCreateRequestTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AddonCreateRequest) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var addonCreateRequestTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["authorization","payment","refund","payment_reversal"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addonCreateRequestTypeTypePropEnum = append(addonCreateRequestTypeTypePropEnum, v)
	}
}

const (
	// AddonCreateRequestTypeAuthorization captures enum value "authorization"
	AddonCreateRequestTypeAuthorization string = "authorization"
	// AddonCreateRequestTypePayment captures enum value "payment"
	AddonCreateRequestTypePayment string = "payment"
	// AddonCreateRequestTypeRefund captures enum value "refund"
	AddonCreateRequestTypeRefund string = "refund"
	// AddonCreateRequestTypePaymentReversal captures enum value "payment_reversal"
	AddonCreateRequestTypePaymentReversal string = "payment_reversal"
)

// prop value enum
func (m *AddonCreateRequest) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, addonCreateRequestTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AddonCreateRequest) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AddonCreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddonCreateRequest) UnmarshalBinary(b []byte) error {
	var res AddonCreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
