// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SubscriptionImportSubscriptionRequest subscription import subscription request
// swagger:model SubscriptionImportSubscriptionRequest

type SubscriptionImportSubscriptionRequest struct {

	// affiliate token
	AffiliateToken string `json:"affiliate_token,omitempty"`

	// auto collection
	AutoCollection string `json:"auto_collection,omitempty"`

	// billing address city
	BillingAddressCity string `json:"billing_address[city],omitempty"`

	// billing address company
	BillingAddressCompany string `json:"billing_address[company],omitempty"`

	// billing address country
	BillingAddressCountry string `json:"billing_address[country],omitempty"`

	// billing address email
	BillingAddressEmail string `json:"billing_address[email],omitempty"`

	// billing address first name
	BillingAddressFirstName string `json:"billing_address[first_name],omitempty"`

	// billing address last name
	BillingAddressLastName string `json:"billing_address[last_name],omitempty"`

	// billing address line1
	BillingAddressLine1 string `json:"billing_address[line1],omitempty"`

	// billing address line2
	BillingAddressLine2 string `json:"billing_address[line2],omitempty"`

	// billing address line3
	BillingAddressLine3 string `json:"billing_address[line3],omitempty"`

	// billing address phone
	BillingAddressPhone string `json:"billing_address[phone],omitempty"`

	// billing address state
	BillingAddressState string `json:"billing_address[state],omitempty"`

	// billing address state code
	BillingAddressStateCode string `json:"billing_address[state_code],omitempty"`

	// billing address validation status
	BillingAddressValidationStatus string `json:"billing_address[validation_status],omitempty"`

	// billing address zip
	BillingAddressZip string `json:"billing_address[zip],omitempty"`

	// billing cycles
	BillingCycles int32 `json:"billing_cycles,omitempty"`

	// cancelled at
	CancelledAt int64 `json:"cancelled_at,omitempty"`

	// card billing addr1
	CardBillingAddr1 string `json:"card[billing_addr1],omitempty"`

	// card billing addr2
	CardBillingAddr2 string `json:"card[billing_addr2],omitempty"`

	// card billing city
	CardBillingCity string `json:"card[billing_city],omitempty"`

	// card billing country
	CardBillingCountry string `json:"card[billing_country],omitempty"`

	// card billing state
	CardBillingState string `json:"card[billing_state],omitempty"`

	// card billing state code
	CardBillingStateCode string `json:"card[billing_state_code],omitempty"`

	// card billing zip
	CardBillingZip string `json:"card[billing_zip],omitempty"`

	// card cvv
	CardCvv string `json:"card[cvv],omitempty"`

	// card expiry month
	CardExpiryMonth int32 `json:"card[expiry_month],omitempty"`

	// card expiry year
	CardExpiryYear int32 `json:"card[expiry_year],omitempty"`

	// card first name
	CardFirstName string `json:"card[first_name],omitempty"`

	// card gateway
	CardGateway string `json:"card[gateway],omitempty"`

	// card gateway account id
	CardGatewayAccountID string `json:"card[gateway_account_id],omitempty"`

	// card last name
	CardLastName string `json:"card[last_name],omitempty"`

	// card number
	CardNumber string `json:"card[number],omitempty"`

	// card tmp token
	CardTmpToken string `json:"card[tmp_token],omitempty"`

	// coupon ids
	CouponIds string `json:"coupon_ids,omitempty"`

	// current term end
	CurrentTermEnd int64 `json:"current_term_end,omitempty"`

	// current term start
	CurrentTermStart int64 `json:"current_term_start,omitempty"`

	// customer allow direct debit
	CustomerAllowDirectDebit bool `json:"customer[allow_direct_debit],omitempty"`

	// customer auto collection
	CustomerAutoCollection string `json:"customer[auto_collection],omitempty"`

	// customer company
	CustomerCompany string `json:"customer[company],omitempty"`

	// customer email
	CustomerEmail string `json:"customer[email],omitempty"`

	// customer entity code
	CustomerEntityCode string `json:"customer[entity_code],omitempty"`

	// customer exempt number
	CustomerExemptNumber string `json:"customer[exempt_number],omitempty"`

	// customer first name
	CustomerFirstName string `json:"customer[first_name],omitempty"`

	// customer id
	CustomerID string `json:"customer[id],omitempty"`

	// customer last name
	CustomerLastName string `json:"customer[last_name],omitempty"`

	// customer locale
	CustomerLocale string `json:"customer[locale],omitempty"`

	// customer net term days
	CustomerNetTermDays int32 `json:"customer[net_term_days],omitempty"`

	// customer phone
	CustomerPhone string `json:"customer[phone],omitempty"`

	// customer taxability
	CustomerTaxability string `json:"customer[taxability],omitempty"`

	// customer vat number
	CustomerVatNumber string `json:"customer[vat_number],omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// invoice notes
	InvoiceNotes string `json:"invoice_notes,omitempty"`

	// meta data
	MetaData string `json:"meta_data,omitempty"`

	// payment method gateway
	PaymentMethodGateway string `json:"payment_method[gateway],omitempty"`

	// payment method gateway account id
	PaymentMethodGatewayAccountID string `json:"payment_method[gateway_account_id],omitempty"`

	// payment method issuing country
	PaymentMethodIssuingCountry string `json:"payment_method[issuing_country],omitempty"`

	// payment method reference id
	PaymentMethodReferenceID string `json:"payment_method[reference_id],omitempty"`

	// payment method type
	PaymentMethodType string `json:"payment_method[type],omitempty"`

	// plan id
	PlanID string `json:"plan_id,omitempty"`

	// plan quantity
	PlanQuantity int32 `json:"plan_quantity,omitempty"`

	// plan unit price
	PlanUnitPrice int32 `json:"plan_unit_price,omitempty"`

	// po number
	PoNumber string `json:"po_number,omitempty"`

	// setup fee
	SetupFee int32 `json:"setup_fee,omitempty"`

	// shipping address city
	ShippingAddressCity string `json:"shipping_address[city],omitempty"`

	// shipping address company
	ShippingAddressCompany string `json:"shipping_address[company],omitempty"`

	// shipping address country
	ShippingAddressCountry string `json:"shipping_address[country],omitempty"`

	// shipping address email
	ShippingAddressEmail string `json:"shipping_address[email],omitempty"`

	// shipping address first name
	ShippingAddressFirstName string `json:"shipping_address[first_name],omitempty"`

	// shipping address last name
	ShippingAddressLastName string `json:"shipping_address[last_name],omitempty"`

	// shipping address line1
	ShippingAddressLine1 string `json:"shipping_address[line1],omitempty"`

	// shipping address line2
	ShippingAddressLine2 string `json:"shipping_address[line2],omitempty"`

	// shipping address line3
	ShippingAddressLine3 string `json:"shipping_address[line3],omitempty"`

	// shipping address phone
	ShippingAddressPhone string `json:"shipping_address[phone],omitempty"`

	// shipping address state
	ShippingAddressState string `json:"shipping_address[state],omitempty"`

	// shipping address state code
	ShippingAddressStateCode string `json:"shipping_address[state_code],omitempty"`

	// shipping address validation status
	ShippingAddressValidationStatus string `json:"shipping_address[validation_status],omitempty"`

	// shipping address zip
	ShippingAddressZip string `json:"shipping_address[zip],omitempty"`

	// start date
	StartDate int64 `json:"start_date,omitempty"`

	// started at
	StartedAt int64 `json:"started_at,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// trial end
	TrialEnd int64 `json:"trial_end,omitempty"`

	// trial start
	TrialStart int64 `json:"trial_start,omitempty"`
}

/* polymorph SubscriptionImportSubscriptionRequest affiliate_token false */

/* polymorph SubscriptionImportSubscriptionRequest auto_collection false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[city] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[company] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[country] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[email] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[first_name] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[last_name] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[line1] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[line2] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[line3] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[phone] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[state] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[state_code] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[validation_status] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_address[zip] false */

/* polymorph SubscriptionImportSubscriptionRequest billing_cycles false */

/* polymorph SubscriptionImportSubscriptionRequest cancelled_at false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_addr1] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_addr2] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_city] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_country] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_state] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_state_code] false */

/* polymorph SubscriptionImportSubscriptionRequest card[billing_zip] false */

/* polymorph SubscriptionImportSubscriptionRequest card[cvv] false */

/* polymorph SubscriptionImportSubscriptionRequest card[expiry_month] false */

/* polymorph SubscriptionImportSubscriptionRequest card[expiry_year] false */

/* polymorph SubscriptionImportSubscriptionRequest card[first_name] false */

/* polymorph SubscriptionImportSubscriptionRequest card[gateway] false */

/* polymorph SubscriptionImportSubscriptionRequest card[gateway_account_id] false */

/* polymorph SubscriptionImportSubscriptionRequest card[last_name] false */

/* polymorph SubscriptionImportSubscriptionRequest card[number] false */

/* polymorph SubscriptionImportSubscriptionRequest card[tmp_token] false */

/* polymorph SubscriptionImportSubscriptionRequest coupon_ids false */

/* polymorph SubscriptionImportSubscriptionRequest current_term_end false */

/* polymorph SubscriptionImportSubscriptionRequest current_term_start false */

/* polymorph SubscriptionImportSubscriptionRequest customer[allow_direct_debit] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[auto_collection] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[company] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[email] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[entity_code] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[exempt_number] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[first_name] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[id] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[last_name] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[locale] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[net_term_days] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[phone] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[taxability] false */

/* polymorph SubscriptionImportSubscriptionRequest customer[vat_number] false */

/* polymorph SubscriptionImportSubscriptionRequest id false */

/* polymorph SubscriptionImportSubscriptionRequest invoice_notes false */

/* polymorph SubscriptionImportSubscriptionRequest meta_data false */

/* polymorph SubscriptionImportSubscriptionRequest payment_method[gateway] false */

/* polymorph SubscriptionImportSubscriptionRequest payment_method[gateway_account_id] false */

/* polymorph SubscriptionImportSubscriptionRequest payment_method[issuing_country] false */

/* polymorph SubscriptionImportSubscriptionRequest payment_method[reference_id] false */

/* polymorph SubscriptionImportSubscriptionRequest payment_method[type] false */

/* polymorph SubscriptionImportSubscriptionRequest plan_id false */

/* polymorph SubscriptionImportSubscriptionRequest plan_quantity false */

/* polymorph SubscriptionImportSubscriptionRequest plan_unit_price false */

/* polymorph SubscriptionImportSubscriptionRequest po_number false */

/* polymorph SubscriptionImportSubscriptionRequest setup_fee false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[city] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[company] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[country] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[email] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[first_name] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[last_name] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[line1] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[line2] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[line3] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[phone] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[state] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[state_code] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[validation_status] false */

/* polymorph SubscriptionImportSubscriptionRequest shipping_address[zip] false */

/* polymorph SubscriptionImportSubscriptionRequest start_date false */

/* polymorph SubscriptionImportSubscriptionRequest started_at false */

/* polymorph SubscriptionImportSubscriptionRequest status false */

/* polymorph SubscriptionImportSubscriptionRequest trial_end false */

/* polymorph SubscriptionImportSubscriptionRequest trial_start false */

// Validate validates this subscription import subscription request
func (m *SubscriptionImportSubscriptionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAutoCollection(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBillingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCardGateway(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCustomerAutoCollection(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCustomerEntityCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCustomerTaxability(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePaymentMethodGateway(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePaymentMethodType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateShippingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var subscriptionImportSubscriptionRequestTypeAutoCollectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["on","off"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeAutoCollectionPropEnum = append(subscriptionImportSubscriptionRequestTypeAutoCollectionPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestAutoCollectionOn captures enum value "on"
	SubscriptionImportSubscriptionRequestAutoCollectionOn string = "on"
	// SubscriptionImportSubscriptionRequestAutoCollectionOff captures enum value "off"
	SubscriptionImportSubscriptionRequestAutoCollectionOff string = "off"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateAutoCollectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeAutoCollectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateAutoCollection(formats strfmt.Registry) error {

	if swag.IsZero(m.AutoCollection) { // not required
		return nil
	}

	// value enum
	if err := m.validateAutoCollectionEnum("auto_collection", "body", m.AutoCollection); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeBillingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeBillingAddressValidationStatusPropEnum = append(subscriptionImportSubscriptionRequestTypeBillingAddressValidationStatusPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestBillingAddressValidationStatusNotValidated captures enum value "not_validated"
	SubscriptionImportSubscriptionRequestBillingAddressValidationStatusNotValidated string = "not_validated"
	// SubscriptionImportSubscriptionRequestBillingAddressValidationStatusValid captures enum value "valid"
	SubscriptionImportSubscriptionRequestBillingAddressValidationStatusValid string = "valid"
	// SubscriptionImportSubscriptionRequestBillingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	SubscriptionImportSubscriptionRequestBillingAddressValidationStatusPartiallyValid string = "partially_valid"
	// SubscriptionImportSubscriptionRequestBillingAddressValidationStatusInvalid captures enum value "invalid"
	SubscriptionImportSubscriptionRequestBillingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateBillingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeBillingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateBillingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAddressValidationStatusEnum("billing_address[validation_status]", "body", m.BillingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeCardGatewayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["chargebee","stripe","wepay","braintree","authorize_net","paypal_pro","pin","eway","eway_rapid","worldpay","balanced_payments","beanstream","bluepay","elavon","first_data_global","hdfc","migs","nmi","ogone","paymill","paypal_payflow_pro","sage_pay","tco","wirecard","amazon_payments","paypal_express_checkout","gocardless","adyen","orbital","moneris_us","moneris","not_applicable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeCardGatewayPropEnum = append(subscriptionImportSubscriptionRequestTypeCardGatewayPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestCardGatewayChargebee captures enum value "chargebee"
	SubscriptionImportSubscriptionRequestCardGatewayChargebee string = "chargebee"
	// SubscriptionImportSubscriptionRequestCardGatewayStripe captures enum value "stripe"
	SubscriptionImportSubscriptionRequestCardGatewayStripe string = "stripe"
	// SubscriptionImportSubscriptionRequestCardGatewayWepay captures enum value "wepay"
	SubscriptionImportSubscriptionRequestCardGatewayWepay string = "wepay"
	// SubscriptionImportSubscriptionRequestCardGatewayBraintree captures enum value "braintree"
	SubscriptionImportSubscriptionRequestCardGatewayBraintree string = "braintree"
	// SubscriptionImportSubscriptionRequestCardGatewayAuthorizeNet captures enum value "authorize_net"
	SubscriptionImportSubscriptionRequestCardGatewayAuthorizeNet string = "authorize_net"
	// SubscriptionImportSubscriptionRequestCardGatewayPaypalPro captures enum value "paypal_pro"
	SubscriptionImportSubscriptionRequestCardGatewayPaypalPro string = "paypal_pro"
	// SubscriptionImportSubscriptionRequestCardGatewayPin captures enum value "pin"
	SubscriptionImportSubscriptionRequestCardGatewayPin string = "pin"
	// SubscriptionImportSubscriptionRequestCardGatewayEway captures enum value "eway"
	SubscriptionImportSubscriptionRequestCardGatewayEway string = "eway"
	// SubscriptionImportSubscriptionRequestCardGatewayEwayRapid captures enum value "eway_rapid"
	SubscriptionImportSubscriptionRequestCardGatewayEwayRapid string = "eway_rapid"
	// SubscriptionImportSubscriptionRequestCardGatewayWorldpay captures enum value "worldpay"
	SubscriptionImportSubscriptionRequestCardGatewayWorldpay string = "worldpay"
	// SubscriptionImportSubscriptionRequestCardGatewayBalancedPayments captures enum value "balanced_payments"
	SubscriptionImportSubscriptionRequestCardGatewayBalancedPayments string = "balanced_payments"
	// SubscriptionImportSubscriptionRequestCardGatewayBeanstream captures enum value "beanstream"
	SubscriptionImportSubscriptionRequestCardGatewayBeanstream string = "beanstream"
	// SubscriptionImportSubscriptionRequestCardGatewayBluepay captures enum value "bluepay"
	SubscriptionImportSubscriptionRequestCardGatewayBluepay string = "bluepay"
	// SubscriptionImportSubscriptionRequestCardGatewayElavon captures enum value "elavon"
	SubscriptionImportSubscriptionRequestCardGatewayElavon string = "elavon"
	// SubscriptionImportSubscriptionRequestCardGatewayFirstDataGlobal captures enum value "first_data_global"
	SubscriptionImportSubscriptionRequestCardGatewayFirstDataGlobal string = "first_data_global"
	// SubscriptionImportSubscriptionRequestCardGatewayHdfc captures enum value "hdfc"
	SubscriptionImportSubscriptionRequestCardGatewayHdfc string = "hdfc"
	// SubscriptionImportSubscriptionRequestCardGatewayMigs captures enum value "migs"
	SubscriptionImportSubscriptionRequestCardGatewayMigs string = "migs"
	// SubscriptionImportSubscriptionRequestCardGatewayNmi captures enum value "nmi"
	SubscriptionImportSubscriptionRequestCardGatewayNmi string = "nmi"
	// SubscriptionImportSubscriptionRequestCardGatewayOgone captures enum value "ogone"
	SubscriptionImportSubscriptionRequestCardGatewayOgone string = "ogone"
	// SubscriptionImportSubscriptionRequestCardGatewayPaymill captures enum value "paymill"
	SubscriptionImportSubscriptionRequestCardGatewayPaymill string = "paymill"
	// SubscriptionImportSubscriptionRequestCardGatewayPaypalPayflowPro captures enum value "paypal_payflow_pro"
	SubscriptionImportSubscriptionRequestCardGatewayPaypalPayflowPro string = "paypal_payflow_pro"
	// SubscriptionImportSubscriptionRequestCardGatewaySagePay captures enum value "sage_pay"
	SubscriptionImportSubscriptionRequestCardGatewaySagePay string = "sage_pay"
	// SubscriptionImportSubscriptionRequestCardGatewayTco captures enum value "tco"
	SubscriptionImportSubscriptionRequestCardGatewayTco string = "tco"
	// SubscriptionImportSubscriptionRequestCardGatewayWirecard captures enum value "wirecard"
	SubscriptionImportSubscriptionRequestCardGatewayWirecard string = "wirecard"
	// SubscriptionImportSubscriptionRequestCardGatewayAmazonPayments captures enum value "amazon_payments"
	SubscriptionImportSubscriptionRequestCardGatewayAmazonPayments string = "amazon_payments"
	// SubscriptionImportSubscriptionRequestCardGatewayPaypalExpressCheckout captures enum value "paypal_express_checkout"
	SubscriptionImportSubscriptionRequestCardGatewayPaypalExpressCheckout string = "paypal_express_checkout"
	// SubscriptionImportSubscriptionRequestCardGatewayGocardless captures enum value "gocardless"
	SubscriptionImportSubscriptionRequestCardGatewayGocardless string = "gocardless"
	// SubscriptionImportSubscriptionRequestCardGatewayAdyen captures enum value "adyen"
	SubscriptionImportSubscriptionRequestCardGatewayAdyen string = "adyen"
	// SubscriptionImportSubscriptionRequestCardGatewayOrbital captures enum value "orbital"
	SubscriptionImportSubscriptionRequestCardGatewayOrbital string = "orbital"
	// SubscriptionImportSubscriptionRequestCardGatewayMonerisUs captures enum value "moneris_us"
	SubscriptionImportSubscriptionRequestCardGatewayMonerisUs string = "moneris_us"
	// SubscriptionImportSubscriptionRequestCardGatewayMoneris captures enum value "moneris"
	SubscriptionImportSubscriptionRequestCardGatewayMoneris string = "moneris"
	// SubscriptionImportSubscriptionRequestCardGatewayNotApplicable captures enum value "not_applicable"
	SubscriptionImportSubscriptionRequestCardGatewayNotApplicable string = "not_applicable"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateCardGatewayEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeCardGatewayPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateCardGateway(formats strfmt.Registry) error {

	if swag.IsZero(m.CardGateway) { // not required
		return nil
	}

	// value enum
	if err := m.validateCardGatewayEnum("card[gateway]", "body", m.CardGateway); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeCustomerAutoCollectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["on","off"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeCustomerAutoCollectionPropEnum = append(subscriptionImportSubscriptionRequestTypeCustomerAutoCollectionPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestCustomerAutoCollectionOn captures enum value "on"
	SubscriptionImportSubscriptionRequestCustomerAutoCollectionOn string = "on"
	// SubscriptionImportSubscriptionRequestCustomerAutoCollectionOff captures enum value "off"
	SubscriptionImportSubscriptionRequestCustomerAutoCollectionOff string = "off"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateCustomerAutoCollectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeCustomerAutoCollectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateCustomerAutoCollection(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerAutoCollection) { // not required
		return nil
	}

	// value enum
	if err := m.validateCustomerAutoCollectionEnum("customer[auto_collection]", "body", m.CustomerAutoCollection); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeCustomerEntityCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["a","b","c","d","e","f","g","h","i","j","k","l","n","p","q","r","med1","med2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeCustomerEntityCodePropEnum = append(subscriptionImportSubscriptionRequestTypeCustomerEntityCodePropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeA captures enum value "a"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeA string = "a"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeB captures enum value "b"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeB string = "b"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeC captures enum value "c"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeC string = "c"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeD captures enum value "d"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeD string = "d"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeE captures enum value "e"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeE string = "e"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeF captures enum value "f"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeF string = "f"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeG captures enum value "g"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeG string = "g"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeH captures enum value "h"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeH string = "h"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeI captures enum value "i"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeI string = "i"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeJ captures enum value "j"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeJ string = "j"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeK captures enum value "k"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeK string = "k"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeL captures enum value "l"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeL string = "l"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeN captures enum value "n"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeN string = "n"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeP captures enum value "p"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeP string = "p"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeQ captures enum value "q"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeQ string = "q"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeR captures enum value "r"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeR string = "r"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeMed1 captures enum value "med1"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeMed1 string = "med1"
	// SubscriptionImportSubscriptionRequestCustomerEntityCodeMed2 captures enum value "med2"
	SubscriptionImportSubscriptionRequestCustomerEntityCodeMed2 string = "med2"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateCustomerEntityCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeCustomerEntityCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateCustomerEntityCode(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerEntityCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateCustomerEntityCodeEnum("customer[entity_code]", "body", m.CustomerEntityCode); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeCustomerTaxabilityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["taxable","exempt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeCustomerTaxabilityPropEnum = append(subscriptionImportSubscriptionRequestTypeCustomerTaxabilityPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestCustomerTaxabilityTaxable captures enum value "taxable"
	SubscriptionImportSubscriptionRequestCustomerTaxabilityTaxable string = "taxable"
	// SubscriptionImportSubscriptionRequestCustomerTaxabilityExempt captures enum value "exempt"
	SubscriptionImportSubscriptionRequestCustomerTaxabilityExempt string = "exempt"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateCustomerTaxabilityEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeCustomerTaxabilityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateCustomerTaxability(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerTaxability) { // not required
		return nil
	}

	// value enum
	if err := m.validateCustomerTaxabilityEnum("customer[taxability]", "body", m.CustomerTaxability); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypePaymentMethodGatewayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["chargebee","stripe","wepay","braintree","authorize_net","paypal_pro","pin","eway","eway_rapid","worldpay","balanced_payments","beanstream","bluepay","elavon","first_data_global","hdfc","migs","nmi","ogone","paymill","paypal_payflow_pro","sage_pay","tco","wirecard","amazon_payments","paypal_express_checkout","gocardless","adyen","orbital","moneris_us","moneris","not_applicable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypePaymentMethodGatewayPropEnum = append(subscriptionImportSubscriptionRequestTypePaymentMethodGatewayPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayChargebee captures enum value "chargebee"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayChargebee string = "chargebee"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayStripe captures enum value "stripe"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayStripe string = "stripe"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayWepay captures enum value "wepay"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayWepay string = "wepay"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayBraintree captures enum value "braintree"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayBraintree string = "braintree"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayAuthorizeNet captures enum value "authorize_net"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayAuthorizeNet string = "authorize_net"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalPro captures enum value "paypal_pro"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalPro string = "paypal_pro"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayPin captures enum value "pin"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayPin string = "pin"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayEway captures enum value "eway"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayEway string = "eway"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayEwayRapid captures enum value "eway_rapid"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayEwayRapid string = "eway_rapid"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayWorldpay captures enum value "worldpay"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayWorldpay string = "worldpay"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayBalancedPayments captures enum value "balanced_payments"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayBalancedPayments string = "balanced_payments"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayBeanstream captures enum value "beanstream"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayBeanstream string = "beanstream"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayBluepay captures enum value "bluepay"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayBluepay string = "bluepay"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayElavon captures enum value "elavon"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayElavon string = "elavon"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayFirstDataGlobal captures enum value "first_data_global"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayFirstDataGlobal string = "first_data_global"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayHdfc captures enum value "hdfc"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayHdfc string = "hdfc"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayMigs captures enum value "migs"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayMigs string = "migs"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayNmi captures enum value "nmi"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayNmi string = "nmi"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayOgone captures enum value "ogone"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayOgone string = "ogone"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaymill captures enum value "paymill"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaymill string = "paymill"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalPayflowPro captures enum value "paypal_payflow_pro"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalPayflowPro string = "paypal_payflow_pro"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewaySagePay captures enum value "sage_pay"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewaySagePay string = "sage_pay"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayTco captures enum value "tco"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayTco string = "tco"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayWirecard captures enum value "wirecard"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayWirecard string = "wirecard"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayAmazonPayments captures enum value "amazon_payments"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayAmazonPayments string = "amazon_payments"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalExpressCheckout captures enum value "paypal_express_checkout"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayPaypalExpressCheckout string = "paypal_express_checkout"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayGocardless captures enum value "gocardless"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayGocardless string = "gocardless"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayAdyen captures enum value "adyen"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayAdyen string = "adyen"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayOrbital captures enum value "orbital"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayOrbital string = "orbital"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayMonerisUs captures enum value "moneris_us"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayMonerisUs string = "moneris_us"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayMoneris captures enum value "moneris"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayMoneris string = "moneris"
	// SubscriptionImportSubscriptionRequestPaymentMethodGatewayNotApplicable captures enum value "not_applicable"
	SubscriptionImportSubscriptionRequestPaymentMethodGatewayNotApplicable string = "not_applicable"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validatePaymentMethodGatewayEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypePaymentMethodGatewayPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validatePaymentMethodGateway(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentMethodGateway) { // not required
		return nil
	}

	// value enum
	if err := m.validatePaymentMethodGatewayEnum("payment_method[gateway]", "body", m.PaymentMethodGateway); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypePaymentMethodTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["authorization","payment","refund","payment_reversal"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypePaymentMethodTypePropEnum = append(subscriptionImportSubscriptionRequestTypePaymentMethodTypePropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestPaymentMethodTypeAuthorization captures enum value "authorization"
	SubscriptionImportSubscriptionRequestPaymentMethodTypeAuthorization string = "authorization"
	// SubscriptionImportSubscriptionRequestPaymentMethodTypePayment captures enum value "payment"
	SubscriptionImportSubscriptionRequestPaymentMethodTypePayment string = "payment"
	// SubscriptionImportSubscriptionRequestPaymentMethodTypeRefund captures enum value "refund"
	SubscriptionImportSubscriptionRequestPaymentMethodTypeRefund string = "refund"
	// SubscriptionImportSubscriptionRequestPaymentMethodTypePaymentReversal captures enum value "payment_reversal"
	SubscriptionImportSubscriptionRequestPaymentMethodTypePaymentReversal string = "payment_reversal"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validatePaymentMethodTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypePaymentMethodTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validatePaymentMethodType(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentMethodType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePaymentMethodTypeEnum("payment_method[type]", "body", m.PaymentMethodType); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeShippingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeShippingAddressValidationStatusPropEnum = append(subscriptionImportSubscriptionRequestTypeShippingAddressValidationStatusPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	SubscriptionImportSubscriptionRequestShippingAddressValidationStatusNotValidated string = "not_validated"
	// SubscriptionImportSubscriptionRequestShippingAddressValidationStatusValid captures enum value "valid"
	SubscriptionImportSubscriptionRequestShippingAddressValidationStatusValid string = "valid"
	// SubscriptionImportSubscriptionRequestShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	SubscriptionImportSubscriptionRequestShippingAddressValidationStatusPartiallyValid string = "partially_valid"
	// SubscriptionImportSubscriptionRequestShippingAddressValidationStatusInvalid captures enum value "invalid"
	SubscriptionImportSubscriptionRequestShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateShippingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeShippingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateShippingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateShippingAddressValidationStatusEnum("shipping_address[validation_status]", "body", m.ShippingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var subscriptionImportSubscriptionRequestTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["in_progress","success","voided","failure","timeout","needs_attention"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionImportSubscriptionRequestTypeStatusPropEnum = append(subscriptionImportSubscriptionRequestTypeStatusPropEnum, v)
	}
}

const (
	// SubscriptionImportSubscriptionRequestStatusInProgress captures enum value "in_progress"
	SubscriptionImportSubscriptionRequestStatusInProgress string = "in_progress"
	// SubscriptionImportSubscriptionRequestStatusSuccess captures enum value "success"
	SubscriptionImportSubscriptionRequestStatusSuccess string = "success"
	// SubscriptionImportSubscriptionRequestStatusVoided captures enum value "voided"
	SubscriptionImportSubscriptionRequestStatusVoided string = "voided"
	// SubscriptionImportSubscriptionRequestStatusFailure captures enum value "failure"
	SubscriptionImportSubscriptionRequestStatusFailure string = "failure"
	// SubscriptionImportSubscriptionRequestStatusTimeout captures enum value "timeout"
	SubscriptionImportSubscriptionRequestStatusTimeout string = "timeout"
	// SubscriptionImportSubscriptionRequestStatusNeedsAttention captures enum value "needs_attention"
	SubscriptionImportSubscriptionRequestStatusNeedsAttention string = "needs_attention"
)

// prop value enum
func (m *SubscriptionImportSubscriptionRequest) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, subscriptionImportSubscriptionRequestTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SubscriptionImportSubscriptionRequest) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SubscriptionImportSubscriptionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SubscriptionImportSubscriptionRequest) UnmarshalBinary(b []byte) error {
	var res SubscriptionImportSubscriptionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
