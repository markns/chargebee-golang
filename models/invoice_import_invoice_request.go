// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InvoiceImportInvoiceRequest invoice import invoice request
// swagger:model InvoiceImportInvoiceRequest

type InvoiceImportInvoiceRequest struct {

	// billing address city
	BillingAddressCity string `json:"billing_address[city],omitempty"`

	// billing address company
	BillingAddressCompany string `json:"billing_address[company],omitempty"`

	// billing address country
	BillingAddressCountry string `json:"billing_address[country],omitempty"`

	// billing address email
	BillingAddressEmail string `json:"billing_address[email],omitempty"`

	// billing address first name
	BillingAddressFirstName string `json:"billing_address[first_name],omitempty"`

	// billing address last name
	BillingAddressLastName string `json:"billing_address[last_name],omitempty"`

	// billing address line1
	BillingAddressLine1 string `json:"billing_address[line1],omitempty"`

	// billing address line2
	BillingAddressLine2 string `json:"billing_address[line2],omitempty"`

	// billing address line3
	BillingAddressLine3 string `json:"billing_address[line3],omitempty"`

	// billing address phone
	BillingAddressPhone string `json:"billing_address[phone],omitempty"`

	// billing address state
	BillingAddressState string `json:"billing_address[state],omitempty"`

	// billing address state code
	BillingAddressStateCode string `json:"billing_address[state_code],omitempty"`

	// billing address validation status
	BillingAddressValidationStatus string `json:"billing_address[validation_status],omitempty"`

	// billing address zip
	BillingAddressZip string `json:"billing_address[zip],omitempty"`

	// currency code
	CurrencyCode string `json:"currency_code,omitempty"`

	// customer id
	CustomerID string `json:"customer_id,omitempty"`

	// date
	Date int64 `json:"date,omitempty"`

	// due date
	DueDate int64 `json:"due_date,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// net term days
	NetTermDays int32 `json:"net_term_days,omitempty"`

	// po number
	PoNumber string `json:"po_number,omitempty"`

	// price type
	PriceType string `json:"price_type,omitempty"`

	// round off
	RoundOff int32 `json:"round_off,omitempty"`

	// shipping address city
	ShippingAddressCity string `json:"shipping_address[city],omitempty"`

	// shipping address company
	ShippingAddressCompany string `json:"shipping_address[company],omitempty"`

	// shipping address country
	ShippingAddressCountry string `json:"shipping_address[country],omitempty"`

	// shipping address email
	ShippingAddressEmail string `json:"shipping_address[email],omitempty"`

	// shipping address first name
	ShippingAddressFirstName string `json:"shipping_address[first_name],omitempty"`

	// shipping address last name
	ShippingAddressLastName string `json:"shipping_address[last_name],omitempty"`

	// shipping address line1
	ShippingAddressLine1 string `json:"shipping_address[line1],omitempty"`

	// shipping address line2
	ShippingAddressLine2 string `json:"shipping_address[line2],omitempty"`

	// shipping address line3
	ShippingAddressLine3 string `json:"shipping_address[line3],omitempty"`

	// shipping address phone
	ShippingAddressPhone string `json:"shipping_address[phone],omitempty"`

	// shipping address state
	ShippingAddressState string `json:"shipping_address[state],omitempty"`

	// shipping address state code
	ShippingAddressStateCode string `json:"shipping_address[state_code],omitempty"`

	// shipping address validation status
	ShippingAddressValidationStatus string `json:"shipping_address[validation_status],omitempty"`

	// shipping address zip
	ShippingAddressZip string `json:"shipping_address[zip],omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// subscription id
	SubscriptionID string `json:"subscription_id,omitempty"`

	// tax override reason
	TaxOverrideReason string `json:"tax_override_reason,omitempty"`

	// total
	Total int32 `json:"total,omitempty"`

	// use for proration
	UseForProration bool `json:"use_for_proration,omitempty"`

	// vat number
	VatNumber string `json:"vat_number,omitempty"`
}

/* polymorph InvoiceImportInvoiceRequest billing_address[city] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[company] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[country] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[email] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[first_name] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[last_name] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[line1] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[line2] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[line3] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[phone] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[state] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[state_code] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[validation_status] false */

/* polymorph InvoiceImportInvoiceRequest billing_address[zip] false */

/* polymorph InvoiceImportInvoiceRequest currency_code false */

/* polymorph InvoiceImportInvoiceRequest customer_id false */

/* polymorph InvoiceImportInvoiceRequest date false */

/* polymorph InvoiceImportInvoiceRequest due_date false */

/* polymorph InvoiceImportInvoiceRequest id false */

/* polymorph InvoiceImportInvoiceRequest net_term_days false */

/* polymorph InvoiceImportInvoiceRequest po_number false */

/* polymorph InvoiceImportInvoiceRequest price_type false */

/* polymorph InvoiceImportInvoiceRequest round_off false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[city] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[company] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[country] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[email] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[first_name] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[last_name] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[line1] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[line2] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[line3] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[phone] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[state] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[state_code] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[validation_status] false */

/* polymorph InvoiceImportInvoiceRequest shipping_address[zip] false */

/* polymorph InvoiceImportInvoiceRequest status false */

/* polymorph InvoiceImportInvoiceRequest subscription_id false */

/* polymorph InvoiceImportInvoiceRequest tax_override_reason false */

/* polymorph InvoiceImportInvoiceRequest total false */

/* polymorph InvoiceImportInvoiceRequest use_for_proration false */

/* polymorph InvoiceImportInvoiceRequest vat_number false */

// Validate validates this invoice import invoice request
func (m *InvoiceImportInvoiceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePriceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateShippingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaxOverrideReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var invoiceImportInvoiceRequestTypeBillingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceImportInvoiceRequestTypeBillingAddressValidationStatusPropEnum = append(invoiceImportInvoiceRequestTypeBillingAddressValidationStatusPropEnum, v)
	}
}

const (
	// InvoiceImportInvoiceRequestBillingAddressValidationStatusNotValidated captures enum value "not_validated"
	InvoiceImportInvoiceRequestBillingAddressValidationStatusNotValidated string = "not_validated"
	// InvoiceImportInvoiceRequestBillingAddressValidationStatusValid captures enum value "valid"
	InvoiceImportInvoiceRequestBillingAddressValidationStatusValid string = "valid"
	// InvoiceImportInvoiceRequestBillingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	InvoiceImportInvoiceRequestBillingAddressValidationStatusPartiallyValid string = "partially_valid"
	// InvoiceImportInvoiceRequestBillingAddressValidationStatusInvalid captures enum value "invalid"
	InvoiceImportInvoiceRequestBillingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *InvoiceImportInvoiceRequest) validateBillingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceImportInvoiceRequestTypeBillingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceImportInvoiceRequest) validateBillingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAddressValidationStatusEnum("billing_address[validation_status]", "body", m.BillingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var invoiceImportInvoiceRequestTypePriceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["tax_exclusive","tax_inclusive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceImportInvoiceRequestTypePriceTypePropEnum = append(invoiceImportInvoiceRequestTypePriceTypePropEnum, v)
	}
}

const (
	// InvoiceImportInvoiceRequestPriceTypeTaxExclusive captures enum value "tax_exclusive"
	InvoiceImportInvoiceRequestPriceTypeTaxExclusive string = "tax_exclusive"
	// InvoiceImportInvoiceRequestPriceTypeTaxInclusive captures enum value "tax_inclusive"
	InvoiceImportInvoiceRequestPriceTypeTaxInclusive string = "tax_inclusive"
)

// prop value enum
func (m *InvoiceImportInvoiceRequest) validatePriceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceImportInvoiceRequestTypePriceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceImportInvoiceRequest) validatePriceType(formats strfmt.Registry) error {

	if swag.IsZero(m.PriceType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePriceTypeEnum("price_type", "body", m.PriceType); err != nil {
		return err
	}

	return nil
}

var invoiceImportInvoiceRequestTypeShippingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceImportInvoiceRequestTypeShippingAddressValidationStatusPropEnum = append(invoiceImportInvoiceRequestTypeShippingAddressValidationStatusPropEnum, v)
	}
}

const (
	// InvoiceImportInvoiceRequestShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	InvoiceImportInvoiceRequestShippingAddressValidationStatusNotValidated string = "not_validated"
	// InvoiceImportInvoiceRequestShippingAddressValidationStatusValid captures enum value "valid"
	InvoiceImportInvoiceRequestShippingAddressValidationStatusValid string = "valid"
	// InvoiceImportInvoiceRequestShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	InvoiceImportInvoiceRequestShippingAddressValidationStatusPartiallyValid string = "partially_valid"
	// InvoiceImportInvoiceRequestShippingAddressValidationStatusInvalid captures enum value "invalid"
	InvoiceImportInvoiceRequestShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *InvoiceImportInvoiceRequest) validateShippingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceImportInvoiceRequestTypeShippingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceImportInvoiceRequest) validateShippingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateShippingAddressValidationStatusEnum("shipping_address[validation_status]", "body", m.ShippingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var invoiceImportInvoiceRequestTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["in_progress","success","voided","failure","timeout","needs_attention"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceImportInvoiceRequestTypeStatusPropEnum = append(invoiceImportInvoiceRequestTypeStatusPropEnum, v)
	}
}

const (
	// InvoiceImportInvoiceRequestStatusInProgress captures enum value "in_progress"
	InvoiceImportInvoiceRequestStatusInProgress string = "in_progress"
	// InvoiceImportInvoiceRequestStatusSuccess captures enum value "success"
	InvoiceImportInvoiceRequestStatusSuccess string = "success"
	// InvoiceImportInvoiceRequestStatusVoided captures enum value "voided"
	InvoiceImportInvoiceRequestStatusVoided string = "voided"
	// InvoiceImportInvoiceRequestStatusFailure captures enum value "failure"
	InvoiceImportInvoiceRequestStatusFailure string = "failure"
	// InvoiceImportInvoiceRequestStatusTimeout captures enum value "timeout"
	InvoiceImportInvoiceRequestStatusTimeout string = "timeout"
	// InvoiceImportInvoiceRequestStatusNeedsAttention captures enum value "needs_attention"
	InvoiceImportInvoiceRequestStatusNeedsAttention string = "needs_attention"
)

// prop value enum
func (m *InvoiceImportInvoiceRequest) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceImportInvoiceRequestTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceImportInvoiceRequest) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var invoiceImportInvoiceRequestTypeTaxOverrideReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["id_exempt","customer_exempt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoiceImportInvoiceRequestTypeTaxOverrideReasonPropEnum = append(invoiceImportInvoiceRequestTypeTaxOverrideReasonPropEnum, v)
	}
}

const (
	// InvoiceImportInvoiceRequestTaxOverrideReasonIDExempt captures enum value "id_exempt"
	InvoiceImportInvoiceRequestTaxOverrideReasonIDExempt string = "id_exempt"
	// InvoiceImportInvoiceRequestTaxOverrideReasonCustomerExempt captures enum value "customer_exempt"
	InvoiceImportInvoiceRequestTaxOverrideReasonCustomerExempt string = "customer_exempt"
)

// prop value enum
func (m *InvoiceImportInvoiceRequest) validateTaxOverrideReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, invoiceImportInvoiceRequestTypeTaxOverrideReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoiceImportInvoiceRequest) validateTaxOverrideReason(formats strfmt.Registry) error {

	if swag.IsZero(m.TaxOverrideReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateTaxOverrideReasonEnum("tax_override_reason", "body", m.TaxOverrideReason); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InvoiceImportInvoiceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoiceImportInvoiceRequest) UnmarshalBinary(b []byte) error {
	var res InvoiceImportInvoiceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
