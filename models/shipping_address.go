// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ShippingAddress shipping address
// swagger:model ShippingAddress
type ShippingAddress struct {

	// city
	City string `json:"city,omitempty"`

	// company
	Company string `json:"company,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// last name
	LastName string `json:"last_name,omitempty"`

	// line1
	Line1 string `json:"line1,omitempty"`

	// line2
	Line2 string `json:"line2,omitempty"`

	// line3
	Line3 string `json:"line3,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// state code
	StateCode string `json:"state_code,omitempty"`

	// validation status
	ValidationStatus string `json:"validation_status,omitempty"`

	// zip
	Zip string `json:"zip,omitempty"`
}

// Validate validates this shipping address
func (m *ShippingAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var shippingAddressTypeValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		shippingAddressTypeValidationStatusPropEnum = append(shippingAddressTypeValidationStatusPropEnum, v)
	}
}

const (

	// ShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	ShippingAddressValidationStatusNotValidated string = "not_validated"

	// ShippingAddressValidationStatusValid captures enum value "valid"
	ShippingAddressValidationStatusValid string = "valid"

	// ShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	ShippingAddressValidationStatusPartiallyValid string = "partially_valid"

	// ShippingAddressValidationStatusInvalid captures enum value "invalid"
	ShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *ShippingAddress) validateValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, shippingAddressTypeValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ShippingAddress) validateValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateValidationStatusEnum("validation_status", "body", m.ValidationStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddress) UnmarshalBinary(b []byte) error {
	var res ShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
