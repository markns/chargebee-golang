// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EstimateCancelSubscriptionRequest estimate cancel subscription request
// swagger:model EstimateCancelSubscriptionRequest
type EstimateCancelSubscriptionRequest struct {

	// account receivables handling
	AccountReceivablesHandling string `json:"account_receivables_handling,omitempty"`

	// credit option for current term charges
	CreditOptionForCurrentTermCharges string `json:"credit_option_for_current_term_charges,omitempty"`

	// end of term
	EndOfTerm bool `json:"end_of_term,omitempty"`

	// refundable credits handling
	RefundableCreditsHandling string `json:"refundable_credits_handling,omitempty"`

	// unbilled charges option
	UnbilledChargesOption string `json:"unbilled_charges_option,omitempty"`
}

// Validate validates this estimate cancel subscription request
func (m *EstimateCancelSubscriptionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountReceivablesHandling(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCreditOptionForCurrentTermCharges(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRefundableCreditsHandling(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUnbilledChargesOption(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var estimateCancelSubscriptionRequestTypeAccountReceivablesHandlingPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["no_action","schedule_payment_collection","write_off"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCancelSubscriptionRequestTypeAccountReceivablesHandlingPropEnum = append(estimateCancelSubscriptionRequestTypeAccountReceivablesHandlingPropEnum, v)
	}
}

const (

	// EstimateCancelSubscriptionRequestAccountReceivablesHandlingNoAction captures enum value "no_action"
	EstimateCancelSubscriptionRequestAccountReceivablesHandlingNoAction string = "no_action"

	// EstimateCancelSubscriptionRequestAccountReceivablesHandlingSchedulePaymentCollection captures enum value "schedule_payment_collection"
	EstimateCancelSubscriptionRequestAccountReceivablesHandlingSchedulePaymentCollection string = "schedule_payment_collection"

	// EstimateCancelSubscriptionRequestAccountReceivablesHandlingWriteOff captures enum value "write_off"
	EstimateCancelSubscriptionRequestAccountReceivablesHandlingWriteOff string = "write_off"
)

// prop value enum
func (m *EstimateCancelSubscriptionRequest) validateAccountReceivablesHandlingEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCancelSubscriptionRequestTypeAccountReceivablesHandlingPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCancelSubscriptionRequest) validateAccountReceivablesHandling(formats strfmt.Registry) error {

	if swag.IsZero(m.AccountReceivablesHandling) { // not required
		return nil
	}

	// value enum
	if err := m.validateAccountReceivablesHandlingEnum("account_receivables_handling", "body", m.AccountReceivablesHandling); err != nil {
		return err
	}

	return nil
}

var estimateCancelSubscriptionRequestTypeCreditOptionForCurrentTermChargesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","prorate","full"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCancelSubscriptionRequestTypeCreditOptionForCurrentTermChargesPropEnum = append(estimateCancelSubscriptionRequestTypeCreditOptionForCurrentTermChargesPropEnum, v)
	}
}

const (

	// EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesNone captures enum value "none"
	EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesNone string = "none"

	// EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesProrate captures enum value "prorate"
	EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesProrate string = "prorate"

	// EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesFull captures enum value "full"
	EstimateCancelSubscriptionRequestCreditOptionForCurrentTermChargesFull string = "full"
)

// prop value enum
func (m *EstimateCancelSubscriptionRequest) validateCreditOptionForCurrentTermChargesEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCancelSubscriptionRequestTypeCreditOptionForCurrentTermChargesPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCancelSubscriptionRequest) validateCreditOptionForCurrentTermCharges(formats strfmt.Registry) error {

	if swag.IsZero(m.CreditOptionForCurrentTermCharges) { // not required
		return nil
	}

	// value enum
	if err := m.validateCreditOptionForCurrentTermChargesEnum("credit_option_for_current_term_charges", "body", m.CreditOptionForCurrentTermCharges); err != nil {
		return err
	}

	return nil
}

var estimateCancelSubscriptionRequestTypeRefundableCreditsHandlingPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["no_action","schedule_refund"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCancelSubscriptionRequestTypeRefundableCreditsHandlingPropEnum = append(estimateCancelSubscriptionRequestTypeRefundableCreditsHandlingPropEnum, v)
	}
}

const (

	// EstimateCancelSubscriptionRequestRefundableCreditsHandlingNoAction captures enum value "no_action"
	EstimateCancelSubscriptionRequestRefundableCreditsHandlingNoAction string = "no_action"

	// EstimateCancelSubscriptionRequestRefundableCreditsHandlingScheduleRefund captures enum value "schedule_refund"
	EstimateCancelSubscriptionRequestRefundableCreditsHandlingScheduleRefund string = "schedule_refund"
)

// prop value enum
func (m *EstimateCancelSubscriptionRequest) validateRefundableCreditsHandlingEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCancelSubscriptionRequestTypeRefundableCreditsHandlingPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCancelSubscriptionRequest) validateRefundableCreditsHandling(formats strfmt.Registry) error {

	if swag.IsZero(m.RefundableCreditsHandling) { // not required
		return nil
	}

	// value enum
	if err := m.validateRefundableCreditsHandlingEnum("refundable_credits_handling", "body", m.RefundableCreditsHandling); err != nil {
		return err
	}

	return nil
}

var estimateCancelSubscriptionRequestTypeUnbilledChargesOptionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["invoice","delete"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCancelSubscriptionRequestTypeUnbilledChargesOptionPropEnum = append(estimateCancelSubscriptionRequestTypeUnbilledChargesOptionPropEnum, v)
	}
}

const (

	// EstimateCancelSubscriptionRequestUnbilledChargesOptionInvoice captures enum value "invoice"
	EstimateCancelSubscriptionRequestUnbilledChargesOptionInvoice string = "invoice"

	// EstimateCancelSubscriptionRequestUnbilledChargesOptionDelete captures enum value "delete"
	EstimateCancelSubscriptionRequestUnbilledChargesOptionDelete string = "delete"
)

// prop value enum
func (m *EstimateCancelSubscriptionRequest) validateUnbilledChargesOptionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCancelSubscriptionRequestTypeUnbilledChargesOptionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCancelSubscriptionRequest) validateUnbilledChargesOption(formats strfmt.Registry) error {

	if swag.IsZero(m.UnbilledChargesOption) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnbilledChargesOptionEnum("unbilled_charges_option", "body", m.UnbilledChargesOption); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EstimateCancelSubscriptionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EstimateCancelSubscriptionRequest) UnmarshalBinary(b []byte) error {
	var res EstimateCancelSubscriptionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
