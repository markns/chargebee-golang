// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReferralInfo referral info
// swagger:model ReferralInfo
type ReferralInfo struct {

	// account id
	AccountID string `json:"account_id,omitempty"`

	// campaign id
	CampaignID string `json:"campaign_id,omitempty"`

	// coupon code
	CouponCode string `json:"coupon_code,omitempty"`

	// destination url
	DestinationURL string `json:"destination_url,omitempty"`

	// external campaign id
	ExternalCampaignID string `json:"external_campaign_id,omitempty"`

	// external reference id
	ExternalReferenceID string `json:"external_reference_id,omitempty"`

	// friend offer type
	FriendOfferType string `json:"friend_offer_type,omitempty"`

	// notify referral system
	NotifyReferralSystem string `json:"notify_referral_system,omitempty"`

	// post purchase widget enabled
	PostPurchaseWidgetEnabled bool `json:"post_purchase_widget_enabled,omitempty"`

	// referral code
	ReferralCode string `json:"referral_code,omitempty"`

	// referral system
	ReferralSystem string `json:"referral_system,omitempty"`

	// referrer id
	ReferrerID string `json:"referrer_id,omitempty"`

	// referrer reward type
	ReferrerRewardType string `json:"referrer_reward_type,omitempty"`

	// reward status
	RewardStatus string `json:"reward_status,omitempty"`
}

// Validate validates this referral info
func (m *ReferralInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFriendOfferType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNotifyReferralSystem(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReferralSystem(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReferrerRewardType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRewardStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var referralInfoTypeFriendOfferTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","coupon","coupon_code"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		referralInfoTypeFriendOfferTypePropEnum = append(referralInfoTypeFriendOfferTypePropEnum, v)
	}
}

const (

	// ReferralInfoFriendOfferTypeNone captures enum value "none"
	ReferralInfoFriendOfferTypeNone string = "none"

	// ReferralInfoFriendOfferTypeCoupon captures enum value "coupon"
	ReferralInfoFriendOfferTypeCoupon string = "coupon"

	// ReferralInfoFriendOfferTypeCouponCode captures enum value "coupon_code"
	ReferralInfoFriendOfferTypeCouponCode string = "coupon_code"
)

// prop value enum
func (m *ReferralInfo) validateFriendOfferTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, referralInfoTypeFriendOfferTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReferralInfo) validateFriendOfferType(formats strfmt.Registry) error {

	if swag.IsZero(m.FriendOfferType) { // not required
		return nil
	}

	// value enum
	if err := m.validateFriendOfferTypeEnum("friend_offer_type", "body", m.FriendOfferType); err != nil {
		return err
	}

	return nil
}

var referralInfoTypeNotifyReferralSystemPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","first_paid_conversion","all_invoices"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		referralInfoTypeNotifyReferralSystemPropEnum = append(referralInfoTypeNotifyReferralSystemPropEnum, v)
	}
}

const (

	// ReferralInfoNotifyReferralSystemNone captures enum value "none"
	ReferralInfoNotifyReferralSystemNone string = "none"

	// ReferralInfoNotifyReferralSystemFirstPaidConversion captures enum value "first_paid_conversion"
	ReferralInfoNotifyReferralSystemFirstPaidConversion string = "first_paid_conversion"

	// ReferralInfoNotifyReferralSystemAllInvoices captures enum value "all_invoices"
	ReferralInfoNotifyReferralSystemAllInvoices string = "all_invoices"
)

// prop value enum
func (m *ReferralInfo) validateNotifyReferralSystemEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, referralInfoTypeNotifyReferralSystemPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReferralInfo) validateNotifyReferralSystem(formats strfmt.Registry) error {

	if swag.IsZero(m.NotifyReferralSystem) { // not required
		return nil
	}

	// value enum
	if err := m.validateNotifyReferralSystemEnum("notify_referral_system", "body", m.NotifyReferralSystem); err != nil {
		return err
	}

	return nil
}

var referralInfoTypeReferralSystemPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["referral_candy","referral_saasquatch","friendbuy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		referralInfoTypeReferralSystemPropEnum = append(referralInfoTypeReferralSystemPropEnum, v)
	}
}

const (

	// ReferralInfoReferralSystemReferralCandy captures enum value "referral_candy"
	ReferralInfoReferralSystemReferralCandy string = "referral_candy"

	// ReferralInfoReferralSystemReferralSaasquatch captures enum value "referral_saasquatch"
	ReferralInfoReferralSystemReferralSaasquatch string = "referral_saasquatch"

	// ReferralInfoReferralSystemFriendbuy captures enum value "friendbuy"
	ReferralInfoReferralSystemFriendbuy string = "friendbuy"
)

// prop value enum
func (m *ReferralInfo) validateReferralSystemEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, referralInfoTypeReferralSystemPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReferralInfo) validateReferralSystem(formats strfmt.Registry) error {

	if swag.IsZero(m.ReferralSystem) { // not required
		return nil
	}

	// value enum
	if err := m.validateReferralSystemEnum("referral_system", "body", m.ReferralSystem); err != nil {
		return err
	}

	return nil
}

var referralInfoTypeReferrerRewardTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","referral_direct_reward","custom_promotional_credit","custom_revenue_percent_based"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		referralInfoTypeReferrerRewardTypePropEnum = append(referralInfoTypeReferrerRewardTypePropEnum, v)
	}
}

const (

	// ReferralInfoReferrerRewardTypeNone captures enum value "none"
	ReferralInfoReferrerRewardTypeNone string = "none"

	// ReferralInfoReferrerRewardTypeReferralDirectReward captures enum value "referral_direct_reward"
	ReferralInfoReferrerRewardTypeReferralDirectReward string = "referral_direct_reward"

	// ReferralInfoReferrerRewardTypeCustomPromotionalCredit captures enum value "custom_promotional_credit"
	ReferralInfoReferrerRewardTypeCustomPromotionalCredit string = "custom_promotional_credit"

	// ReferralInfoReferrerRewardTypeCustomRevenuePercentBased captures enum value "custom_revenue_percent_based"
	ReferralInfoReferrerRewardTypeCustomRevenuePercentBased string = "custom_revenue_percent_based"
)

// prop value enum
func (m *ReferralInfo) validateReferrerRewardTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, referralInfoTypeReferrerRewardTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReferralInfo) validateReferrerRewardType(formats strfmt.Registry) error {

	if swag.IsZero(m.ReferrerRewardType) { // not required
		return nil
	}

	// value enum
	if err := m.validateReferrerRewardTypeEnum("referrer_reward_type", "body", m.ReferrerRewardType); err != nil {
		return err
	}

	return nil
}

var referralInfoTypeRewardStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","paid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		referralInfoTypeRewardStatusPropEnum = append(referralInfoTypeRewardStatusPropEnum, v)
	}
}

const (

	// ReferralInfoRewardStatusPending captures enum value "pending"
	ReferralInfoRewardStatusPending string = "pending"

	// ReferralInfoRewardStatusPaid captures enum value "paid"
	ReferralInfoRewardStatusPaid string = "paid"

	// ReferralInfoRewardStatusInvalid captures enum value "invalid"
	ReferralInfoRewardStatusInvalid string = "invalid"
)

// prop value enum
func (m *ReferralInfo) validateRewardStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, referralInfoTypeRewardStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReferralInfo) validateRewardStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.RewardStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateRewardStatusEnum("reward_status", "body", m.RewardStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReferralInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReferralInfo) UnmarshalBinary(b []byte) error {
	var res ReferralInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
