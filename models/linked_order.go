// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LinkedOrder linked order
// swagger:model LinkedOrder

type LinkedOrder struct {

	// batch id
	BatchID string `json:"batch_id,omitempty"`

	// created at
	CreatedAt int64 `json:"created_at,omitempty"`

	// fulfillment status
	FulfillmentStatus string `json:"fulfillment_status,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// reference id
	ReferenceID string `json:"reference_id,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

/* polymorph LinkedOrder batch_id false */

/* polymorph LinkedOrder created_at false */

/* polymorph LinkedOrder fulfillment_status false */

/* polymorph LinkedOrder id false */

/* polymorph LinkedOrder reference_id false */

/* polymorph LinkedOrder status false */

// Validate validates this linked order
func (m *LinkedOrder) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var linkedOrderTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["in_progress","success","voided","failure","timeout","needs_attention"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		linkedOrderTypeStatusPropEnum = append(linkedOrderTypeStatusPropEnum, v)
	}
}

const (
	// LinkedOrderStatusInProgress captures enum value "in_progress"
	LinkedOrderStatusInProgress string = "in_progress"
	// LinkedOrderStatusSuccess captures enum value "success"
	LinkedOrderStatusSuccess string = "success"
	// LinkedOrderStatusVoided captures enum value "voided"
	LinkedOrderStatusVoided string = "voided"
	// LinkedOrderStatusFailure captures enum value "failure"
	LinkedOrderStatusFailure string = "failure"
	// LinkedOrderStatusTimeout captures enum value "timeout"
	LinkedOrderStatusTimeout string = "timeout"
	// LinkedOrderStatusNeedsAttention captures enum value "needs_attention"
	LinkedOrderStatusNeedsAttention string = "needs_attention"
)

// prop value enum
func (m *LinkedOrder) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, linkedOrderTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *LinkedOrder) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LinkedOrder) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinkedOrder) UnmarshalBinary(b []byte) error {
	var res LinkedOrder
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
