// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EstimateCreateSubscriptionRequest estimate create subscription request
// swagger:model EstimateCreateSubscriptionRequest

type EstimateCreateSubscriptionRequest struct {

	// billing address city
	BillingAddressCity string `json:"billing_address[city],omitempty"`

	// billing address country
	BillingAddressCountry string `json:"billing_address[country],omitempty"`

	// billing address line1
	BillingAddressLine1 string `json:"billing_address[line1],omitempty"`

	// billing address line2
	BillingAddressLine2 string `json:"billing_address[line2],omitempty"`

	// billing address line3
	BillingAddressLine3 string `json:"billing_address[line3],omitempty"`

	// billing address state code
	BillingAddressStateCode string `json:"billing_address[state_code],omitempty"`

	// billing address validation status
	BillingAddressValidationStatus string `json:"billing_address[validation_status],omitempty"`

	// billing address zip
	BillingAddressZip string `json:"billing_address[zip],omitempty"`

	// billing alignment mode
	BillingAlignmentMode string `json:"billing_alignment_mode,omitempty"`

	// billing cycles
	BillingCycles int32 `json:"billing_cycles,omitempty"`

	// coupon ids
	CouponIds string `json:"coupon_ids,omitempty"`

	// customer entity code
	CustomerEntityCode string `json:"customer[entity_code],omitempty"`

	// customer exempt number
	CustomerExemptNumber string `json:"customer[exempt_number],omitempty"`

	// customer registered for gst
	CustomerRegisteredForGst bool `json:"customer[registered_for_gst],omitempty"`

	// customer taxability
	CustomerTaxability string `json:"customer[taxability],omitempty"`

	// customer vat number
	CustomerVatNumber string `json:"customer[vat_number],omitempty"`

	// invoice immediately
	InvoiceImmediately bool `json:"invoice_immediately,omitempty"`

	// shipping address city
	ShippingAddressCity string `json:"shipping_address[city],omitempty"`

	// shipping address country
	ShippingAddressCountry string `json:"shipping_address[country],omitempty"`

	// shipping address line1
	ShippingAddressLine1 string `json:"shipping_address[line1],omitempty"`

	// shipping address line2
	ShippingAddressLine2 string `json:"shipping_address[line2],omitempty"`

	// shipping address line3
	ShippingAddressLine3 string `json:"shipping_address[line3],omitempty"`

	// shipping address state code
	ShippingAddressStateCode string `json:"shipping_address[state_code],omitempty"`

	// shipping address validation status
	ShippingAddressValidationStatus string `json:"shipping_address[validation_status],omitempty"`

	// shipping address zip
	ShippingAddressZip string `json:"shipping_address[zip],omitempty"`

	// subscription coupon
	SubscriptionCoupon string `json:"subscription[coupon],omitempty"`

	// subscription id
	SubscriptionID string `json:"subscription[id],omitempty"`

	// subscription plan id
	SubscriptionPlanID string `json:"subscription[plan_id],omitempty"`

	// subscription plan quantity
	SubscriptionPlanQuantity int32 `json:"subscription[plan_quantity],omitempty"`

	// subscription plan unit price
	SubscriptionPlanUnitPrice int32 `json:"subscription[plan_unit_price],omitempty"`

	// subscription setup fee
	SubscriptionSetupFee int32 `json:"subscription[setup_fee],omitempty"`

	// subscription start date
	SubscriptionStartDate int64 `json:"subscription[start_date],omitempty"`

	// subscription trial end
	SubscriptionTrialEnd int64 `json:"subscription[trial_end],omitempty"`

	// terms to charge
	TermsToCharge int32 `json:"terms_to_charge,omitempty"`
}

/* polymorph EstimateCreateSubscriptionRequest billing_address[city] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[country] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[line1] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[line2] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[line3] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[state_code] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[validation_status] false */

/* polymorph EstimateCreateSubscriptionRequest billing_address[zip] false */

/* polymorph EstimateCreateSubscriptionRequest billing_alignment_mode false */

/* polymorph EstimateCreateSubscriptionRequest billing_cycles false */

/* polymorph EstimateCreateSubscriptionRequest coupon_ids false */

/* polymorph EstimateCreateSubscriptionRequest customer[entity_code] false */

/* polymorph EstimateCreateSubscriptionRequest customer[exempt_number] false */

/* polymorph EstimateCreateSubscriptionRequest customer[registered_for_gst] false */

/* polymorph EstimateCreateSubscriptionRequest customer[taxability] false */

/* polymorph EstimateCreateSubscriptionRequest customer[vat_number] false */

/* polymorph EstimateCreateSubscriptionRequest invoice_immediately false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[city] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[country] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[line1] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[line2] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[line3] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[state_code] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[validation_status] false */

/* polymorph EstimateCreateSubscriptionRequest shipping_address[zip] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[coupon] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[id] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[plan_id] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[plan_quantity] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[plan_unit_price] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[setup_fee] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[start_date] false */

/* polymorph EstimateCreateSubscriptionRequest subscription[trial_end] false */

/* polymorph EstimateCreateSubscriptionRequest terms_to_charge false */

// Validate validates this estimate create subscription request
func (m *EstimateCreateSubscriptionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBillingAlignmentMode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCustomerEntityCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCustomerTaxability(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateShippingAddressValidationStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var estimateCreateSubscriptionRequestTypeBillingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubscriptionRequestTypeBillingAddressValidationStatusPropEnum = append(estimateCreateSubscriptionRequestTypeBillingAddressValidationStatusPropEnum, v)
	}
}

const (
	// EstimateCreateSubscriptionRequestBillingAddressValidationStatusNotValidated captures enum value "not_validated"
	EstimateCreateSubscriptionRequestBillingAddressValidationStatusNotValidated string = "not_validated"
	// EstimateCreateSubscriptionRequestBillingAddressValidationStatusValid captures enum value "valid"
	EstimateCreateSubscriptionRequestBillingAddressValidationStatusValid string = "valid"
	// EstimateCreateSubscriptionRequestBillingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	EstimateCreateSubscriptionRequestBillingAddressValidationStatusPartiallyValid string = "partially_valid"
	// EstimateCreateSubscriptionRequestBillingAddressValidationStatusInvalid captures enum value "invalid"
	EstimateCreateSubscriptionRequestBillingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *EstimateCreateSubscriptionRequest) validateBillingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubscriptionRequestTypeBillingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubscriptionRequest) validateBillingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAddressValidationStatusEnum("billing_address[validation_status]", "body", m.BillingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

var estimateCreateSubscriptionRequestTypeBillingAlignmentModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["immediate","delayed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubscriptionRequestTypeBillingAlignmentModePropEnum = append(estimateCreateSubscriptionRequestTypeBillingAlignmentModePropEnum, v)
	}
}

const (
	// EstimateCreateSubscriptionRequestBillingAlignmentModeImmediate captures enum value "immediate"
	EstimateCreateSubscriptionRequestBillingAlignmentModeImmediate string = "immediate"
	// EstimateCreateSubscriptionRequestBillingAlignmentModeDelayed captures enum value "delayed"
	EstimateCreateSubscriptionRequestBillingAlignmentModeDelayed string = "delayed"
)

// prop value enum
func (m *EstimateCreateSubscriptionRequest) validateBillingAlignmentModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubscriptionRequestTypeBillingAlignmentModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubscriptionRequest) validateBillingAlignmentMode(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAlignmentMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateBillingAlignmentModeEnum("billing_alignment_mode", "body", m.BillingAlignmentMode); err != nil {
		return err
	}

	return nil
}

var estimateCreateSubscriptionRequestTypeCustomerEntityCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["a","b","c","d","e","f","g","h","i","j","k","l","n","p","q","r","med1","med2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubscriptionRequestTypeCustomerEntityCodePropEnum = append(estimateCreateSubscriptionRequestTypeCustomerEntityCodePropEnum, v)
	}
}

const (
	// EstimateCreateSubscriptionRequestCustomerEntityCodeA captures enum value "a"
	EstimateCreateSubscriptionRequestCustomerEntityCodeA string = "a"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeB captures enum value "b"
	EstimateCreateSubscriptionRequestCustomerEntityCodeB string = "b"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeC captures enum value "c"
	EstimateCreateSubscriptionRequestCustomerEntityCodeC string = "c"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeD captures enum value "d"
	EstimateCreateSubscriptionRequestCustomerEntityCodeD string = "d"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeE captures enum value "e"
	EstimateCreateSubscriptionRequestCustomerEntityCodeE string = "e"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeF captures enum value "f"
	EstimateCreateSubscriptionRequestCustomerEntityCodeF string = "f"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeG captures enum value "g"
	EstimateCreateSubscriptionRequestCustomerEntityCodeG string = "g"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeH captures enum value "h"
	EstimateCreateSubscriptionRequestCustomerEntityCodeH string = "h"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeI captures enum value "i"
	EstimateCreateSubscriptionRequestCustomerEntityCodeI string = "i"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeJ captures enum value "j"
	EstimateCreateSubscriptionRequestCustomerEntityCodeJ string = "j"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeK captures enum value "k"
	EstimateCreateSubscriptionRequestCustomerEntityCodeK string = "k"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeL captures enum value "l"
	EstimateCreateSubscriptionRequestCustomerEntityCodeL string = "l"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeN captures enum value "n"
	EstimateCreateSubscriptionRequestCustomerEntityCodeN string = "n"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeP captures enum value "p"
	EstimateCreateSubscriptionRequestCustomerEntityCodeP string = "p"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeQ captures enum value "q"
	EstimateCreateSubscriptionRequestCustomerEntityCodeQ string = "q"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeR captures enum value "r"
	EstimateCreateSubscriptionRequestCustomerEntityCodeR string = "r"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeMed1 captures enum value "med1"
	EstimateCreateSubscriptionRequestCustomerEntityCodeMed1 string = "med1"
	// EstimateCreateSubscriptionRequestCustomerEntityCodeMed2 captures enum value "med2"
	EstimateCreateSubscriptionRequestCustomerEntityCodeMed2 string = "med2"
)

// prop value enum
func (m *EstimateCreateSubscriptionRequest) validateCustomerEntityCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubscriptionRequestTypeCustomerEntityCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubscriptionRequest) validateCustomerEntityCode(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerEntityCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateCustomerEntityCodeEnum("customer[entity_code]", "body", m.CustomerEntityCode); err != nil {
		return err
	}

	return nil
}

var estimateCreateSubscriptionRequestTypeCustomerTaxabilityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["taxable","exempt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubscriptionRequestTypeCustomerTaxabilityPropEnum = append(estimateCreateSubscriptionRequestTypeCustomerTaxabilityPropEnum, v)
	}
}

const (
	// EstimateCreateSubscriptionRequestCustomerTaxabilityTaxable captures enum value "taxable"
	EstimateCreateSubscriptionRequestCustomerTaxabilityTaxable string = "taxable"
	// EstimateCreateSubscriptionRequestCustomerTaxabilityExempt captures enum value "exempt"
	EstimateCreateSubscriptionRequestCustomerTaxabilityExempt string = "exempt"
)

// prop value enum
func (m *EstimateCreateSubscriptionRequest) validateCustomerTaxabilityEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubscriptionRequestTypeCustomerTaxabilityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubscriptionRequest) validateCustomerTaxability(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerTaxability) { // not required
		return nil
	}

	// value enum
	if err := m.validateCustomerTaxabilityEnum("customer[taxability]", "body", m.CustomerTaxability); err != nil {
		return err
	}

	return nil
}

var estimateCreateSubscriptionRequestTypeShippingAddressValidationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_validated","valid","partially_valid","invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		estimateCreateSubscriptionRequestTypeShippingAddressValidationStatusPropEnum = append(estimateCreateSubscriptionRequestTypeShippingAddressValidationStatusPropEnum, v)
	}
}

const (
	// EstimateCreateSubscriptionRequestShippingAddressValidationStatusNotValidated captures enum value "not_validated"
	EstimateCreateSubscriptionRequestShippingAddressValidationStatusNotValidated string = "not_validated"
	// EstimateCreateSubscriptionRequestShippingAddressValidationStatusValid captures enum value "valid"
	EstimateCreateSubscriptionRequestShippingAddressValidationStatusValid string = "valid"
	// EstimateCreateSubscriptionRequestShippingAddressValidationStatusPartiallyValid captures enum value "partially_valid"
	EstimateCreateSubscriptionRequestShippingAddressValidationStatusPartiallyValid string = "partially_valid"
	// EstimateCreateSubscriptionRequestShippingAddressValidationStatusInvalid captures enum value "invalid"
	EstimateCreateSubscriptionRequestShippingAddressValidationStatusInvalid string = "invalid"
)

// prop value enum
func (m *EstimateCreateSubscriptionRequest) validateShippingAddressValidationStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, estimateCreateSubscriptionRequestTypeShippingAddressValidationStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *EstimateCreateSubscriptionRequest) validateShippingAddressValidationStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddressValidationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateShippingAddressValidationStatusEnum("shipping_address[validation_status]", "body", m.ShippingAddressValidationStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EstimateCreateSubscriptionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EstimateCreateSubscriptionRequest) UnmarshalBinary(b []byte) error {
	var res EstimateCreateSubscriptionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
