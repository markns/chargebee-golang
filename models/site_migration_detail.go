// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SiteMigrationDetail site migration detail
// swagger:model SiteMigrationDetail

type SiteMigrationDetail struct {

	// entity id
	EntityID string `json:"entity_id,omitempty"`

	// entity id at other site
	EntityIDAtOtherSite string `json:"entity_id_at_other_site,omitempty"`

	// entity type
	EntityType string `json:"entity_type,omitempty"`

	// migrated at
	MigratedAt int64 `json:"migrated_at,omitempty"`

	// other site name
	OtherSiteName string `json:"other_site_name,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

/* polymorph SiteMigrationDetail entity_id false */

/* polymorph SiteMigrationDetail entity_id_at_other_site false */

/* polymorph SiteMigrationDetail entity_type false */

/* polymorph SiteMigrationDetail migrated_at false */

/* polymorph SiteMigrationDetail other_site_name false */

/* polymorph SiteMigrationDetail status false */

// Validate validates this site migration detail
func (m *SiteMigrationDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEntityType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var siteMigrationDetailTypeEntityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["customer","subscription","invoice","credit_note","transaction","plan","addon","coupon"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		siteMigrationDetailTypeEntityTypePropEnum = append(siteMigrationDetailTypeEntityTypePropEnum, v)
	}
}

const (
	// SiteMigrationDetailEntityTypeCustomer captures enum value "customer"
	SiteMigrationDetailEntityTypeCustomer string = "customer"
	// SiteMigrationDetailEntityTypeSubscription captures enum value "subscription"
	SiteMigrationDetailEntityTypeSubscription string = "subscription"
	// SiteMigrationDetailEntityTypeInvoice captures enum value "invoice"
	SiteMigrationDetailEntityTypeInvoice string = "invoice"
	// SiteMigrationDetailEntityTypeCreditNote captures enum value "credit_note"
	SiteMigrationDetailEntityTypeCreditNote string = "credit_note"
	// SiteMigrationDetailEntityTypeTransaction captures enum value "transaction"
	SiteMigrationDetailEntityTypeTransaction string = "transaction"
	// SiteMigrationDetailEntityTypePlan captures enum value "plan"
	SiteMigrationDetailEntityTypePlan string = "plan"
	// SiteMigrationDetailEntityTypeAddon captures enum value "addon"
	SiteMigrationDetailEntityTypeAddon string = "addon"
	// SiteMigrationDetailEntityTypeCoupon captures enum value "coupon"
	SiteMigrationDetailEntityTypeCoupon string = "coupon"
)

// prop value enum
func (m *SiteMigrationDetail) validateEntityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, siteMigrationDetailTypeEntityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SiteMigrationDetail) validateEntityType(formats strfmt.Registry) error {

	if swag.IsZero(m.EntityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateEntityTypeEnum("entity_type", "body", m.EntityType); err != nil {
		return err
	}

	return nil
}

var siteMigrationDetailTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["future","in_trial","active","non_renewing","cancelled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		siteMigrationDetailTypeStatusPropEnum = append(siteMigrationDetailTypeStatusPropEnum, v)
	}
}

const (
	// SiteMigrationDetailStatusFuture captures enum value "future"
	SiteMigrationDetailStatusFuture string = "future"
	// SiteMigrationDetailStatusInTrial captures enum value "in_trial"
	SiteMigrationDetailStatusInTrial string = "in_trial"
	// SiteMigrationDetailStatusActive captures enum value "active"
	SiteMigrationDetailStatusActive string = "active"
	// SiteMigrationDetailStatusNonRenewing captures enum value "non_renewing"
	SiteMigrationDetailStatusNonRenewing string = "non_renewing"
	// SiteMigrationDetailStatusCancelled captures enum value "cancelled"
	SiteMigrationDetailStatusCancelled string = "cancelled"
)

// prop value enum
func (m *SiteMigrationDetail) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, siteMigrationDetailTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SiteMigrationDetail) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SiteMigrationDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SiteMigrationDetail) UnmarshalBinary(b []byte) error {
	var res SiteMigrationDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
