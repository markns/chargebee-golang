// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SiteMigrationDetail site migration detail
// swagger:model SiteMigrationDetail

type SiteMigrationDetail struct {

	// entity id
	EntityID string `json:"entity_id,omitempty"`

	// entity id at other site
	EntityIDAtOtherSite string `json:"entity_id_at_other_site,omitempty"`

	// entity type
	EntityType string `json:"entity_type,omitempty"`

	// migrated at
	MigratedAt int64 `json:"migrated_at,omitempty"`

	// other site name
	OtherSiteName string `json:"other_site_name,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

/* polymorph SiteMigrationDetail entity_id false */

/* polymorph SiteMigrationDetail entity_id_at_other_site false */

/* polymorph SiteMigrationDetail entity_type false */

/* polymorph SiteMigrationDetail migrated_at false */

/* polymorph SiteMigrationDetail other_site_name false */

/* polymorph SiteMigrationDetail status false */

// Validate validates this site migration detail
func (m *SiteMigrationDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEntityType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var siteMigrationDetailTypeEntityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["plan_setup","plan","addon","adhoc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		siteMigrationDetailTypeEntityTypePropEnum = append(siteMigrationDetailTypeEntityTypePropEnum, v)
	}
}

const (
	// SiteMigrationDetailEntityTypePlanSetup captures enum value "plan_setup"
	SiteMigrationDetailEntityTypePlanSetup string = "plan_setup"
	// SiteMigrationDetailEntityTypePlan captures enum value "plan"
	SiteMigrationDetailEntityTypePlan string = "plan"
	// SiteMigrationDetailEntityTypeAddon captures enum value "addon"
	SiteMigrationDetailEntityTypeAddon string = "addon"
	// SiteMigrationDetailEntityTypeAdhoc captures enum value "adhoc"
	SiteMigrationDetailEntityTypeAdhoc string = "adhoc"
)

// prop value enum
func (m *SiteMigrationDetail) validateEntityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, siteMigrationDetailTypeEntityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SiteMigrationDetail) validateEntityType(formats strfmt.Registry) error {

	if swag.IsZero(m.EntityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateEntityTypeEnum("entity_type", "body", m.EntityType); err != nil {
		return err
	}

	return nil
}

var siteMigrationDetailTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["in_progress","success","voided","failure","timeout","needs_attention"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		siteMigrationDetailTypeStatusPropEnum = append(siteMigrationDetailTypeStatusPropEnum, v)
	}
}

const (
	// SiteMigrationDetailStatusInProgress captures enum value "in_progress"
	SiteMigrationDetailStatusInProgress string = "in_progress"
	// SiteMigrationDetailStatusSuccess captures enum value "success"
	SiteMigrationDetailStatusSuccess string = "success"
	// SiteMigrationDetailStatusVoided captures enum value "voided"
	SiteMigrationDetailStatusVoided string = "voided"
	// SiteMigrationDetailStatusFailure captures enum value "failure"
	SiteMigrationDetailStatusFailure string = "failure"
	// SiteMigrationDetailStatusTimeout captures enum value "timeout"
	SiteMigrationDetailStatusTimeout string = "timeout"
	// SiteMigrationDetailStatusNeedsAttention captures enum value "needs_attention"
	SiteMigrationDetailStatusNeedsAttention string = "needs_attention"
)

// prop value enum
func (m *SiteMigrationDetail) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, siteMigrationDetailTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SiteMigrationDetail) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SiteMigrationDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SiteMigrationDetail) UnmarshalBinary(b []byte) error {
	var res SiteMigrationDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
