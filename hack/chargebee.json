{
  "basePath": "/api/v2",
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "definitions": {
    "Addon": {
      "properties": {
        "id": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "remaining_billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        },
        "unit_price": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AddonCopyRequest": {
      "properties": {
        "for_site_merging": {
          "type": "boolean"
        },
        "from_site": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "id_at_from_site": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddonCreateRequest": {
      "properties": {
        "accounting_category1": {
          "type": "string"
        },
        "accounting_category2": {
          "type": "string"
        },
        "accounting_code": {
          "type": "string"
        },
        "charge_type": {
          "enum": [
            "recurring",
            "non_recurring"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled_in_portal": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "format": "int32",
          "type": "integer"
        },
        "period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "tax_profile_id": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddonResponse": {
      "properties": {
        "addon": {
          "$ref": "#/definitions/Addon"
        }
      },
      "type": "object"
    },
    "AddonUpdateRequest": {
      "properties": {
        "accounting_category1": {
          "type": "string"
        },
        "accounting_category2": {
          "type": "string"
        },
        "accounting_code": {
          "type": "string"
        },
        "charge_type": {
          "enum": [
            "recurring",
            "non_recurring"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled_in_portal": {
          "type": "boolean"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "format": "int32",
          "type": "integer"
        },
        "period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "tax_profile_id": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Address": {
      "properties": {
        "addr": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "extended_addr": {
          "type": "string"
        },
        "extended_addr2": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_code": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "validation_status": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddressResponse": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        }
      },
      "type": "object"
    },
    "AddressRetrieveRequest": {
      "properties": {
        "label": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddressUpdateRequest": {
      "properties": {
        "addr": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "extended_addr": {
          "type": "string"
        },
        "extended_addr2": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_code": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "validation_status": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AdjustmentCreditNote": {
      "properties": {
        "cn_date": {
          "format": "int64",
          "type": "integer"
        },
        "cn_id": {
          "type": "string"
        },
        "cn_reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "cn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "cn_total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Allocation": {
      "properties": {
        "allocated_amount": {
          "format": "int32",
          "type": "integer"
        },
        "allocated_at": {
          "format": "int64",
          "type": "integer"
        },
        "invoice_date": {
          "format": "int64",
          "type": "integer"
        },
        "invoice_id": {
          "type": "string"
        },
        "invoice_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AmazonPayment": {
      "properties": {
        "agreement_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppliedCredit": {
      "properties": {
        "applied_amount": {
          "format": "int32",
          "type": "integer"
        },
        "applied_at": {
          "format": "int64",
          "type": "integer"
        },
        "cn_date": {
          "format": "int64",
          "type": "integer"
        },
        "cn_id": {
          "type": "string"
        },
        "cn_reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "cn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Balance": {
      "properties": {
        "balance_currency_code": {
          "type": "string"
        },
        "excess_payments": {
          "format": "int32",
          "type": "integer"
        },
        "promotional_credits": {
          "format": "int32",
          "type": "integer"
        },
        "refundable_credits": {
          "format": "int32",
          "type": "integer"
        },
        "unbilled_charges": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "account_type": {
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "mandate_id": {
          "type": "string"
        },
        "name_on_account": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillingAddress": {
      "properties": {
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_code": {
          "type": "string"
        },
        "validation_status": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Card": {
      "properties": {
        "billing_addr1": {
          "type": "string"
        },
        "billing_addr2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_state_code": {
          "type": "string"
        },
        "billing_zip": {
          "type": "string"
        },
        "brand": {
          "enum": [
            "visa",
            "mastercard",
            "american_express",
            "discover",
            "jcb",
            "diners_club",
            "other"
          ],
          "type": "string"
        },
        "expiry_month": {
          "format": "int32",
          "type": "integer"
        },
        "expiry_year": {
          "format": "int32",
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "funding_type": {
          "enum": [
            "credit",
            "debit",
            "prepaid",
            "not_known",
            "not_applicable"
          ],
          "type": "string"
        },
        "iin": {
          "type": "string"
        },
        "last4": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "masked_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardCopyCardForCustomerRequest": {
      "properties": {
        "gateway_account_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardResponse": {
      "properties": {
        "card": {
          "$ref": "#/definitions/Card"
        }
      },
      "type": "object"
    },
    "CardSwitchGatewayForCustomerRequest": {
      "properties": {
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardUpdateCardForCustomerRequest": {
      "properties": {
        "billing_addr1": {
          "type": "string"
        },
        "billing_addr2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_state_code": {
          "type": "string"
        },
        "billing_zip": {
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "cvv": {
          "type": "string"
        },
        "expiry_month": {
          "format": "int32",
          "type": "integer"
        },
        "expiry_year": {
          "format": "int32",
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "tmp_token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "added_by": {
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommentCreateRequest": {
      "properties": {
        "added_by": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommentResponse": {
      "properties": {
        "comment": {
          "$ref": "#/definitions/Comment"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "send_account_email": {
          "type": "boolean"
        },
        "send_billing_email": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Coupon": {
      "properties": {
        "applied_count": {
          "format": "int32",
          "type": "integer"
        },
        "apply_till": {
          "format": "int64",
          "type": "integer"
        },
        "coupon_code": {
          "type": "string"
        },
        "coupon_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponCode": {
      "properties": {
        "code": {
          "type": "string"
        },
        "coupon_id": {
          "type": "string"
        },
        "coupon_set_id": {
          "type": "string"
        },
        "coupon_set_name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponCodeCreateRequest": {
      "properties": {
        "code": {
          "type": "string"
        },
        "coupon_id": {
          "type": "string"
        },
        "coupon_set_name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponCodeResponse": {
      "properties": {
        "couponcode": {
          "$ref": "#/definitions/CouponCode"
        }
      },
      "type": "object"
    },
    "CouponCopyRequest": {
      "properties": {
        "for_site_merging": {
          "type": "boolean"
        },
        "from_site": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "id_at_from_site": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponCreateRequest": {
      "properties": {
        "addon_constraint": {
          "enum": [
            "none",
            "all",
            "specific",
            "not_applicable"
          ],
          "type": "string"
        },
        "addon_ids": {
          "type": "string"
        },
        "apply_on": {
          "enum": [
            "invoice_amount",
            "specified_items_total",
            "each_specified_item",
            "each_unit_of_specified_items"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer"
        },
        "discount_percentage": {
          "format": "double",
          "type": "number"
        },
        "discount_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "discount_type": {
          "enum": [
            "item_level_coupon",
            "document_level_coupon",
            "promotional_credits",
            "prorated_credits"
          ],
          "type": "string"
        },
        "duration_month": {
          "format": "int32",
          "type": "integer"
        },
        "duration_type": {
          "enum": [
            "one_time",
            "forever",
            "limited_period"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "max_redemptions": {
          "format": "int32",
          "type": "integer"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "plan_constraint": {
          "enum": [
            "none",
            "all",
            "specific",
            "not_applicable"
          ],
          "type": "string"
        },
        "plan_ids": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "valid_till": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CouponResponse": {
      "properties": {
        "coupon": {
          "$ref": "#/definitions/Coupon"
        }
      },
      "type": "object"
    },
    "CouponSet": {
      "properties": {
        "archived_count": {
          "format": "int32",
          "type": "integer"
        },
        "coupon_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "redeemed_count": {
          "format": "int32",
          "type": "integer"
        },
        "total_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CouponSetAddCouponCodesRequest": {
      "properties": {
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponSetCreateRequest": {
      "properties": {
        "coupon_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CouponSetResponse": {
      "properties": {
        "couponset": {
          "$ref": "#/definitions/CouponSet"
        }
      },
      "type": "object"
    },
    "CouponSetUpdateRequest": {
      "properties": {
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditNote": {
      "properties": {
        "allocations": {
          "items": {
            "$ref": "#/definitions/Allocation"
          },
          "type": "array"
        },
        "amount_allocated": {
          "format": "int32",
          "type": "integer"
        },
        "amount_available": {
          "format": "int32",
          "type": "integer"
        },
        "amount_refunded": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/Discount"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "line_item_discounts": {
          "items": {
            "$ref": "#/definitions/LineItemDiscount"
          },
          "type": "array"
        },
        "line_item_taxes": {
          "items": {
            "$ref": "#/definitions/LineItemTax"
          },
          "type": "array"
        },
        "line_items": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "linked_refunds": {
          "items": {
            "$ref": "#/definitions/LinkedRefund"
          },
          "type": "array"
        },
        "price_type": {
          "enum": [
            "tax_exclusive",
            "tax_inclusive"
          ],
          "type": "string"
        },
        "reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "reference_invoice_id": {
          "type": "string"
        },
        "refunded_at": {
          "format": "int64",
          "type": "integer"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "round_off_amount": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "sub_total": {
          "format": "int32",
          "type": "integer"
        },
        "subscription_id": {
          "type": "string"
        },
        "taxes": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        },
        "vat_number": {
          "type": "string"
        },
        "voided_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreditNoteCreateRequest": {
      "properties": {
        "customer_notes": {
          "type": "string"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "reference_invoice_id": {
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditNoteDeleteRequest": {
      "properties": {
        "comment": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditNoteEstimate": {
      "properties": {
        "amount_allocated": {
          "format": "int32",
          "type": "integer"
        },
        "amount_available": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/Discount"
          },
          "type": "array"
        },
        "line_item_discounts": {
          "items": {
            "$ref": "#/definitions/LineItemDiscount"
          },
          "type": "array"
        },
        "line_item_taxes": {
          "items": {
            "$ref": "#/definitions/LineItemTax"
          },
          "type": "array"
        },
        "line_items": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "price_type": {
          "enum": [
            "tax_exclusive",
            "tax_inclusive"
          ],
          "type": "string"
        },
        "reference_invoice_id": {
          "type": "string"
        },
        "sub_total": {
          "format": "int32",
          "type": "integer"
        },
        "taxes": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditNoteRecordRefundRequest": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "transaction[amount]": {
          "format": "int32",
          "type": "integer"
        },
        "transaction[date]": {
          "format": "int64",
          "type": "integer"
        },
        "transaction[payment_method]": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "transaction[reference_number]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditNoteResponse": {
      "properties": {
        "creditnote": {
          "$ref": "#/definitions/CreditNote"
        }
      },
      "type": "object"
    },
    "CreditNoteVoidCreditNoteRequest": {
      "properties": {
        "comment": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "allow_direct_debit": {
          "type": "boolean"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "backup_payment_source_id": {
          "type": "string"
        },
        "balances": {
          "items": {
            "$ref": "#/definitions/Balance"
          },
          "type": "array"
        },
        "billing_address": {
          "$ref": "#/definitions/BillingAddress"
        },
        "billing_date": {
          "format": "int32",
          "type": "integer"
        },
        "billing_date_mode": {
          "enum": [
            "using_defaults",
            "manually_set"
          ],
          "type": "string"
        },
        "billing_day_of_week": {
          "enum": [
            "sunday",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday"
          ],
          "type": "string"
        },
        "billing_day_of_week_mode": {
          "enum": [
            "using_defaults",
            "manually_set"
          ],
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "consolidated_invoicing": {
          "type": "boolean"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "created_from_ip": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "entity_code": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "excess_payments": {
          "format": "int32",
          "type": "integer"
        },
        "exempt_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "fraud_flag": {
          "enum": [
            "safe",
            "suspicious",
            "fraudulent"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "net_term_days": {
          "format": "int32",
          "type": "integer"
        },
        "payment_method": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "phone": {
          "type": "string"
        },
        "preferred_currency_code": {
          "type": "string"
        },
        "primary_payment_source_id": {
          "type": "string"
        },
        "promotional_credits": {
          "format": "int32",
          "type": "integer"
        },
        "referral_urls": {
          "items": {
            "$ref": "#/definitions/ReferralUrl"
          },
          "type": "array"
        },
        "refundable_credits": {
          "format": "int32",
          "type": "integer"
        },
        "registered_for_gst": {
          "type": "boolean"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "taxability": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "unbilled_charges": {
          "format": "int32",
          "type": "integer"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        },
        "vat_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerAddContactRequest": {
      "properties": {
        "contact[email]": {
          "type": "string"
        },
        "contact[enabled]": {
          "type": "boolean"
        },
        "contact[first_name]": {
          "type": "string"
        },
        "contact[id]": {
          "type": "string"
        },
        "contact[label]": {
          "type": "string"
        },
        "contact[last_name]": {
          "type": "string"
        },
        "contact[phone]": {
          "type": "string"
        },
        "contact[send_account_email]": {
          "type": "boolean"
        },
        "contact[send_billing_email]": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerAddPromotionalCreditsRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerAssignPaymentRoleRequest": {
      "properties": {
        "payment_source_id": {
          "type": "string"
        },
        "role": {
          "enum": [
            "primary",
            "backup",
            "none"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerChangeBillingDateRequest": {
      "properties": {
        "billing_date": {
          "format": "int32",
          "type": "integer"
        },
        "billing_date_mode": {
          "enum": [
            "using_defaults",
            "manually_set"
          ],
          "type": "string"
        },
        "billing_day_of_week": {
          "enum": [
            "sunday",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday"
          ],
          "type": "string"
        },
        "billing_day_of_week_mode": {
          "enum": [
            "using_defaults",
            "manually_set"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerCollectPaymentRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[tmp_token]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "payment_source_id": {
          "type": "string"
        },
        "replace_primary_payment_source": {
          "type": "boolean"
        },
        "retain_payment_source": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerCreateRequest": {
      "properties": {
        "allow_direct_debit": {
          "type": "boolean"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[ip_address]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "card[tmp_token]": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "consolidated_invoicing": {
          "type": "boolean"
        },
        "created_from_ip": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "entity_code": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "exempt_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "net_term_days": {
          "format": "int32",
          "type": "integer"
        },
        "payment_method[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[issuing_country]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[tmp_token]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "preferred_currency_code": {
          "type": "string"
        },
        "registered_for_gst": {
          "type": "boolean"
        },
        "taxability": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "vat_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerDeductPromotionalCreditsRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerDeleteContactRequest": {
      "properties": {
        "contact[id]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerDeleteRequest": {
      "properties": {
        "delete_payment_method": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerMoveRequest": {
      "properties": {
        "from_site": {
          "type": "string"
        },
        "id_at_from_site": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerRecordExcessPaymentRequest": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "transaction[amount]": {
          "format": "int32",
          "type": "integer"
        },
        "transaction[currency_code]": {
          "type": "string"
        },
        "transaction[date]": {
          "format": "int64",
          "type": "integer"
        },
        "transaction[payment_method]": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "transaction[reference_number]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "CustomerSetPromotionalCreditsRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerUpdateBillingInfoRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "registered_for_gst": {
          "type": "boolean"
        },
        "vat_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerUpdateContactRequest": {
      "properties": {
        "contact[email]": {
          "type": "string"
        },
        "contact[enabled]": {
          "type": "boolean"
        },
        "contact[first_name]": {
          "type": "string"
        },
        "contact[id]": {
          "type": "string"
        },
        "contact[label]": {
          "type": "string"
        },
        "contact[last_name]": {
          "type": "string"
        },
        "contact[phone]": {
          "type": "string"
        },
        "contact[send_account_email]": {
          "type": "boolean"
        },
        "contact[send_billing_email]": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerUpdatePaymentMethodRequest": {
      "properties": {
        "payment_method[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[issuing_country]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[tmp_token]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerUpdateRequest": {
      "properties": {
        "allow_direct_debit": {
          "type": "boolean"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "consolidated_invoicing": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "entity_code": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "exempt_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "fraud_flag": {
          "enum": [
            "safe",
            "suspicious",
            "fraudulent"
          ],
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "net_term_days": {
          "format": "int32",
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "preferred_currency_code": {
          "type": "string"
        },
        "taxability": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Discount": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Download": {
      "properties": {
        "download_url": {
          "type": "string"
        },
        "valid_till": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Estimate": {
      "properties": {
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "credit_note_estimates": {
          "items": {
            "$ref": "#/definitions/CreditNoteEstimate"
          },
          "type": "array"
        },
        "invoice_estimate": {
          "$ref": "#/definitions/InvoiceEstimate"
        },
        "invoice_estimates": {
          "items": {
            "$ref": "#/definitions/InvoiceEstimate"
          },
          "type": "array"
        },
        "next_invoice_estimate": {
          "$ref": "#/definitions/InvoiceEstimate"
        },
        "subscription_estimate": {
          "$ref": "#/definitions/SubscriptionEstimate"
        },
        "unbilled_charge_estimates": {
          "items": {
            "$ref": "#/definitions/UnbilledCharge"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EstimateCancelSubscriptionRequest": {
      "properties": {
        "account_receivables_handling": {
          "enum": [
            "no_action",
            "schedule_payment_collection",
            "write_off"
          ],
          "type": "string"
        },
        "credit_option_for_current_term_charges": {
          "enum": [
            "none",
            "prorate",
            "full"
          ],
          "type": "string"
        },
        "end_of_term": {
          "type": "boolean"
        },
        "refundable_credits_handling": {
          "enum": [
            "no_action",
            "schedule_refund"
          ],
          "type": "string"
        },
        "unbilled_charges_option": {
          "enum": [
            "invoice",
            "delete"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateChangeTermEndRequest": {
      "properties": {
        "invoice_immediately": {
          "type": "boolean"
        },
        "prorate": {
          "type": "boolean"
        },
        "term_ends_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EstimateCreateSubForCustomerEstimateRequest": {
      "properties": {
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "coupon_ids": {
          "type": "string"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "subscription[id]": {
          "type": "string"
        },
        "subscription[plan_id]": {
          "type": "string"
        },
        "subscription[plan_quantity]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[plan_unit_price]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[setup_fee]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[start_date]": {
          "format": "int64",
          "type": "integer"
        },
        "subscription[trial_end]": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "use_existing_balances": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateCreateSubscriptionRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "coupon_ids": {
          "type": "string"
        },
        "customer[entity_code]": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "customer[exempt_number]": {
          "type": "string"
        },
        "customer[registered_for_gst]": {
          "type": "boolean"
        },
        "customer[taxability]": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "subscription[coupon]": {
          "type": "string"
        },
        "subscription[id]": {
          "type": "string"
        },
        "subscription[plan_id]": {
          "type": "string"
        },
        "subscription[plan_quantity]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[plan_unit_price]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[setup_fee]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[start_date]": {
          "format": "int64",
          "type": "integer"
        },
        "subscription[trial_end]": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EstimateRenewalEstimateRequest": {
      "properties": {
        "ignore_scheduled_cancellation": {
          "type": "boolean"
        },
        "ignore_scheduled_changes": {
          "type": "boolean"
        },
        "include_delayed_charges": {
          "type": "boolean"
        },
        "use_existing_balances": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateResponse": {
      "properties": {
        "estimate": {
          "$ref": "#/definitions/Estimate"
        }
      },
      "type": "object"
    },
    "EstimateUpdateSubscriptionRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "coupon_ids": {
          "type": "string"
        },
        "customer[registered_for_gst]": {
          "type": "boolean"
        },
        "customer[taxability]": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "end_of_term": {
          "type": "boolean"
        },
        "force_term_reset": {
          "type": "boolean"
        },
        "include_delayed_charges": {
          "type": "boolean"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "prorate": {
          "type": "boolean"
        },
        "reactivate": {
          "type": "boolean"
        },
        "reactivate_from": {
          "format": "int64",
          "type": "integer"
        },
        "replace_addon_list": {
          "type": "boolean"
        },
        "replace_coupon_list": {
          "type": "boolean"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "subscription[coupon]": {
          "type": "string"
        },
        "subscription[id]": {
          "type": "string"
        },
        "subscription[plan_id]": {
          "type": "string"
        },
        "subscription[plan_quantity]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[plan_unit_price]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[setup_fee]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[start_date]": {
          "format": "int64",
          "type": "integer"
        },
        "subscription[trial_end]": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "use_existing_balances": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Event": {
      "properties": {
        "api_version": {
          "enum": [
            "v1",
            "v2"
          ],
          "type": "string"
        },
        "event_type": {
          "enum": [
            "plan_created",
            "plan_updated",
            "plan_deleted",
            "addon_created",
            "addon_updated",
            "addon_deleted",
            "coupon_created",
            "coupon_updated",
            "coupon_deleted",
            "coupon_set_created",
            "coupon_set_updated",
            "coupon_set_deleted",
            "coupon_codes_added",
            "coupon_codes_deleted",
            "coupon_codes_updated",
            "customer_created",
            "customer_changed",
            "customer_deleted",
            "customer_moved_out",
            "customer_moved_in",
            "promotional_credits_added",
            "promotional_credits_deducted",
            "subscription_created",
            "subscription_started",
            "subscription_trial_end_reminder",
            "subscription_activated",
            "subscription_changed",
            "subscription_cancellation_scheduled",
            "subscription_cancellation_reminder",
            "subscription_cancelled",
            "subscription_reactivated",
            "subscription_renewed",
            "subscription_scheduled_cancellation_removed",
            "subscription_changes_scheduled",
            "subscription_scheduled_changes_removed",
            "subscription_shipping_address_updated",
            "subscription_deleted",
            "pending_invoice_created",
            "pending_invoice_updated",
            "invoice_generated",
            "invoice_updated",
            "invoice_deleted",
            "credit_note_created",
            "credit_note_updated",
            "credit_note_deleted",
            "subscription_renewal_reminder",
            "transaction_created",
            "transaction_updated",
            "transaction_deleted",
            "payment_succeeded",
            "payment_failed",
            "payment_refunded",
            "payment_initiated",
            "refund_initiated",
            "netd_payment_due_reminder",
            "card_added",
            "card_updated",
            "card_expiry_reminder",
            "card_expired",
            "card_deleted",
            "payment_source_added",
            "payment_source_updated",
            "payment_source_deleted",
            "unbilled_charges_created",
            "unbilled_charges_voided",
            "unbilled_charges_deleted",
            "unbilled_charges_invoiced"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "occurred_at": {
          "format": "int64",
          "type": "integer"
        },
        "source": {
          "enum": [
            "admin_console",
            "api",
            "scheduled_job",
            "hosted_page",
            "portal",
            "system",
            "none",
            "js_api",
            "migration",
            "bulk_operation",
            "external_service"
          ],
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "webhooks": {
          "items": {
            "$ref": "#/definitions/Webhook"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EventResponse": {
      "properties": {
        "event": {
          "$ref": "#/definitions/Event"
        }
      },
      "type": "object"
    },
    "HostedPage": {
      "properties": {
        "checkout_info": {
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "embed": {
          "type": "boolean"
        },
        "expires_at": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "pass_thru_content": {
          "type": "string"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "state": {
          "enum": [
            "created",
            "requested",
            "succeeded",
            "cancelled",
            "failed",
            "acknowledged"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostedPageCheckoutExistingRequest": {
      "properties": {
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "cancel_url": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "embed": {
          "type": "boolean"
        },
        "force_term_reset": {
          "type": "boolean"
        },
        "iframe_messaging": {
          "type": "boolean"
        },
        "pass_thru_content": {
          "type": "string"
        },
        "reactivate": {
          "type": "boolean"
        },
        "reactivate_from": {
          "format": "int64",
          "type": "integer"
        },
        "redirect_url": {
          "type": "string"
        },
        "replace_addon_list": {
          "type": "boolean"
        },
        "subscription[coupon]": {
          "type": "string"
        },
        "subscription[id]": {
          "type": "string"
        },
        "subscription[invoice_notes]": {
          "type": "string"
        },
        "subscription[plan_id]": {
          "type": "string"
        },
        "subscription[plan_quantity]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[plan_unit_price]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[setup_fee]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[start_date]": {
          "format": "int64",
          "type": "integer"
        },
        "subscription[trial_end]": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "HostedPageCheckoutNewRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "cancel_url": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "customer[company]": {
          "type": "string"
        },
        "customer[consolidated_invoicing]": {
          "type": "boolean"
        },
        "customer[email]": {
          "type": "string"
        },
        "customer[first_name]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        },
        "customer[last_name]": {
          "type": "string"
        },
        "customer[locale]": {
          "type": "string"
        },
        "customer[phone]": {
          "type": "string"
        },
        "customer[taxability]": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "embed": {
          "type": "boolean"
        },
        "iframe_messaging": {
          "type": "boolean"
        },
        "pass_thru_content": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "subscription[auto_collection]": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "subscription[coupon]": {
          "type": "string"
        },
        "subscription[id]": {
          "type": "string"
        },
        "subscription[invoice_notes]": {
          "type": "string"
        },
        "subscription[plan_id]": {
          "type": "string"
        },
        "subscription[plan_quantity]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[plan_unit_price]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[setup_fee]": {
          "format": "int32",
          "type": "integer"
        },
        "subscription[start_date]": {
          "format": "int64",
          "type": "integer"
        },
        "subscription[trial_end]": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "HostedPageCollectNowRequest": {
      "properties": {
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostedPageManagePaymentSourcesRequest": {
      "properties": {
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostedPageResponse": {
      "properties": {
        "hostedpage": {
          "$ref": "#/definitions/HostedPage"
        }
      },
      "type": "object"
    },
    "HostedPageUpdateCardRequest": {
      "properties": {
        "cancel_url": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "embed": {
          "type": "boolean"
        },
        "iframe_messaging": {
          "type": "boolean"
        },
        "pass_thru_content": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostedPageUpdatePaymentMethodRequest": {
      "properties": {
        "cancel_url": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "embed": {
          "type": "boolean"
        },
        "iframe_messaging": {
          "type": "boolean"
        },
        "pass_thru_content": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Invoice": {
      "properties": {
        "adjustment_credit_notes": {
          "items": {
            "$ref": "#/definitions/AdjustmentCreditNote"
          },
          "type": "array"
        },
        "amount_adjusted": {
          "format": "int32",
          "type": "integer"
        },
        "amount_due": {
          "format": "int32",
          "type": "integer"
        },
        "amount_paid": {
          "format": "int32",
          "type": "integer"
        },
        "amount_to_collect": {
          "format": "int32",
          "type": "integer"
        },
        "applied_credits": {
          "items": {
            "$ref": "#/definitions/AppliedCredit"
          },
          "type": "array"
        },
        "billing_address": {
          "$ref": "#/definitions/BillingAddress"
        },
        "credits_applied": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/Discount"
          },
          "type": "array"
        },
        "due_date": {
          "format": "int64",
          "type": "integer"
        },
        "dunning_status": {
          "enum": [
            "in_progress",
            "exhausted",
            "stopped",
            "success"
          ],
          "type": "string"
        },
        "first_invoice": {
          "type": "boolean"
        },
        "has_advance_charges": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "issued_credit_notes": {
          "items": {
            "$ref": "#/definitions/IssuedCreditNote"
          },
          "type": "array"
        },
        "line_item_discounts": {
          "items": {
            "$ref": "#/definitions/LineItemDiscount"
          },
          "type": "array"
        },
        "line_item_taxes": {
          "items": {
            "$ref": "#/definitions/LineItemTax"
          },
          "type": "array"
        },
        "line_items": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "linked_orders": {
          "items": {
            "$ref": "#/definitions/LinkedOrder"
          },
          "type": "array"
        },
        "linked_payments": {
          "items": {
            "$ref": "#/definitions/LinkedPayment"
          },
          "type": "array"
        },
        "net_term_days": {
          "format": "int32",
          "type": "integer"
        },
        "next_retry_at": {
          "format": "int64",
          "type": "integer"
        },
        "notes": {
          "items": {
            "$ref": "#/definitions/Note"
          },
          "type": "array"
        },
        "paid_at": {
          "format": "int64",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "price_type": {
          "enum": [
            "tax_exclusive",
            "tax_inclusive"
          ],
          "type": "string"
        },
        "recurring": {
          "type": "boolean"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "round_off_amount": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address": {
          "$ref": "#/definitions/ShippingAddress"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "sub_total": {
          "format": "int32",
          "type": "integer"
        },
        "subscription_id": {
          "type": "string"
        },
        "tax": {
          "format": "int32",
          "type": "integer"
        },
        "taxes": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        },
        "vat_number": {
          "type": "string"
        },
        "voided_at": {
          "format": "int64",
          "type": "integer"
        },
        "write_off_amount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceAddAddonChargeRequest": {
      "properties": {
        "addon_id": {
          "type": "string"
        },
        "addon_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "addon_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "line_item[date_from]": {
          "format": "int64",
          "type": "integer"
        },
        "line_item[date_to]": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceAddChargeRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "line_item[date_from]": {
          "format": "int64",
          "type": "integer"
        },
        "line_item[date_to]": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceApplyCreditsRequest": {
      "properties": {},
      "type": "object"
    },
    "InvoiceApplyPaymentsRequest": {
      "properties": {},
      "type": "object"
    },
    "InvoiceChargeAddonRequest": {
      "properties": {
        "addon_id": {
          "type": "string"
        },
        "addon_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "addon_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "coupon": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "payment_source_id": {
          "type": "string"
        },
        "po_number": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceChargeRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "coupon": {
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "payment_source_id": {
          "type": "string"
        },
        "po_number": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceCollectPaymentRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "payment_source_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceCreateRequest": {
      "properties": {
        "coupon": {
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "payment_source_id": {
          "type": "string"
        },
        "po_number": {
          "type": "string"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceDeleteRequest": {
      "properties": {
        "comment": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceEstimate": {
      "properties": {
        "amount_due": {
          "format": "int32",
          "type": "integer"
        },
        "amount_paid": {
          "format": "int32",
          "type": "integer"
        },
        "credits_applied": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/Discount"
          },
          "type": "array"
        },
        "line_item_discounts": {
          "items": {
            "$ref": "#/definitions/LineItemDiscount"
          },
          "type": "array"
        },
        "line_item_taxes": {
          "items": {
            "$ref": "#/definitions/LineItemTax"
          },
          "type": "array"
        },
        "line_items": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "price_type": {
          "enum": [
            "tax_exclusive",
            "tax_inclusive"
          ],
          "type": "string"
        },
        "recurring": {
          "type": "boolean"
        },
        "sub_total": {
          "format": "int32",
          "type": "integer"
        },
        "taxes": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceImportInvoiceRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "due_date": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "net_term_days": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "price_type": {
          "enum": [
            "tax_exclusive",
            "tax_inclusive"
          ],
          "type": "string"
        },
        "round_off": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "tax_override_reason": {
          "enum": [
            "id_exempt",
            "customer_exempt"
          ],
          "type": "string"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "use_for_proration": {
          "type": "boolean"
        },
        "vat_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceRecordPaymentRequest": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "transaction[amount]": {
          "format": "int32",
          "type": "integer"
        },
        "transaction[date]": {
          "format": "int64",
          "type": "integer"
        },
        "transaction[error_code]": {
          "type": "string"
        },
        "transaction[error_text]": {
          "type": "string"
        },
        "transaction[id_at_gateway]": {
          "type": "string"
        },
        "transaction[payment_method]": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "transaction[reference_number]": {
          "type": "string"
        },
        "transaction[status]": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceRecordRefundRequest": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "credit_note[reason_code]": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "customer_notes": {
          "type": "string"
        },
        "transaction[amount]": {
          "format": "int32",
          "type": "integer"
        },
        "transaction[date]": {
          "format": "int64",
          "type": "integer"
        },
        "transaction[payment_method]": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "transaction[reference_number]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceRefundRequest": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "credit_note[reason_code]": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "customer_notes": {
          "type": "string"
        },
        "refund_amount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceRemoveCreditNoteRequest": {
      "properties": {
        "credit_note[id]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceRemovePaymentRequest": {
      "properties": {
        "transaction[id]": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceResponse": {
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice"
        }
      },
      "type": "object"
    },
    "InvoiceUpdateDetailsRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "po_number": {
          "type": "string"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "vat_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceVoidInvoiceRequest": {
      "properties": {
        "comment": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceWriteOffRequest": {
      "properties": {
        "comment": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssuedCreditNote": {
      "properties": {
        "cn_date": {
          "format": "int64",
          "type": "integer"
        },
        "cn_id": {
          "type": "string"
        },
        "cn_reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "cn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "cn_total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LineItem": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "date_from": {
          "format": "int64",
          "type": "integer"
        },
        "date_to": {
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_taxed": {
          "type": "boolean"
        },
        "item_level_discount_amount": {
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "subscription_id": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer"
        },
        "tax_exempt_reason": {
          "enum": [
            "tax_not_configured",
            "region_non_taxable",
            "export",
            "customer_exempt",
            "product_exempt",
            "zero_rated",
            "reverse_charge"
          ],
          "type": "string"
        },
        "tax_rate": {
          "format": "double",
          "type": "number"
        },
        "unit_amount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LineItemDiscount": {
      "properties": {
        "coupon_id": {
          "type": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer"
        },
        "discount_type": {
          "enum": [
            "item_level_coupon",
            "document_level_coupon",
            "promotional_credits",
            "prorated_credits"
          ],
          "type": "string"
        },
        "line_item_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LineItemTax": {
      "properties": {
        "line_item_id": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer"
        },
        "tax_juris_code": {
          "type": "string"
        },
        "tax_juris_name": {
          "type": "string"
        },
        "tax_juris_type": {
          "enum": [
            "country",
            "state",
            "county",
            "city",
            "special",
            "other"
          ],
          "type": "string"
        },
        "tax_name": {
          "type": "string"
        },
        "tax_rate": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "LinkedCreditNote": {
      "properties": {
        "applied_amount": {
          "format": "int32",
          "type": "integer"
        },
        "applied_at": {
          "format": "int64",
          "type": "integer"
        },
        "cn_date": {
          "format": "int64",
          "type": "integer"
        },
        "cn_id": {
          "type": "string"
        },
        "cn_reason_code": {
          "enum": [
            "write_off",
            "subscription_change",
            "subscription_cancellation",
            "chargeback",
            "product_unsatisfactory",
            "service_unsatisfactory",
            "order_change",
            "order_cancellation",
            "waiver",
            "other",
            "fraudulent"
          ],
          "type": "string"
        },
        "cn_reference_invoice_id": {
          "type": "string"
        },
        "cn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "cn_total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LinkedCustomer": {
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "has_active_subscription": {
          "type": "boolean"
        },
        "has_billing_address": {
          "type": "boolean"
        },
        "has_payment_method": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LinkedInvoice": {
      "properties": {
        "applied_amount": {
          "format": "int32",
          "type": "integer"
        },
        "applied_at": {
          "format": "int64",
          "type": "integer"
        },
        "invoice_date": {
          "format": "int64",
          "type": "integer"
        },
        "invoice_id": {
          "type": "string"
        },
        "invoice_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "invoice_total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LinkedOrder": {
      "properties": {
        "batch_id": {
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "fulfillment_status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinkedPayment": {
      "properties": {
        "applied_amount": {
          "format": "int32",
          "type": "integer"
        },
        "applied_at": {
          "format": "int64",
          "type": "integer"
        },
        "txn_amount": {
          "format": "int32",
          "type": "integer"
        },
        "txn_date": {
          "format": "int64",
          "type": "integer"
        },
        "txn_id": {
          "type": "string"
        },
        "txn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinkedRefund": {
      "properties": {
        "txn_amount": {
          "format": "int32",
          "type": "integer"
        },
        "txn_date": {
          "format": "int64",
          "type": "integer"
        },
        "txn_id": {
          "type": "string"
        },
        "txn_status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Note": {
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Order": {
      "properties": {
        "batch_id": {
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "created_by": {
          "type": "string"
        },
        "fulfillment_status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_id": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "status_update_at": {
          "format": "int64",
          "type": "integer"
        },
        "tracking_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderCreateRequest": {
      "properties": {
        "batch_id": {
          "type": "string"
        },
        "fulfillment_status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_id": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "tracking_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderResponse": {
      "properties": {
        "order": {
          "$ref": "#/definitions/Order"
        }
      },
      "type": "object"
    },
    "OrderUpdateRequest": {
      "properties": {
        "batch_id": {
          "type": "string"
        },
        "fulfillment_status": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "tracking_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethod": {
      "properties": {
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSource": {
      "properties": {
        "amazon_payment": {
          "$ref": "#/definitions/AmazonPayment"
        },
        "bank_account": {
          "$ref": "#/definitions/BankAccount"
        },
        "card": {
          "$ref": "#/definitions/Card"
        },
        "customer_id": {
          "type": "string"
        },
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        },
        "issuing_country": {
          "type": "string"
        },
        "paypal": {
          "$ref": "#/definitions/Paypal"
        },
        "reference_id": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSourceCreateCardRequest": {
      "properties": {
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "replace_primary_payment_source": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PaymentSourceCreateUsingPermanentTokenRequest": {
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "issuing_country": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "replace_primary_payment_source": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSourceCreateUsingTempTokenRequest": {
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "issuing_country": {
          "type": "string"
        },
        "replace_primary_payment_source": {
          "type": "boolean"
        },
        "tmp_token": {
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSourceExportPaymentSourceRequest": {
      "properties": {
        "gateway_account_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSourceResponse": {
      "properties": {
        "paymentsource": {
          "$ref": "#/definitions/PaymentSource"
        }
      },
      "type": "object"
    },
    "PaymentSourceSwitchGatewayAccountRequest": {
      "properties": {
        "gateway_account_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSourceUpdateCardRequest": {
      "properties": {
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "gateway_meta_data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paypal": {
      "properties": {
        "agreement_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Plan": {
      "properties": {
        "accounting_category1": {
          "type": "string"
        },
        "accounting_category2": {
          "type": "string"
        },
        "accounting_code": {
          "type": "string"
        },
        "archived_at": {
          "format": "int64",
          "type": "integer"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "charge_model": {
          "enum": [
            "full_charge",
            "prorate"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled_in_hosted_pages": {
          "type": "boolean"
        },
        "enabled_in_portal": {
          "type": "boolean"
        },
        "free_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "format": "int32",
          "type": "integer"
        },
        "period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "redirect_url": {
          "type": "string"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "setup_cost": {
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "tax_profile_id": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "trial_period": {
          "format": "int32",
          "type": "integer"
        },
        "trial_period_unit": {
          "enum": [
            "day",
            "month"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PlanCopyRequest": {
      "properties": {
        "for_site_merging": {
          "type": "boolean"
        },
        "from_site": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "id_at_from_site": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlanCreateRequest": {
      "properties": {
        "accounting_category1": {
          "type": "string"
        },
        "accounting_category2": {
          "type": "string"
        },
        "accounting_code": {
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "charge_model": {
          "enum": [
            "full_charge",
            "prorate"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "downgrade_penalty": {
          "format": "double",
          "type": "number"
        },
        "enabled_in_hosted_pages": {
          "type": "boolean"
        },
        "enabled_in_portal": {
          "type": "boolean"
        },
        "free_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "format": "int32",
          "type": "integer"
        },
        "period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "redirect_url": {
          "type": "string"
        },
        "setup_cost": {
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "tax_profile_id": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "trial_period": {
          "format": "int32",
          "type": "integer"
        },
        "trial_period_unit": {
          "enum": [
            "day",
            "month"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlanResponse": {
      "properties": {
        "plan": {
          "$ref": "#/definitions/Plan"
        }
      },
      "type": "object"
    },
    "PlanUpdateRequest": {
      "properties": {
        "accounting_category1": {
          "type": "string"
        },
        "accounting_category2": {
          "type": "string"
        },
        "accounting_code": {
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "charge_model": {
          "enum": [
            "full_charge",
            "prorate"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "downgrade_penalty": {
          "format": "double",
          "type": "number"
        },
        "enabled_in_hosted_pages": {
          "type": "boolean"
        },
        "enabled_in_portal": {
          "type": "boolean"
        },
        "free_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "invoice_name": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "format": "int32",
          "type": "integer"
        },
        "period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "price": {
          "format": "int32",
          "type": "integer"
        },
        "redirect_url": {
          "type": "string"
        },
        "setup_cost": {
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "tax_profile_id": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "trial_period": {
          "format": "int32",
          "type": "integer"
        },
        "trial_period_unit": {
          "enum": [
            "day",
            "month"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortalSession": {
      "properties": {
        "access_url": {
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "customer_id": {
          "type": "string"
        },
        "expires_at": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "linked_customers": {
          "items": {
            "$ref": "#/definitions/LinkedCustomer"
          },
          "type": "array"
        },
        "login_at": {
          "format": "int64",
          "type": "integer"
        },
        "login_ipaddress": {
          "type": "string"
        },
        "logout_at": {
          "format": "int64",
          "type": "integer"
        },
        "logout_ipaddress": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortalSessionActivateRequest": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortalSessionCreateRequest": {
      "properties": {
        "customer[id]": {
          "type": "string"
        },
        "forward_url": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortalSessionResponse": {
      "properties": {
        "portalsession": {
          "$ref": "#/definitions/PortalSession"
        }
      },
      "type": "object"
    },
    "PromotionalCredit": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "closing_balance": {
          "format": "int32",
          "type": "integer"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PromotionalCreditAddRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PromotionalCreditDeductRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PromotionalCreditResponse": {
      "properties": {
        "promotionalcredit": {
          "$ref": "#/definitions/PromotionalCredit"
        }
      },
      "type": "object"
    },
    "PromotionalCreditSetRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "credit_type": {
          "enum": [
            "loyalty_credits",
            "referral_rewards",
            "general"
          ],
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReferralInfo": {
      "properties": {
        "account_id": {
          "type": "string"
        },
        "campaign_id": {
          "type": "string"
        },
        "coupon_code": {
          "type": "string"
        },
        "destination_url": {
          "type": "string"
        },
        "external_campaign_id": {
          "type": "string"
        },
        "external_reference_id": {
          "type": "string"
        },
        "friend_offer_type": {
          "enum": [
            "none",
            "coupon",
            "coupon_code"
          ],
          "type": "string"
        },
        "notify_referral_system": {
          "enum": [
            "none",
            "first_paid_conversion",
            "all_invoices"
          ],
          "type": "string"
        },
        "post_purchase_widget_enabled": {
          "type": "boolean"
        },
        "referral_code": {
          "type": "string"
        },
        "referral_system": {
          "enum": [
            "referral_candy",
            "referral_saasquatch",
            "friendbuy"
          ],
          "type": "string"
        },
        "referrer_id": {
          "type": "string"
        },
        "referrer_reward_type": {
          "enum": [
            "none",
            "referral_direct_reward",
            "custom_promotional_credit",
            "custom_revenue_percent_based"
          ],
          "type": "string"
        },
        "reward_status": {
          "enum": [
            "pending",
            "paid",
            "invalid"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReferralUrl": {
      "properties": {
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "external_customer_id": {
          "type": "string"
        },
        "referral_account_id": {
          "type": "string"
        },
        "referral_campaign_id": {
          "type": "string"
        },
        "referral_external_campaign_id": {
          "type": "string"
        },
        "referral_sharing_url": {
          "type": "string"
        },
        "referral_system": {
          "enum": [
            "referral_candy",
            "referral_saasquatch",
            "friendbuy"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ResourceMigration": {
      "properties": {
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "errors": {
          "type": "string"
        },
        "from_site": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ResourceMigrationResponse": {
      "properties": {
        "resourcemigration": {
          "$ref": "#/definitions/ResourceMigration"
        }
      },
      "type": "object"
    },
    "ResourceMigrationRetrieveLatestRequest": {
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "from_site": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingAddress": {
      "properties": {
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_code": {
          "type": "string"
        },
        "validation_status": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SiteMigrationDetail": {
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_id_at_other_site": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "migrated_at": {
          "format": "int64",
          "type": "integer"
        },
        "other_site_name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SiteMigrationDetailResponse": {
      "properties": {
        "sitemigrationdetail": {
          "$ref": "#/definitions/SiteMigrationDetail"
        }
      },
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "activated_at": {
          "format": "int64",
          "type": "integer"
        },
        "addons": {
          "items": {
            "$ref": "#/definitions/Addon"
          },
          "type": "array"
        },
        "affiliate_token": {
          "type": "string"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "base_currency_code": {
          "type": "string"
        },
        "billing_period": {
          "format": "int32",
          "type": "integer"
        },
        "billing_period_unit": {
          "enum": [
            "week",
            "month",
            "year"
          ],
          "type": "string"
        },
        "cancel_reason": {
          "enum": [
            "not_paid",
            "no_card",
            "fraud_review_failed",
            "non_compliant_eu_customer",
            "tax_calculation_failed",
            "currency_incompatible_with_gateway",
            "non_compliant_customer"
          ],
          "type": "string"
        },
        "cancelled_at": {
          "format": "int64",
          "type": "integer"
        },
        "coupons": {
          "items": {
            "$ref": "#/definitions/Coupon"
          },
          "type": "array"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "created_from_ip": {
          "type": "string"
        },
        "currency_code": {
          "type": "string"
        },
        "current_term_end": {
          "format": "int64",
          "type": "integer"
        },
        "current_term_start": {
          "format": "int64",
          "type": "integer"
        },
        "customer_id": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "due_invoices_count": {
          "format": "int32",
          "type": "integer"
        },
        "due_since": {
          "format": "int64",
          "type": "integer"
        },
        "exchange_rate": {
          "type": "number"
        },
        "has_scheduled_changes": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "mrr": {
          "format": "int32",
          "type": "integer"
        },
        "next_billing_at": {
          "format": "int64",
          "type": "integer"
        },
        "payment_source_id": {
          "type": "string"
        },
        "plan_free_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "referral_info": {
          "$ref": "#/definitions/ReferralInfo"
        },
        "remaining_billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address": {
          "$ref": "#/definitions/ShippingAddress"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "total_dues": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        },
        "trial_start": {
          "format": "int64",
          "type": "integer"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionAddChargeAtTermEndRequest": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionCancelRequest": {
      "properties": {
        "account_receivables_handling": {
          "enum": [
            "no_action",
            "schedule_payment_collection",
            "write_off"
          ],
          "type": "string"
        },
        "credit_option_for_current_term_charges": {
          "enum": [
            "none",
            "prorate",
            "full"
          ],
          "type": "string"
        },
        "end_of_term": {
          "type": "boolean"
        },
        "refundable_credits_handling": {
          "enum": [
            "no_action",
            "schedule_refund"
          ],
          "type": "string"
        },
        "unbilled_charges_option": {
          "enum": [
            "invoice",
            "delete"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionChangeTermEndRequest": {
      "properties": {
        "invoice_immediately": {
          "type": "boolean"
        },
        "prorate": {
          "type": "boolean"
        },
        "term_ends_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionChargeAddonAtTermEndRequest": {
      "properties": {
        "addon_id": {
          "type": "string"
        },
        "addon_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "addon_unit_price": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionChargeFutureRenewalsRequest": {
      "properties": {
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionCreateForCustomerRequest": {
      "properties": {
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "coupon": {
          "type": "string"
        },
        "coupon_ids": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "payment_source_id": {
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionCreateRequest": {
      "properties": {
        "affiliate_token": {
          "type": "string"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[ip_address]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "card[tmp_token]": {
          "type": "string"
        },
        "coupon": {
          "type": "string"
        },
        "coupon_ids": {
          "type": "string"
        },
        "created_from_ip": {
          "type": "string"
        },
        "customer[allow_direct_debit]": {
          "type": "boolean"
        },
        "customer[auto_collection]": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "customer[company]": {
          "type": "string"
        },
        "customer[consolidated_invoicing]": {
          "type": "boolean"
        },
        "customer[email]": {
          "type": "string"
        },
        "customer[entity_code]": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "customer[exempt_number]": {
          "type": "string"
        },
        "customer[first_name]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        },
        "customer[last_name]": {
          "type": "string"
        },
        "customer[locale]": {
          "type": "string"
        },
        "customer[net_term_days]": {
          "format": "int32",
          "type": "integer"
        },
        "customer[phone]": {
          "type": "string"
        },
        "customer[registered_for_gst]": {
          "type": "boolean"
        },
        "customer[taxability]": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "payment_method[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[issuing_country]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[tmp_token]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionEstimate": {
      "properties": {
        "currency_code": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "next_billing_at": {
          "format": "int64",
          "type": "integer"
        },
        "shipping_address": {
          "$ref": "#/definitions/ShippingAddress"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionImportForCustomerRequest": {
      "properties": {
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "cancelled_at": {
          "format": "int64",
          "type": "integer"
        },
        "coupon_ids": {
          "type": "string"
        },
        "current_term_end": {
          "format": "int64",
          "type": "integer"
        },
        "current_term_start": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "payment_source_id": {
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        },
        "trial_start": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionImportSubscriptionRequest": {
      "properties": {
        "affiliate_token": {
          "type": "string"
        },
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "cancelled_at": {
          "format": "int64",
          "type": "integer"
        },
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "card[tmp_token]": {
          "type": "string"
        },
        "coupon_ids": {
          "type": "string"
        },
        "current_term_end": {
          "format": "int64",
          "type": "integer"
        },
        "current_term_start": {
          "format": "int64",
          "type": "integer"
        },
        "customer[allow_direct_debit]": {
          "type": "boolean"
        },
        "customer[auto_collection]": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "customer[company]": {
          "type": "string"
        },
        "customer[email]": {
          "type": "string"
        },
        "customer[entity_code]": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "n",
            "p",
            "q",
            "r",
            "med1",
            "med2"
          ],
          "type": "string"
        },
        "customer[exempt_number]": {
          "type": "string"
        },
        "customer[first_name]": {
          "type": "string"
        },
        "customer[id]": {
          "type": "string"
        },
        "customer[last_name]": {
          "type": "string"
        },
        "customer[locale]": {
          "type": "string"
        },
        "customer[net_term_days]": {
          "format": "int32",
          "type": "integer"
        },
        "customer[phone]": {
          "type": "string"
        },
        "customer[taxability]": {
          "enum": [
            "taxable",
            "exempt"
          ],
          "type": "string"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "payment_method[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[issuing_country]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        },
        "trial_start": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionOverrideBillingProfileRequest": {
      "properties": {
        "auto_collection": {
          "enum": [
            "on",
            "off"
          ],
          "type": "string"
        },
        "payment_source_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionReactivateRequest": {
      "properties": {
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "reactivate_from": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        },
        "trial_period_days": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionRemoveCouponsRequest": {
      "properties": {
        "coupon_ids": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionRemoveScheduledCancellationRequest": {
      "properties": {
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionResponse": {
      "properties": {
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      },
      "type": "object"
    },
    "SubscriptionUpdateRequest": {
      "properties": {
        "billing_address[city]": {
          "type": "string"
        },
        "billing_address[company]": {
          "type": "string"
        },
        "billing_address[country]": {
          "type": "string"
        },
        "billing_address[email]": {
          "type": "string"
        },
        "billing_address[first_name]": {
          "type": "string"
        },
        "billing_address[last_name]": {
          "type": "string"
        },
        "billing_address[line1]": {
          "type": "string"
        },
        "billing_address[line2]": {
          "type": "string"
        },
        "billing_address[line3]": {
          "type": "string"
        },
        "billing_address[phone]": {
          "type": "string"
        },
        "billing_address[state]": {
          "type": "string"
        },
        "billing_address[state_code]": {
          "type": "string"
        },
        "billing_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "billing_address[zip]": {
          "type": "string"
        },
        "billing_alignment_mode": {
          "enum": [
            "immediate",
            "delayed"
          ],
          "type": "string"
        },
        "billing_cycles": {
          "format": "int32",
          "type": "integer"
        },
        "card[billing_addr1]": {
          "type": "string"
        },
        "card[billing_addr2]": {
          "type": "string"
        },
        "card[billing_city]": {
          "type": "string"
        },
        "card[billing_country]": {
          "type": "string"
        },
        "card[billing_state]": {
          "type": "string"
        },
        "card[billing_state_code]": {
          "type": "string"
        },
        "card[billing_zip]": {
          "type": "string"
        },
        "card[cvv]": {
          "type": "string"
        },
        "card[expiry_month]": {
          "format": "int32",
          "type": "integer"
        },
        "card[expiry_year]": {
          "format": "int32",
          "type": "integer"
        },
        "card[first_name]": {
          "type": "string"
        },
        "card[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "card[gateway_account_id]": {
          "type": "string"
        },
        "card[ip_address]": {
          "type": "string"
        },
        "card[last_name]": {
          "type": "string"
        },
        "card[number]": {
          "type": "string"
        },
        "card[tmp_token]": {
          "type": "string"
        },
        "coupon": {
          "type": "string"
        },
        "coupon_ids": {
          "type": "string"
        },
        "customer[registered_for_gst]": {
          "type": "boolean"
        },
        "customer[vat_number]": {
          "type": "string"
        },
        "end_of_term": {
          "type": "boolean"
        },
        "force_term_reset": {
          "type": "boolean"
        },
        "invoice_immediately": {
          "type": "boolean"
        },
        "invoice_notes": {
          "type": "string"
        },
        "meta_data": {
          "type": "object"
        },
        "payment_method[gateway]": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "payment_method[gateway_account_id]": {
          "type": "string"
        },
        "payment_method[issuing_country]": {
          "type": "string"
        },
        "payment_method[reference_id]": {
          "type": "string"
        },
        "payment_method[tmp_token]": {
          "type": "string"
        },
        "payment_method[type]": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "plan_quantity": {
          "format": "int32",
          "type": "integer"
        },
        "plan_unit_price": {
          "format": "int32",
          "type": "integer"
        },
        "po_number": {
          "type": "string"
        },
        "prorate": {
          "type": "boolean"
        },
        "reactivate": {
          "type": "boolean"
        },
        "reactivate_from": {
          "format": "int64",
          "type": "integer"
        },
        "replace_addon_list": {
          "type": "boolean"
        },
        "replace_coupon_list": {
          "type": "boolean"
        },
        "setup_fee": {
          "format": "int32",
          "type": "integer"
        },
        "shipping_address[city]": {
          "type": "string"
        },
        "shipping_address[company]": {
          "type": "string"
        },
        "shipping_address[country]": {
          "type": "string"
        },
        "shipping_address[email]": {
          "type": "string"
        },
        "shipping_address[first_name]": {
          "type": "string"
        },
        "shipping_address[last_name]": {
          "type": "string"
        },
        "shipping_address[line1]": {
          "type": "string"
        },
        "shipping_address[line2]": {
          "type": "string"
        },
        "shipping_address[line3]": {
          "type": "string"
        },
        "shipping_address[phone]": {
          "type": "string"
        },
        "shipping_address[state]": {
          "type": "string"
        },
        "shipping_address[state_code]": {
          "type": "string"
        },
        "shipping_address[validation_status]": {
          "enum": [
            "not_validated",
            "valid",
            "partially_valid",
            "invalid"
          ],
          "type": "string"
        },
        "shipping_address[zip]": {
          "type": "string"
        },
        "start_date": {
          "format": "int64",
          "type": "integer"
        },
        "terms_to_charge": {
          "format": "int32",
          "type": "integer"
        },
        "trial_end": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Tax": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ThirdPartyPaymentMethod": {
      "properties": {
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeMachine": {
      "properties": {
        "destination_time": {
          "format": "int64",
          "type": "integer"
        },
        "error_json": {
          "type": "string"
        },
        "failure_code": {
          "type": "string"
        },
        "failure_reason": {
          "type": "string"
        },
        "genesis_time": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "null": {
          "$ref": "#/definitions/TimeMachine"
        },
        "time_travel_status": {
          "enum": [
            "not_enabled",
            "in_progress",
            "succeeded",
            "failed"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeMachineResponse": {
      "properties": {
        "timemachine": {
          "$ref": "#/definitions/TimeMachine"
        }
      },
      "type": "object"
    },
    "TimeMachineStartAfreshRequest": {
      "properties": {
        "genesis_time": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TimeMachineTravelForwardRequest": {
      "properties": {
        "destination_time": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Transaction": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "amount_unused": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "error_code": {
          "type": "string"
        },
        "error_text": {
          "type": "string"
        },
        "fraud_flag": {
          "enum": [
            "safe",
            "suspicious",
            "fraudulent"
          ],
          "type": "string"
        },
        "fraud_reason": {
          "type": "string"
        },
        "gateway": {
          "enum": [
            "chargebee",
            "stripe",
            "wepay",
            "braintree",
            "authorize_net",
            "paypal_pro",
            "pin",
            "eway",
            "eway_rapid",
            "worldpay",
            "balanced_payments",
            "beanstream",
            "bluepay",
            "elavon",
            "first_data_global",
            "hdfc",
            "migs",
            "nmi",
            "ogone",
            "paymill",
            "paypal_payflow_pro",
            "sage_pay",
            "tco",
            "wirecard",
            "amazon_payments",
            "paypal_express_checkout",
            "gocardless",
            "adyen",
            "orbital",
            "moneris_us",
            "moneris",
            "not_applicable"
          ],
          "type": "string"
        },
        "gateway_account_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "id_at_gateway": {
          "type": "string"
        },
        "linked_credit_notes": {
          "items": {
            "$ref": "#/definitions/LinkedCreditNote"
          },
          "type": "array"
        },
        "linked_invoices": {
          "items": {
            "$ref": "#/definitions/LinkedInvoice"
          },
          "type": "array"
        },
        "linked_refunds": {
          "items": {
            "$ref": "#/definitions/LinkedRefund"
          },
          "type": "array"
        },
        "masked_card_number": {
          "type": "string"
        },
        "payment_method": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "payment_source_id": {
          "type": "string"
        },
        "reference_number": {
          "type": "string"
        },
        "reference_transaction_id": {
          "type": "string"
        },
        "refunded_txn_id": {
          "type": "string"
        },
        "resource_version": {
          "format": "int64",
          "type": "integer"
        },
        "reversal_transaction_id": {
          "type": "string"
        },
        "settled_at": {
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "enum": [
            "future",
            "in_trial",
            "active",
            "non_renewing",
            "cancelled"
          ],
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "type": {
          "enum": [
            "card",
            "paypal_express_checkout",
            "amazon_payments",
            "direct_debit",
            "generic",
            "alipay",
            "unionpay",
            "apple_pay"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "int64",
          "type": "integer"
        },
        "voided_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TransactionResponse": {
      "properties": {
        "transaction": {
          "$ref": "#/definitions/Transaction"
        }
      },
      "type": "object"
    },
    "UnbilledCharge": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "currency_code": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "date_from": {
          "format": "int64",
          "type": "integer"
        },
        "date_to": {
          "format": "int64",
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "enum": [
            "customer",
            "subscription",
            "invoice",
            "credit_note",
            "transaction",
            "plan",
            "addon",
            "coupon"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_voided": {
          "type": "boolean"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "subscription_id": {
          "type": "string"
        },
        "unit_amount": {
          "format": "int32",
          "type": "integer"
        },
        "voided_at": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UnbilledChargeInvoiceNowEstimateRequest": {
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnbilledChargeInvoiceUnbilledChargesRequest": {
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnbilledChargeResponse": {
      "properties": {
        "unbilledcharge": {
          "$ref": "#/definitions/UnbilledCharge"
        }
      },
      "type": "object"
    },
    "Webhook": {
      "properties": {
        "id": {
          "type": "string"
        },
        "webhook_status": {
          "enum": [
            "not_configured",
            "scheduled",
            "succeeded",
            "re_scheduled",
            "failed",
            "skipped",
            "not_applicable"
          ],
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "site.chargebee.com",
  "info": {
    "title": "Swagger Chargebee",
    "version": "1.0.0"
  },
  "paths": {
    "/addons": {
      "get": {
        "operationId": "listAddon",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listAddon response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/AddonResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createAddon",
        "parameters": [
          {
            "in": "body",
            "name": "AddonCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddonCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      }
    },
    "/addons/copy": {
      "post": {
        "operationId": "copyAddon",
        "parameters": [
          {
            "in": "body",
            "name": "AddonCopyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddonCopyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copyAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      }
    },
    "/addons/{id}": {
      "get": {
        "operationId": "retrieveAddon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateAddon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AddonUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddonUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      }
    },
    "/addons/{id}/delete": {
      "post": {
        "operationId": "deleteAddon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      }
    },
    "/addons/{id}/unarchive": {
      "post": {
        "operationId": "unarchiveAddon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "unarchiveAddon response",
            "schema": {
              "$ref": "#/definitions/AddonResponse"
            }
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "operationId": "retrieveAddress",
        "parameters": [
          {
            "in": "body",
            "name": "AddressRetrieveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressRetrieveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveAddress response",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateAddress",
        "parameters": [
          {
            "in": "body",
            "name": "AddressUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateAddress response",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "operationId": "retrieveCard",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCard response",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "operationId": "listComment",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listComment response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CommentResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createComment",
        "parameters": [
          {
            "in": "body",
            "name": "CommentCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createComment response",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "operationId": "retrieveComment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveComment response",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          }
        }
      }
    },
    "/comments/{id}/delete": {
      "post": {
        "operationId": "deleteComment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteComment response",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          }
        }
      }
    },
    "/coupon_codes": {
      "get": {
        "operationId": "listCouponCode",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listCouponCode response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CouponCodeResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createCouponCode",
        "parameters": [
          {
            "in": "body",
            "name": "CouponCodeCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponCodeCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCouponCode response",
            "schema": {
              "$ref": "#/definitions/CouponCodeResponse"
            }
          }
        }
      }
    },
    "/coupon_codes/{id}": {
      "get": {
        "operationId": "retrieveCouponCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCouponCode response",
            "schema": {
              "$ref": "#/definitions/CouponCodeResponse"
            }
          }
        }
      }
    },
    "/coupon_codes/{id}/archive": {
      "post": {
        "operationId": "archiveCouponCode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "archiveCouponCode response",
            "schema": {
              "$ref": "#/definitions/CouponCodeResponse"
            }
          }
        }
      }
    },
    "/coupon_sets": {
      "get": {
        "operationId": "listCouponSet",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listCouponSet response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CouponSetResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createCouponSet",
        "parameters": [
          {
            "in": "body",
            "name": "CouponSetCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponSetCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupon_sets/{id}": {
      "get": {
        "operationId": "retrieveCouponSet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupon_sets/{id}/add_coupon_codes": {
      "post": {
        "operationId": "addCouponCodesCouponSet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CouponSetAddCouponCodesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponSetAddCouponCodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addCouponCodesCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupon_sets/{id}/delete": {
      "post": {
        "operationId": "deleteCouponSet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupon_sets/{id}/delete_unused_coupon_codes": {
      "post": {
        "operationId": "deleteUnusedCouponCodesCouponSet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteUnusedCouponCodesCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupon_sets/{id}/update": {
      "post": {
        "operationId": "updateCouponSet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CouponSetUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponSetUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateCouponSet response",
            "schema": {
              "$ref": "#/definitions/CouponSetResponse"
            }
          }
        }
      }
    },
    "/coupons": {
      "get": {
        "operationId": "listCoupon",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listCoupon response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CouponResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createCoupon",
        "parameters": [
          {
            "in": "body",
            "name": "CouponCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCoupon response",
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        }
      }
    },
    "/coupons/copy": {
      "post": {
        "operationId": "copyCoupon",
        "parameters": [
          {
            "in": "body",
            "name": "CouponCopyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponCopyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copyCoupon response",
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        }
      }
    },
    "/coupons/{id}": {
      "get": {
        "operationId": "retrieveCoupon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCoupon response",
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        }
      }
    },
    "/coupons/{id}/delete": {
      "post": {
        "operationId": "deleteCoupon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCoupon response",
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        }
      }
    },
    "/coupons/{id}/unarchive": {
      "post": {
        "operationId": "unarchiveCoupon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "unarchiveCoupon response",
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        }
      }
    },
    "/credit_notes": {
      "get": {
        "operationId": "listCreditNote",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listCreditNote response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CreditNoteResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createCreditNote",
        "parameters": [
          {
            "in": "body",
            "name": "CreditNoteCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditNoteCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/credit_notes/{id}": {
      "get": {
        "operationId": "retrieveCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/credit_notes/{id}/delete": {
      "post": {
        "operationId": "deleteCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CreditNoteDeleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditNoteDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/credit_notes/{id}/pdf": {
      "post": {
        "operationId": "pdfCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "pdfCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/credit_notes/{id}/record_refund": {
      "post": {
        "operationId": "recordRefundCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CreditNoteRecordRefundRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditNoteRecordRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recordRefundCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/credit_notes/{id}/void": {
      "post": {
        "operationId": "voidCreditNoteCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CreditNoteVoidCreditNoteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditNoteVoidCreditNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "voidCreditNoteCreditNote response",
            "schema": {
              "$ref": "#/definitions/CreditNoteResponse"
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "operationId": "listCustomer",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listCustomer response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CustomerResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createCustomer",
        "parameters": [
          {
            "in": "body",
            "name": "CustomerCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/move": {
      "post": {
        "operationId": "moveCustomer",
        "parameters": [
          {
            "in": "body",
            "name": "CustomerMoveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerMoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "moveCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "operationId": "retrieveCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/add_contact": {
      "post": {
        "operationId": "addContactCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerAddContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerAddContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addContactCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/add_promotional_credits": {
      "post": {
        "operationId": "addPromotionalCreditsCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerAddPromotionalCreditsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerAddPromotionalCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addPromotionalCreditsCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/assign_payment_role": {
      "post": {
        "operationId": "assignPaymentRoleCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerAssignPaymentRoleRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerAssignPaymentRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "assignPaymentRoleCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/change_billing_date": {
      "post": {
        "operationId": "changeBillingDateCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerChangeBillingDateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerChangeBillingDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "changeBillingDateCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/collect_payment": {
      "post": {
        "operationId": "collectPaymentCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerCollectPaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCollectPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "collectPaymentCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/copy_card": {
      "post": {
        "operationId": "copyCardForCustomerCard",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CardCopyCardForCustomerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardCopyCardForCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copyCardForCustomerCard response",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/create_subscription_estimate": {
      "get": {
        "operationId": "createSubForCustomerEstimateEstimate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "EstimateCreateSubForCustomerEstimateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateCreateSubForCustomerEstimateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSubForCustomerEstimateEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/credit_card": {
      "post": {
        "operationId": "updateCardForCustomerCard",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CardUpdateCardForCustomerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardUpdateCardForCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateCardForCustomerCard response",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/credit_notes": {
      "get": {
        "operationId": "creditNotesForCustomerCreditNote",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "creditNotesForCustomerCreditNote response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/CreditNoteResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/customers/{id}/deduct_promotional_credits": {
      "post": {
        "operationId": "deductPromotionalCreditsCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerDeductPromotionalCreditsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDeductPromotionalCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deductPromotionalCreditsCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/delete": {
      "post": {
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerDeleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/delete_card": {
      "post": {
        "operationId": "deleteCardForCustomerCard",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteCardForCustomerCard response",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/delete_contact": {
      "post": {
        "operationId": "deleteContactCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerDeleteContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDeleteContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteContactCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/import_subscription": {
      "post": {
        "operationId": "importForCustomerSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionImportForCustomerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionImportForCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "importForCustomerSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/invoices": {
      "get": {
        "operationId": "invoicesForCustomerInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "invoicesForCustomerInvoice response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/InvoiceResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/customers/{id}/record_excess_payment": {
      "post": {
        "operationId": "recordExcessPaymentCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerRecordExcessPaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerRecordExcessPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recordExcessPaymentCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/set_promotional_credits": {
      "post": {
        "operationId": "setPromotionalCreditsCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerSetPromotionalCreditsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerSetPromotionalCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "setPromotionalCreditsCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/subscriptions": {
      "get": {
        "operationId": "subscriptionsForCustomerSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "subscriptionsForCustomerSubscription response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/SubscriptionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createForCustomerSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionCreateForCustomerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreateForCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createForCustomerSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/switch_gateway": {
      "post": {
        "operationId": "switchGatewayForCustomerCard",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CardSwitchGatewayForCustomerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardSwitchGatewayForCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "switchGatewayForCustomerCard response",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/transactions": {
      "get": {
        "operationId": "transactionsForCustomerTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "transactionsForCustomerTransaction response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/customers/{id}/upcoming_invoices_estimate": {
      "get": {
        "operationId": "upcomingInvoicesEstimateEstimate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "upcomingInvoicesEstimateEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/update_billing_info": {
      "post": {
        "operationId": "updateBillingInfoCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerUpdateBillingInfoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateBillingInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateBillingInfoCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/update_contact": {
      "post": {
        "operationId": "updateContactCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerUpdateContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateContactCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/update_payment_method": {
      "post": {
        "operationId": "updatePaymentMethodCustomer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CustomerUpdatePaymentMethodRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdatePaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePaymentMethodCustomer response",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/estimates/create_subscription": {
      "post": {
        "operationId": "createSubscriptionEstimate",
        "parameters": [
          {
            "in": "body",
            "name": "EstimateCreateSubscriptionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateCreateSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSubscriptionEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/estimates/update_subscription": {
      "post": {
        "operationId": "updateSubscriptionEstimate",
        "parameters": [
          {
            "in": "body",
            "name": "EstimateUpdateSubscriptionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateUpdateSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateSubscriptionEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "operationId": "listEvent",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listEvent response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/EventResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "operationId": "retrieveEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveEvent response",
            "schema": {
              "$ref": "#/definitions/EventResponse"
            }
          }
        }
      }
    },
    "/hosted_pages": {
      "get": {
        "operationId": "listHostedPage",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listHostedPage response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/HostedPageResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/hosted_pages/checkout_existing": {
      "post": {
        "operationId": "checkoutExistingHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageCheckoutExistingRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageCheckoutExistingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "checkoutExistingHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/checkout_new": {
      "post": {
        "operationId": "checkoutNewHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageCheckoutNewRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageCheckoutNewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "checkoutNewHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/collect_now": {
      "post": {
        "operationId": "collectNowHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageCollectNowRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageCollectNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "collectNowHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/manage_payment_sources": {
      "post": {
        "operationId": "managePaymentSourcesHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageManagePaymentSourcesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageManagePaymentSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "managePaymentSourcesHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/update_card": {
      "post": {
        "operationId": "updateCardHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageUpdateCardRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageUpdateCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateCardHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/update_payment_method": {
      "post": {
        "operationId": "updatePaymentMethodHostedPage",
        "parameters": [
          {
            "in": "body",
            "name": "HostedPageUpdatePaymentMethodRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostedPageUpdatePaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePaymentMethodHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/{id}": {
      "get": {
        "operationId": "retrieveHostedPage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/hosted_pages/{id}/acknowledge": {
      "post": {
        "operationId": "acknowledgeHostedPage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "acknowledgeHostedPage response",
            "schema": {
              "$ref": "#/definitions/HostedPageResponse"
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "operationId": "listInvoice",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listInvoice response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/InvoiceResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/charge": {
      "post": {
        "operationId": "chargeInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceChargeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chargeInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/charge_addon": {
      "post": {
        "operationId": "chargeAddonInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceChargeAddonRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceChargeAddonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chargeAddonInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/import_invoice": {
      "post": {
        "operationId": "importInvoiceInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceImportInvoiceRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceImportInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "importInvoiceInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "operationId": "retrieveInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/add_addon_charge": {
      "post": {
        "operationId": "addAddonChargeInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceAddAddonChargeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceAddAddonChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addAddonChargeInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/add_charge": {
      "post": {
        "operationId": "addChargeInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceAddChargeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceAddChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addChargeInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/apply_credits": {
      "post": {
        "operationId": "applyCreditsInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceApplyCreditsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceApplyCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "applyCreditsInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/apply_payments": {
      "post": {
        "operationId": "applyPaymentsInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceApplyPaymentsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceApplyPaymentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "applyPaymentsInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/close": {
      "post": {
        "operationId": "closeInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "closeInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/collect_payment": {
      "post": {
        "operationId": "collectPaymentInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceCollectPaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceCollectPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "collectPaymentInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/delete": {
      "post": {
        "operationId": "deleteInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceDeleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleteInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/orders": {
      "get": {
        "operationId": "ordersForInvoiceOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ordersForInvoiceOrder response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/invoices/{id}/payments": {
      "get": {
        "operationId": "paymentsForInvoiceTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paymentsForInvoiceTransaction response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/invoices/{id}/pdf": {
      "post": {
        "operationId": "pdfInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "pdfInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/record_payment": {
      "post": {
        "operationId": "recordPaymentInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceRecordPaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceRecordPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recordPaymentInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/record_refund": {
      "post": {
        "operationId": "recordRefundInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceRecordRefundRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceRecordRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recordRefundInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/refund": {
      "post": {
        "operationId": "refundInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceRefundRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "refundInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/remove_credit_note": {
      "post": {
        "operationId": "removeCreditNoteInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceRemoveCreditNoteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceRemoveCreditNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removeCreditNoteInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/remove_payment": {
      "post": {
        "operationId": "removePaymentInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceRemovePaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceRemovePaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removePaymentInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/stop_dunning": {
      "post": {
        "operationId": "stopDunningInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "stopDunningInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/update_details": {
      "post": {
        "operationId": "updateDetailsInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceUpdateDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceUpdateDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateDetailsInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/void": {
      "post": {
        "operationId": "voidInvoiceInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceVoidInvoiceRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceVoidInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "voidInvoiceInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}/write_off": {
      "post": {
        "operationId": "writeOffInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "InvoiceWriteOffRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceWriteOffRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "writeOffInvoice response",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "operationId": "listOrder",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listOrder response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createOrder",
        "parameters": [
          {
            "in": "body",
            "name": "OrderCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createOrder response",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "operationId": "retrieveOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveOrder response",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "OrderUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateOrder response",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          }
        }
      }
    },
    "/payment_sources": {
      "get": {
        "operationId": "listPaymentSource",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listPaymentSource response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/PaymentSourceResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/payment_sources/create_card": {
      "post": {
        "operationId": "createCardPaymentSource",
        "parameters": [
          {
            "in": "body",
            "name": "PaymentSourceCreateCardRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceCreateCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createCardPaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/create_using_permanent_token": {
      "post": {
        "operationId": "createUsingPermanentTokenPaymentSource",
        "parameters": [
          {
            "in": "body",
            "name": "PaymentSourceCreateUsingPermanentTokenRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceCreateUsingPermanentTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createUsingPermanentTokenPaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/create_using_temp_token": {
      "post": {
        "operationId": "createUsingTempTokenPaymentSource",
        "parameters": [
          {
            "in": "body",
            "name": "PaymentSourceCreateUsingTempTokenRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceCreateUsingTempTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createUsingTempTokenPaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/{id}": {
      "get": {
        "operationId": "retrievePaymentSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrievePaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/{id}/delete": {
      "post": {
        "operationId": "deletePaymentSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deletePaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/{id}/export_payment_source": {
      "post": {
        "operationId": "exportPaymentSourcePaymentSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PaymentSourceExportPaymentSourceRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceExportPaymentSourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "exportPaymentSourcePaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/{id}/switch_gateway_account": {
      "post": {
        "operationId": "switchGatewayAccountPaymentSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PaymentSourceSwitchGatewayAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceSwitchGatewayAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "switchGatewayAccountPaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/payment_sources/{id}/update_card": {
      "post": {
        "operationId": "updateCardPaymentSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PaymentSourceUpdateCardRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentSourceUpdateCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateCardPaymentSource response",
            "schema": {
              "$ref": "#/definitions/PaymentSourceResponse"
            }
          }
        }
      }
    },
    "/plans": {
      "get": {
        "operationId": "listPlan",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listPlan response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/PlanResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createPlan",
        "parameters": [
          {
            "in": "body",
            "name": "PlanCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      }
    },
    "/plans/copy": {
      "post": {
        "operationId": "copyPlan",
        "parameters": [
          {
            "in": "body",
            "name": "PlanCopyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanCopyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "copyPlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      }
    },
    "/plans/{id}": {
      "get": {
        "operationId": "retrievePlan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrievePlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updatePlan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PlanUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updatePlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      }
    },
    "/plans/{id}/delete": {
      "post": {
        "operationId": "deletePlan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deletePlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      }
    },
    "/plans/{id}/unarchive": {
      "post": {
        "operationId": "unarchivePlan",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "unarchivePlan response",
            "schema": {
              "$ref": "#/definitions/PlanResponse"
            }
          }
        }
      }
    },
    "/portal_sessions": {
      "post": {
        "operationId": "createPortalSession",
        "parameters": [
          {
            "in": "body",
            "name": "PortalSessionCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSessionCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createPortalSession response",
            "schema": {
              "$ref": "#/definitions/PortalSessionResponse"
            }
          }
        }
      }
    },
    "/portal_sessions/{id}": {
      "get": {
        "operationId": "retrievePortalSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrievePortalSession response",
            "schema": {
              "$ref": "#/definitions/PortalSessionResponse"
            }
          }
        }
      }
    },
    "/portal_sessions/{id}/activate": {
      "post": {
        "operationId": "activatePortalSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PortalSessionActivateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSessionActivateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activatePortalSession response",
            "schema": {
              "$ref": "#/definitions/PortalSessionResponse"
            }
          }
        }
      }
    },
    "/portal_sessions/{id}/logout": {
      "post": {
        "operationId": "logoutPortalSession",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "logoutPortalSession response",
            "schema": {
              "$ref": "#/definitions/PortalSessionResponse"
            }
          }
        }
      }
    },
    "/promotional_credits": {
      "get": {
        "operationId": "listPromotionalCredit",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listPromotionalCredit response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/PromotionalCreditResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/promotional_credits/add": {
      "post": {
        "operationId": "addPromotionalCredit",
        "parameters": [
          {
            "in": "body",
            "name": "PromotionalCreditAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionalCreditAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addPromotionalCredit response",
            "schema": {
              "$ref": "#/definitions/PromotionalCreditResponse"
            }
          }
        }
      }
    },
    "/promotional_credits/deduct": {
      "post": {
        "operationId": "deductPromotionalCredit",
        "parameters": [
          {
            "in": "body",
            "name": "PromotionalCreditDeductRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionalCreditDeductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deductPromotionalCredit response",
            "schema": {
              "$ref": "#/definitions/PromotionalCreditResponse"
            }
          }
        }
      }
    },
    "/promotional_credits/set": {
      "post": {
        "operationId": "setPromotionalCredit",
        "parameters": [
          {
            "in": "body",
            "name": "PromotionalCreditSetRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionalCreditSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "setPromotionalCredit response",
            "schema": {
              "$ref": "#/definitions/PromotionalCreditResponse"
            }
          }
        }
      }
    },
    "/promotional_credits/{id}": {
      "get": {
        "operationId": "retrievePromotionalCredit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrievePromotionalCredit response",
            "schema": {
              "$ref": "#/definitions/PromotionalCreditResponse"
            }
          }
        }
      }
    },
    "/resource_migrations/retrieve_latest": {
      "get": {
        "operationId": "retrieveLatestResourceMigration",
        "parameters": [
          {
            "in": "body",
            "name": "ResourceMigrationRetrieveLatestRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceMigrationRetrieveLatestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveLatestResourceMigration response",
            "schema": {
              "$ref": "#/definitions/ResourceMigrationResponse"
            }
          }
        }
      }
    },
    "/site_migration_details": {
      "get": {
        "operationId": "listSiteMigrationDetail",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listSiteMigrationDetail response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/SiteMigrationDetailResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "operationId": "listSubscription",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listSubscription response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/SubscriptionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "operationId": "createSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "SubscriptionCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/import_subscription": {
      "post": {
        "operationId": "importSubscriptionSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "SubscriptionImportSubscriptionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionImportSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "importSubscriptionSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "operationId": "retrieveSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updateSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/add_charge_at_term_end": {
      "post": {
        "operationId": "addChargeAtTermEndSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionAddChargeAtTermEndRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionAddChargeAtTermEndRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "addChargeAtTermEndSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/cancel": {
      "post": {
        "operationId": "cancelSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionCancelRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancelSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/cancel_subscription_estimate": {
      "post": {
        "operationId": "cancelSubscriptionEstimate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "EstimateCancelSubscriptionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateCancelSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancelSubscriptionEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/change_term_end": {
      "post": {
        "operationId": "changeTermEndSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionChangeTermEndRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionChangeTermEndRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "changeTermEndSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/change_term_end_estimate": {
      "post": {
        "operationId": "changeTermEndEstimate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "EstimateChangeTermEndRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateChangeTermEndRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "changeTermEndEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/charge_addon_at_term_end": {
      "post": {
        "operationId": "chargeAddonAtTermEndSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionChargeAddonAtTermEndRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionChargeAddonAtTermEndRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chargeAddonAtTermEndSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/charge_future_renewals": {
      "post": {
        "operationId": "chargeFutureRenewalsSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionChargeFutureRenewalsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionChargeFutureRenewalsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chargeFutureRenewalsSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/delete": {
      "post": {
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/invoices": {
      "get": {
        "operationId": "invoicesForSubscriptionInvoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "invoicesForSubscriptionInvoice response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/InvoiceResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/override_billing_profile": {
      "post": {
        "operationId": "overrideBillingProfileSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionOverrideBillingProfileRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionOverrideBillingProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "overrideBillingProfileSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/reactivate": {
      "post": {
        "operationId": "reactivateSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionReactivateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionReactivateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reactivateSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/remove_coupons": {
      "post": {
        "operationId": "removeCouponsSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionRemoveCouponsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionRemoveCouponsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removeCouponsSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/remove_scheduled_cancellation": {
      "post": {
        "operationId": "removeScheduledCancellationSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubscriptionRemoveScheduledCancellationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionRemoveScheduledCancellationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removeScheduledCancellationSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/remove_scheduled_changes": {
      "post": {
        "operationId": "removeScheduledChangesSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removeScheduledChangesSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/renewal_estimate": {
      "get": {
        "operationId": "renewalEstimateEstimate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "EstimateRenewalEstimateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateRenewalEstimateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "renewalEstimateEstimate response",
            "schema": {
              "$ref": "#/definitions/EstimateResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/retrieve_with_scheduled_changes": {
      "get": {
        "operationId": "retrieveWithScheduledChangesSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveWithScheduledChangesSubscription response",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{id}/transactions": {
      "get": {
        "operationId": "transactionsForSubscriptionTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "transactionsForSubscriptionTransaction response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/time_machines/{id}": {
      "get": {
        "operationId": "retrieveTimeMachine",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveTimeMachine response",
            "schema": {
              "$ref": "#/definitions/TimeMachineResponse"
            }
          }
        }
      }
    },
    "/time_machines/{id}/start_afresh": {
      "post": {
        "operationId": "startAfreshTimeMachine",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "TimeMachineStartAfreshRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeMachineStartAfreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "startAfreshTimeMachine response",
            "schema": {
              "$ref": "#/definitions/TimeMachineResponse"
            }
          }
        }
      }
    },
    "/time_machines/{id}/travel_forward": {
      "post": {
        "operationId": "travelForwardTimeMachine",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "TimeMachineTravelForwardRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeMachineTravelForwardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "travelForwardTimeMachine response",
            "schema": {
              "$ref": "#/definitions/TimeMachineResponse"
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "operationId": "listTransaction",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listTransaction response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "operationId": "retrieveTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieveTransaction response",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          }
        }
      }
    },
    "/unbilled_charges": {
      "get": {
        "operationId": "listUnbilledCharge",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "listUnbilledCharge response",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/UnbilledChargeResponse"
                  },
                  "type": "array"
                },
                "next_offset": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/unbilled_charges/invoice_now_estimate": {
      "post": {
        "operationId": "invoiceNowEstimateUnbilledCharge",
        "parameters": [
          {
            "in": "body",
            "name": "UnbilledChargeInvoiceNowEstimateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnbilledChargeInvoiceNowEstimateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invoiceNowEstimateUnbilledCharge response",
            "schema": {
              "$ref": "#/definitions/UnbilledChargeResponse"
            }
          }
        }
      }
    },
    "/unbilled_charges/invoice_unbilled_charges": {
      "post": {
        "operationId": "invoiceUnbilledChargesUnbilledCharge",
        "parameters": [
          {
            "in": "body",
            "name": "UnbilledChargeInvoiceUnbilledChargesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnbilledChargeInvoiceUnbilledChargesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invoiceUnbilledChargesUnbilledCharge response",
            "schema": {
              "$ref": "#/definitions/UnbilledChargeResponse"
            }
          }
        }
      }
    },
    "/unbilled_charges/{id}/delete": {
      "post": {
        "operationId": "deleteUnbilledCharge",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleteUnbilledCharge response",
            "schema": {
              "$ref": "#/definitions/UnbilledChargeResponse"
            }
          }
        }
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "HTTPBasic": []
    }
  ],
  "securityDefinitions": {
    "HTTPBasic": {
      "description": "HTTP Basic authentication",
      "type": "basic"
    }
  },
  "swagger": "2.0"
}
