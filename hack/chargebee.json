{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Chargebee"
    },
    "host": "site.chargebee.com",
    "basePath": "/api/v2",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/addons": {
            "post": {
                "operationId": "createAddon",
                "parameters": [
                    {
                        "name": "AddonCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddonCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listAddon",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            }
        },
        "/addons/{id}": {
            "post": {
                "operationId": "updateAddon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "AddonUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddonUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            },
            "get": {
                "operationId": "retrieveAddon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            }
        },
        "/addons/{id}/delete": {
            "post": {
                "operationId": "deleteAddon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            }
        },
        "/addons/copy": {
            "post": {
                "operationId": "copyAddon",
                "parameters": [
                    {
                        "name": "AddonCopyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddonCopyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "copyAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            }
        },
        "/addons/{id}/unarchive": {
            "post": {
                "operationId": "unarchiveAddon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unarchiveAddon response",
                        "schema": {
                            "$ref": "#/definitions/Addon"
                        }
                    }
                }
            }
        },
        "/addresses": {
            "get": {
                "operationId": "retrieveAddress",
                "parameters": [
                    {
                        "name": "AddressRetrieveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressRetrieveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveAddress response",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            },
            "post": {
                "operationId": "updateAddress",
                "parameters": [
                    {
                        "name": "AddressUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateAddress response",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }
            }
        },
        "/cards/{id}": {
            "get": {
                "operationId": "retrieveCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCard response",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/customers/{id}/credit_card": {
            "post": {
                "operationId": "updateCardForCustomerCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CardUpdateCardForCustomerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardUpdateCardForCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateCardForCustomerCard response",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/customers/{id}/switch_gateway": {
            "post": {
                "operationId": "switchGatewayForCustomerCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CardSwitchGatewayForCustomerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardSwitchGatewayForCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "switchGatewayForCustomerCard response",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/customers/{id}/copy_card": {
            "post": {
                "operationId": "copyCardForCustomerCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CardCopyCardForCustomerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardCopyCardForCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "copyCardForCustomerCard response",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/customers/{id}/delete_card": {
            "post": {
                "operationId": "deleteCardForCustomerCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteCardForCustomerCard response",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "operationId": "createComment",
                "parameters": [
                    {
                        "name": "CommentCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createComment response",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listComment",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listComment response",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "operationId": "retrieveComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveComment response",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/comments/{id}/delete": {
            "post": {
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteComment response",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "post": {
                "operationId": "createCoupon",
                "parameters": [
                    {
                        "name": "CouponCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listCoupon",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/{id}": {
            "get": {
                "operationId": "retrieveCoupon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/{id}/delete": {
            "post": {
                "operationId": "deleteCoupon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/copy": {
            "post": {
                "operationId": "copyCoupon",
                "parameters": [
                    {
                        "name": "CouponCopyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponCopyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "copyCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/{id}/unarchive": {
            "post": {
                "operationId": "unarchiveCoupon",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unarchiveCoupon response",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupon_codes": {
            "post": {
                "operationId": "createCouponCode",
                "parameters": [
                    {
                        "name": "CouponCodeCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponCodeCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCouponCode response",
                        "schema": {
                            "$ref": "#/definitions/CouponCode"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listCouponCode",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listCouponCode response",
                        "schema": {
                            "$ref": "#/definitions/CouponCode"
                        }
                    }
                }
            }
        },
        "/coupon_codes/{id}": {
            "get": {
                "operationId": "retrieveCouponCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCouponCode response",
                        "schema": {
                            "$ref": "#/definitions/CouponCode"
                        }
                    }
                }
            }
        },
        "/coupon_codes/{id}/archive": {
            "post": {
                "operationId": "archiveCouponCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "archiveCouponCode response",
                        "schema": {
                            "$ref": "#/definitions/CouponCode"
                        }
                    }
                }
            }
        },
        "/coupon_sets": {
            "post": {
                "operationId": "createCouponSet",
                "parameters": [
                    {
                        "name": "CouponSetCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponSetCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listCouponSet",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/coupon_sets/{id}/add_coupon_codes": {
            "post": {
                "operationId": "addCouponCodesCouponSet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CouponSetAddCouponCodesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponSetAddCouponCodesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addCouponCodesCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/coupon_sets/{id}": {
            "get": {
                "operationId": "retrieveCouponSet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/coupon_sets/{id}/update": {
            "post": {
                "operationId": "updateCouponSet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CouponSetUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CouponSetUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/coupon_sets/{id}/delete": {
            "post": {
                "operationId": "deleteCouponSet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/coupon_sets/{id}/delete_unused_coupon_codes": {
            "post": {
                "operationId": "deleteUnusedCouponCodesCouponSet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteUnusedCouponCodesCouponSet response",
                        "schema": {
                            "$ref": "#/definitions/CouponSet"
                        }
                    }
                }
            }
        },
        "/credit_notes": {
            "post": {
                "operationId": "createCreditNote",
                "parameters": [
                    {
                        "name": "CreditNoteCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreditNoteCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listCreditNote",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/credit_notes/{id}": {
            "get": {
                "operationId": "retrieveCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/credit_notes/{id}/pdf": {
            "post": {
                "operationId": "pdfCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pdfCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/credit_notes/{id}/record_refund": {
            "post": {
                "operationId": "recordRefundCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CreditNoteRecordRefundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreditNoteRecordRefundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recordRefundCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/credit_notes/{id}/void": {
            "post": {
                "operationId": "voidCreditNoteCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CreditNoteVoidCreditNoteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreditNoteVoidCreditNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "voidCreditNoteCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/customers/{id}/credit_notes": {
            "get": {
                "operationId": "creditNotesForCustomerCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "creditNotesForCustomerCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/credit_notes/{id}/delete": {
            "post": {
                "operationId": "deleteCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CreditNoteDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreditNoteDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteCreditNote response",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/customers": {
            "post": {
                "operationId": "createCustomer",
                "parameters": [
                    {
                        "name": "CustomerCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listCustomer",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "operationId": "retrieveCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            },
            "post": {
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/update_payment_method": {
            "post": {
                "operationId": "updatePaymentMethodCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerUpdatePaymentMethodRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerUpdatePaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updatePaymentMethodCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/update_billing_info": {
            "post": {
                "operationId": "updateBillingInfoCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerUpdateBillingInfoRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerUpdateBillingInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateBillingInfoCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/assign_payment_role": {
            "post": {
                "operationId": "assignPaymentRoleCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerAssignPaymentRoleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerAssignPaymentRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "assignPaymentRoleCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/add_contact": {
            "post": {
                "operationId": "addContactCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerAddContactRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerAddContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addContactCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/update_contact": {
            "post": {
                "operationId": "updateContactCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerUpdateContactRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerUpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateContactCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/delete_contact": {
            "post": {
                "operationId": "deleteContactCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerDeleteContactRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerDeleteContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteContactCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/add_promotional_credits": {
            "post": {
                "operationId": "addPromotionalCreditsCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerAddPromotionalCreditsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerAddPromotionalCreditsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addPromotionalCreditsCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/deduct_promotional_credits": {
            "post": {
                "operationId": "deductPromotionalCreditsCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerDeductPromotionalCreditsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerDeductPromotionalCreditsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deductPromotionalCreditsCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/set_promotional_credits": {
            "post": {
                "operationId": "setPromotionalCreditsCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerSetPromotionalCreditsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerSetPromotionalCreditsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "setPromotionalCreditsCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/record_excess_payment": {
            "post": {
                "operationId": "recordExcessPaymentCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerRecordExcessPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerRecordExcessPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recordExcessPaymentCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/collect_payment": {
            "post": {
                "operationId": "collectPaymentCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerCollectPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerCollectPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "collectPaymentCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/delete": {
            "post": {
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/move": {
            "post": {
                "operationId": "moveCustomer",
                "parameters": [
                    {
                        "name": "CustomerMoveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerMoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "moveCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}/change_billing_date": {
            "post": {
                "operationId": "changeBillingDateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "CustomerChangeBillingDateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerChangeBillingDateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "changeBillingDateCustomer response",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            }
        },
        "/estimates/create_subscription": {
            "post": {
                "operationId": "createSubscriptionEstimate",
                "parameters": [
                    {
                        "name": "EstimateCreateSubscriptionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateCreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSubscriptionEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/customers/{id}/create_subscription_estimate": {
            "get": {
                "operationId": "createSubForCustomerEstimateEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EstimateCreateSubForCustomerEstimateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateCreateSubForCustomerEstimateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSubForCustomerEstimateEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/estimates/update_subscription": {
            "post": {
                "operationId": "updateSubscriptionEstimate",
                "parameters": [
                    {
                        "name": "EstimateUpdateSubscriptionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateUpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateSubscriptionEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/renewal_estimate": {
            "get": {
                "operationId": "renewalEstimateEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EstimateRenewalEstimateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateRenewalEstimateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "renewalEstimateEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/customers/{id}/upcoming_invoices_estimate": {
            "get": {
                "operationId": "upcomingInvoicesEstimateEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upcomingInvoicesEstimateEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/change_term_end_estimate": {
            "post": {
                "operationId": "changeTermEndEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EstimateChangeTermEndRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateChangeTermEndRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "changeTermEndEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/cancel_subscription_estimate": {
            "post": {
                "operationId": "cancelSubscriptionEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EstimateCancelSubscriptionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EstimateCancelSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cancelSubscriptionEstimate response",
                        "schema": {
                            "$ref": "#/definitions/Estimate"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "operationId": "listEvent",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listEvent response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "operationId": "retrieveEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveEvent response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/hosted_pages/checkout_new": {
            "post": {
                "operationId": "checkoutNewHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageCheckoutNewRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageCheckoutNewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "checkoutNewHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/checkout_existing": {
            "post": {
                "operationId": "checkoutExistingHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageCheckoutExistingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageCheckoutExistingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "checkoutExistingHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/update_card": {
            "post": {
                "operationId": "updateCardHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageUpdateCardRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageUpdateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateCardHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/update_payment_method": {
            "post": {
                "operationId": "updatePaymentMethodHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageUpdatePaymentMethodRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageUpdatePaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updatePaymentMethodHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/manage_payment_sources": {
            "post": {
                "operationId": "managePaymentSourcesHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageManagePaymentSourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageManagePaymentSourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "managePaymentSourcesHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/collect_now": {
            "post": {
                "operationId": "collectNowHostedPage",
                "parameters": [
                    {
                        "name": "HostedPageCollectNowRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostedPageCollectNowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "collectNowHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/{id}/acknowledge": {
            "post": {
                "operationId": "acknowledgeHostedPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "acknowledgeHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages/{id}": {
            "get": {
                "operationId": "retrieveHostedPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/hosted_pages": {
            "get": {
                "operationId": "listHostedPage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listHostedPage response",
                        "schema": {
                            "$ref": "#/definitions/HostedPage"
                        }
                    }
                }
            }
        },
        "/invoices": {
            "post": {
                "operationId": "createInvoice",
                "parameters": [
                    {
                        "name": "InvoiceCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listInvoice",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/charge": {
            "post": {
                "operationId": "chargeInvoice",
                "parameters": [
                    {
                        "name": "InvoiceChargeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chargeInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/charge_addon": {
            "post": {
                "operationId": "chargeAddonInvoice",
                "parameters": [
                    {
                        "name": "InvoiceChargeAddonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceChargeAddonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chargeAddonInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/stop_dunning": {
            "post": {
                "operationId": "stopDunningInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stopDunningInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/import_invoice": {
            "post": {
                "operationId": "importInvoiceInvoice",
                "parameters": [
                    {
                        "name": "InvoiceImportInvoiceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceImportInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "importInvoiceInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/apply_payments": {
            "post": {
                "operationId": "applyPaymentsInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceApplyPaymentsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceApplyPaymentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "applyPaymentsInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/apply_credits": {
            "post": {
                "operationId": "applyCreditsInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceApplyCreditsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceApplyCreditsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "applyCreditsInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/customers/{id}/invoices": {
            "get": {
                "operationId": "invoicesForCustomerInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoicesForCustomerInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/invoices": {
            "get": {
                "operationId": "invoicesForSubscriptionInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoicesForSubscriptionInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "operationId": "retrieveInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/pdf": {
            "post": {
                "operationId": "pdfInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pdfInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/add_charge": {
            "post": {
                "operationId": "addChargeInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceAddChargeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceAddChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addChargeInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/add_addon_charge": {
            "post": {
                "operationId": "addAddonChargeInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceAddAddonChargeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceAddAddonChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addAddonChargeInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/close": {
            "post": {
                "operationId": "closeInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "closeInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/collect_payment": {
            "post": {
                "operationId": "collectPaymentInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceCollectPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceCollectPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "collectPaymentInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/record_payment": {
            "post": {
                "operationId": "recordPaymentInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceRecordPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRecordPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recordPaymentInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/refund": {
            "post": {
                "operationId": "refundInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceRefundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRefundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "refundInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/record_refund": {
            "post": {
                "operationId": "recordRefundInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceRecordRefundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRecordRefundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recordRefundInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/remove_payment": {
            "post": {
                "operationId": "removePaymentInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceRemovePaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRemovePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "removePaymentInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/remove_credit_note": {
            "post": {
                "operationId": "removeCreditNoteInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceRemoveCreditNoteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceRemoveCreditNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "removeCreditNoteInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/void": {
            "post": {
                "operationId": "voidInvoiceInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceVoidInvoiceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceVoidInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "voidInvoiceInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/write_off": {
            "post": {
                "operationId": "writeOffInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceWriteOffRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceWriteOffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "writeOffInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/delete": {
            "post": {
                "operationId": "deleteInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/update_details": {
            "post": {
                "operationId": "updateDetailsInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "InvoiceUpdateDetailsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceUpdateDetailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateDetailsInvoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "operationId": "createOrder",
                "parameters": [
                    {
                        "name": "OrderCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createOrder response",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listOrder",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listOrder response",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "post": {
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "OrderUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateOrder response",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            },
            "get": {
                "operationId": "retrieveOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveOrder response",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/orders": {
            "get": {
                "operationId": "ordersForInvoiceOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ordersForInvoiceOrder response",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            }
        },
        "/payment_sources/create_using_temp_token": {
            "post": {
                "operationId": "createUsingTempTokenPaymentSource",
                "parameters": [
                    {
                        "name": "PaymentSourceCreateUsingTempTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceCreateUsingTempTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createUsingTempTokenPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/create_using_permanent_token": {
            "post": {
                "operationId": "createUsingPermanentTokenPaymentSource",
                "parameters": [
                    {
                        "name": "PaymentSourceCreateUsingPermanentTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceCreateUsingPermanentTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createUsingPermanentTokenPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/create_card": {
            "post": {
                "operationId": "createCardPaymentSource",
                "parameters": [
                    {
                        "name": "PaymentSourceCreateCardRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceCreateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCardPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/{id}/update_card": {
            "post": {
                "operationId": "updateCardPaymentSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "PaymentSourceUpdateCardRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceUpdateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateCardPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/{id}": {
            "get": {
                "operationId": "retrievePaymentSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrievePaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources": {
            "get": {
                "operationId": "listPaymentSource",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/{id}/switch_gateway_account": {
            "post": {
                "operationId": "switchGatewayAccountPaymentSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "PaymentSourceSwitchGatewayAccountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceSwitchGatewayAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "switchGatewayAccountPaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/{id}/export_payment_source": {
            "post": {
                "operationId": "exportPaymentSourcePaymentSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "PaymentSourceExportPaymentSourceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentSourceExportPaymentSourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "exportPaymentSourcePaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/payment_sources/{id}/delete": {
            "post": {
                "operationId": "deletePaymentSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deletePaymentSource response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSource"
                        }
                    }
                }
            }
        },
        "/plans": {
            "post": {
                "operationId": "createPlan",
                "parameters": [
                    {
                        "name": "PlanCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createPlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listPlan",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listPlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/plans/{id}": {
            "post": {
                "operationId": "updatePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "PlanUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updatePlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            },
            "get": {
                "operationId": "retrievePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrievePlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/plans/{id}/delete": {
            "post": {
                "operationId": "deletePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deletePlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/plans/copy": {
            "post": {
                "operationId": "copyPlan",
                "parameters": [
                    {
                        "name": "PlanCopyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanCopyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "copyPlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/plans/{id}/unarchive": {
            "post": {
                "operationId": "unarchivePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unarchivePlan response",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/portal_sessions": {
            "post": {
                "operationId": "createPortalSession",
                "parameters": [
                    {
                        "name": "PortalSessionCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PortalSessionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createPortalSession response",
                        "schema": {
                            "$ref": "#/definitions/PortalSession"
                        }
                    }
                }
            }
        },
        "/portal_sessions/{id}": {
            "get": {
                "operationId": "retrievePortalSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrievePortalSession response",
                        "schema": {
                            "$ref": "#/definitions/PortalSession"
                        }
                    }
                }
            }
        },
        "/portal_sessions/{id}/logout": {
            "post": {
                "operationId": "logoutPortalSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "logoutPortalSession response",
                        "schema": {
                            "$ref": "#/definitions/PortalSession"
                        }
                    }
                }
            }
        },
        "/portal_sessions/{id}/activate": {
            "post": {
                "operationId": "activatePortalSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "PortalSessionActivateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PortalSessionActivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "activatePortalSession response",
                        "schema": {
                            "$ref": "#/definitions/PortalSession"
                        }
                    }
                }
            }
        },
        "/promotional_credits/add": {
            "post": {
                "operationId": "addPromotionalCredit",
                "parameters": [
                    {
                        "name": "PromotionalCreditAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PromotionalCreditAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addPromotionalCredit response",
                        "schema": {
                            "$ref": "#/definitions/PromotionalCredit"
                        }
                    }
                }
            }
        },
        "/promotional_credits/deduct": {
            "post": {
                "operationId": "deductPromotionalCredit",
                "parameters": [
                    {
                        "name": "PromotionalCreditDeductRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PromotionalCreditDeductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deductPromotionalCredit response",
                        "schema": {
                            "$ref": "#/definitions/PromotionalCredit"
                        }
                    }
                }
            }
        },
        "/promotional_credits/set": {
            "post": {
                "operationId": "setPromotionalCredit",
                "parameters": [
                    {
                        "name": "PromotionalCreditSetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PromotionalCreditSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "setPromotionalCredit response",
                        "schema": {
                            "$ref": "#/definitions/PromotionalCredit"
                        }
                    }
                }
            }
        },
        "/promotional_credits": {
            "get": {
                "operationId": "listPromotionalCredit",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listPromotionalCredit response",
                        "schema": {
                            "$ref": "#/definitions/PromotionalCredit"
                        }
                    }
                }
            }
        },
        "/promotional_credits/{id}": {
            "get": {
                "operationId": "retrievePromotionalCredit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrievePromotionalCredit response",
                        "schema": {
                            "$ref": "#/definitions/PromotionalCredit"
                        }
                    }
                }
            }
        },
        "/resource_migrations/retrieve_latest": {
            "get": {
                "operationId": "retrieveLatestResourceMigration",
                "parameters": [
                    {
                        "name": "ResourceMigrationRetrieveLatestRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResourceMigrationRetrieveLatestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveLatestResourceMigration response",
                        "schema": {
                            "$ref": "#/definitions/ResourceMigration"
                        }
                    }
                }
            }
        },
        "/site_migration_details": {
            "get": {
                "operationId": "listSiteMigrationDetail",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listSiteMigrationDetail response",
                        "schema": {
                            "$ref": "#/definitions/SiteMigrationDetail"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "post": {
                "operationId": "createSubscription",
                "parameters": [
                    {
                        "name": "SubscriptionCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            },
            "get": {
                "operationId": "listSubscription",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/customers/{id}/subscriptions": {
            "post": {
                "operationId": "createForCustomerSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionCreateForCustomerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreateForCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createForCustomerSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            },
            "get": {
                "operationId": "subscriptionsForCustomerSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "subscriptionsForCustomerSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "operationId": "retrieveSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            },
            "post": {
                "operationId": "updateSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updateSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/retrieve_with_scheduled_changes": {
            "get": {
                "operationId": "retrieveWithScheduledChangesSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveWithScheduledChangesSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/remove_scheduled_changes": {
            "post": {
                "operationId": "removeScheduledChangesSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "removeScheduledChangesSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/remove_scheduled_cancellation": {
            "post": {
                "operationId": "removeScheduledCancellationSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionRemoveScheduledCancellationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRemoveScheduledCancellationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "removeScheduledCancellationSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/remove_coupons": {
            "post": {
                "operationId": "removeCouponsSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionRemoveCouponsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRemoveCouponsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "removeCouponsSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/change_term_end": {
            "post": {
                "operationId": "changeTermEndSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionChangeTermEndRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionChangeTermEndRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "changeTermEndSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/cancel": {
            "post": {
                "operationId": "cancelSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionCancelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCancelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cancelSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/reactivate": {
            "post": {
                "operationId": "reactivateSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionReactivateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionReactivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reactivateSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/add_charge_at_term_end": {
            "post": {
                "operationId": "addChargeAtTermEndSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionAddChargeAtTermEndRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionAddChargeAtTermEndRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "addChargeAtTermEndSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/charge_addon_at_term_end": {
            "post": {
                "operationId": "chargeAddonAtTermEndSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionChargeAddonAtTermEndRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionChargeAddonAtTermEndRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chargeAddonAtTermEndSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/charge_future_renewals": {
            "post": {
                "operationId": "chargeFutureRenewalsSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionChargeFutureRenewalsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionChargeFutureRenewalsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chargeFutureRenewalsSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/import_subscription": {
            "post": {
                "operationId": "importSubscriptionSubscription",
                "parameters": [
                    {
                        "name": "SubscriptionImportSubscriptionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionImportSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "importSubscriptionSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/customers/{id}/import_subscription": {
            "post": {
                "operationId": "importForCustomerSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionImportForCustomerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionImportForCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "importForCustomerSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/override_billing_profile": {
            "post": {
                "operationId": "overrideBillingProfileSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SubscriptionOverrideBillingProfileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionOverrideBillingProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "overrideBillingProfileSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/delete": {
            "post": {
                "operationId": "deleteSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteSubscription response",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/time_machines/{id}": {
            "get": {
                "operationId": "retrieveTimeMachine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveTimeMachine response",
                        "schema": {
                            "$ref": "#/definitions/TimeMachine"
                        }
                    }
                }
            }
        },
        "/time_machines/{id}/start_afresh": {
            "post": {
                "operationId": "startAfreshTimeMachine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TimeMachineStartAfreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeMachineStartAfreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "startAfreshTimeMachine response",
                        "schema": {
                            "$ref": "#/definitions/TimeMachine"
                        }
                    }
                }
            }
        },
        "/time_machines/{id}/travel_forward": {
            "post": {
                "operationId": "travelForwardTimeMachine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TimeMachineTravelForwardRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeMachineTravelForwardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "travelForwardTimeMachine response",
                        "schema": {
                            "$ref": "#/definitions/TimeMachine"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "operationId": "listTransaction",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listTransaction response",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    }
                }
            }
        },
        "/customers/{id}/transactions": {
            "get": {
                "operationId": "transactionsForCustomerTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transactionsForCustomerTransaction response",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}/transactions": {
            "get": {
                "operationId": "transactionsForSubscriptionTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transactionsForSubscriptionTransaction response",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    }
                }
            }
        },
        "/invoices/{id}/payments": {
            "get": {
                "operationId": "paymentsForInvoiceTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "paymentsForInvoiceTransaction response",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "operationId": "retrieveTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieveTransaction response",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    }
                }
            }
        },
        "/unbilled_charges/invoice_unbilled_charges": {
            "post": {
                "operationId": "invoiceUnbilledChargesUnbilledCharge",
                "parameters": [
                    {
                        "name": "UnbilledChargeInvoiceUnbilledChargesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnbilledChargeInvoiceUnbilledChargesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoiceUnbilledChargesUnbilledCharge response",
                        "schema": {
                            "$ref": "#/definitions/UnbilledCharge"
                        }
                    }
                }
            }
        },
        "/unbilled_charges/{id}/delete": {
            "post": {
                "operationId": "deleteUnbilledCharge",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleteUnbilledCharge response",
                        "schema": {
                            "$ref": "#/definitions/UnbilledCharge"
                        }
                    }
                }
            }
        },
        "/unbilled_charges": {
            "get": {
                "operationId": "listUnbilledCharge",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "listUnbilledCharge response",
                        "schema": {
                            "$ref": "#/definitions/UnbilledCharge"
                        }
                    }
                }
            }
        },
        "/unbilled_charges/invoice_now_estimate": {
            "post": {
                "operationId": "invoiceNowEstimateUnbilledCharge",
                "parameters": [
                    {
                        "name": "UnbilledChargeInvoiceNowEstimateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnbilledChargeInvoiceNowEstimateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoiceNowEstimateUnbilledCharge response",
                        "schema": {
                            "$ref": "#/definitions/UnbilledCharge"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Addon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "remaining_billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AddonCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "charge_type": {
                    "type": "string",
                    "enum": [
                        "recurring",
                        "non_recurring"
                    ]
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "unit": {
                    "type": "string"
                },
                "enabled_in_portal": {
                    "type": "boolean"
                },
                "taxable": {
                    "type": "boolean"
                },
                "tax_profile_id": {
                    "type": "string"
                },
                "tax_code": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "accounting_code": {
                    "type": "string"
                },
                "accounting_category1": {
                    "type": "string"
                },
                "accounting_category2": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "AddonUpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "charge_type": {
                    "type": "string",
                    "enum": [
                        "recurring",
                        "non_recurring"
                    ]
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "unit": {
                    "type": "string"
                },
                "enabled_in_portal": {
                    "type": "boolean"
                },
                "taxable": {
                    "type": "boolean"
                },
                "tax_profile_id": {
                    "type": "string"
                },
                "tax_code": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "accounting_code": {
                    "type": "string"
                },
                "accounting_category1": {
                    "type": "string"
                },
                "accounting_category2": {
                    "type": "string"
                }
            }
        },
        "AddonCopyRequest": {
            "type": "object",
            "properties": {
                "from_site": {
                    "type": "string"
                },
                "id_at_from_site": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "for_site_merging": {
                    "type": "boolean"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "addr": {
                    "type": "string"
                },
                "extended_addr": {
                    "type": "string"
                },
                "extended_addr2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "validation_status": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "subscription_id": {
                    "type": "string"
                }
            }
        },
        "AddressRetrieveRequest": {
            "type": "object",
            "properties": {
                "subscription_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "AddressUpdateRequest": {
            "type": "object",
            "properties": {
                "subscription_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "addr": {
                    "type": "string"
                },
                "extended_addr": {
                    "type": "string"
                },
                "extended_addr2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "validation_status": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "Card": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "iin": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "brand": {
                    "type": "string",
                    "enum": [
                        "visa",
                        "mastercard",
                        "american_express",
                        "discover",
                        "jcb",
                        "diners_club",
                        "other"
                    ]
                },
                "funding_type": {
                    "type": "string",
                    "enum": [
                        "credit",
                        "debit",
                        "prepaid",
                        "not_known",
                        "not_applicable"
                    ]
                },
                "expiry_month": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiry_year": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_addr1": {
                    "type": "string"
                },
                "billing_addr2": {
                    "type": "string"
                },
                "billing_city": {
                    "type": "string"
                },
                "billing_state_code": {
                    "type": "string"
                },
                "billing_state": {
                    "type": "string"
                },
                "billing_country": {
                    "type": "string"
                },
                "billing_zip": {
                    "type": "string"
                },
                "masked_number": {
                    "type": "string"
                }
            }
        },
        "CardUpdateCardForCustomerRequest": {
            "type": "object",
            "properties": {
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "tmp_token": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "expiry_month": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiry_year": {
                    "type": "integer",
                    "format": "int32"
                },
                "cvv": {
                    "type": "string"
                },
                "billing_addr1": {
                    "type": "string"
                },
                "billing_addr2": {
                    "type": "string"
                },
                "billing_city": {
                    "type": "string"
                },
                "billing_state_code": {
                    "type": "string"
                },
                "billing_state": {
                    "type": "string"
                },
                "billing_zip": {
                    "type": "string"
                },
                "billing_country": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "customer[vat_number]": {
                    "type": "string"
                }
            }
        },
        "CardSwitchGatewayForCustomerRequest": {
            "type": "object",
            "properties": {
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                }
            }
        },
        "CardCopyCardForCustomerRequest": {
            "type": "object",
            "properties": {
                "gateway_account_id": {
                    "type": "string"
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "added_by": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "CommentCreateRequest": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "added_by": {
                    "type": "string"
                }
            }
        },
        "Coupon": {
            "type": "object",
            "properties": {
                "coupon_id": {
                    "type": "string"
                },
                "apply_till": {
                    "type": "integer",
                    "format": "int64"
                },
                "applied_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "coupon_code": {
                    "type": "string"
                }
            }
        },
        "CouponCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "discount_type": {
                    "type": "string",
                    "enum": [
                        "item_level_coupon",
                        "document_level_coupon",
                        "promotional_credits",
                        "prorated_credits"
                    ]
                },
                "discount_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "discount_percentage": {
                    "type": "number",
                    "format": "double"
                },
                "discount_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "apply_on": {
                    "type": "string",
                    "enum": [
                        "invoice_amount",
                        "specified_items_total",
                        "each_specified_item",
                        "each_unit_of_specified_items"
                    ]
                },
                "plan_constraint": {
                    "type": "string",
                    "enum": [
                        "none",
                        "all",
                        "specific",
                        "not_applicable"
                    ]
                },
                "addon_constraint": {
                    "type": "string",
                    "enum": [
                        "none",
                        "all",
                        "specific",
                        "not_applicable"
                    ]
                },
                "plan_ids": {
                    "type": "string"
                },
                "addon_ids": {
                    "type": "string"
                },
                "duration_type": {
                    "type": "string",
                    "enum": [
                        "one_time",
                        "forever",
                        "limited_period"
                    ]
                },
                "duration_month": {
                    "type": "integer",
                    "format": "int32"
                },
                "valid_till": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_redemptions": {
                    "type": "integer",
                    "format": "int32"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "CouponCopyRequest": {
            "type": "object",
            "properties": {
                "from_site": {
                    "type": "string"
                },
                "id_at_from_site": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "for_site_merging": {
                    "type": "boolean"
                }
            }
        },
        "CouponCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "coupon_id": {
                    "type": "string"
                },
                "coupon_set_id": {
                    "type": "string"
                },
                "coupon_set_name": {
                    "type": "string"
                }
            }
        },
        "CouponCodeCreateRequest": {
            "type": "object",
            "properties": {
                "coupon_id": {
                    "type": "string"
                },
                "coupon_set_name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "CouponSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "coupon_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "redeemed_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "archived_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta_data": {
                    "type": "string"
                }
            }
        },
        "CouponSetCreateRequest": {
            "type": "object",
            "properties": {
                "coupon_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                }
            }
        },
        "CouponSetAddCouponCodesRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "CouponSetUpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                }
            }
        },
        "LineItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "date_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "date_to": {
                    "type": "integer",
                    "format": "int64"
                },
                "unit_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_taxed": {
                    "type": "boolean"
                },
                "tax_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "tax_rate": {
                    "type": "number",
                    "format": "double"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "discount_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "item_level_discount_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "tax_exempt_reason": {
                    "type": "string",
                    "enum": [
                        "tax_not_configured",
                        "region_non_taxable",
                        "export",
                        "customer_exempt",
                        "product_exempt",
                        "zero_rated",
                        "reverse_charge"
                    ]
                },
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "Discount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "LineItemDiscount": {
            "type": "object",
            "properties": {
                "line_item_id": {
                    "type": "string"
                },
                "discount_type": {
                    "type": "string",
                    "enum": [
                        "item_level_coupon",
                        "document_level_coupon",
                        "promotional_credits",
                        "prorated_credits"
                    ]
                },
                "coupon_id": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Tax": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "LineItemTax": {
            "type": "object",
            "properties": {
                "line_item_id": {
                    "type": "string"
                },
                "tax_name": {
                    "type": "string"
                },
                "tax_rate": {
                    "type": "number",
                    "format": "double"
                },
                "tax_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "tax_juris_type": {
                    "type": "string",
                    "enum": [
                        "country",
                        "state",
                        "county",
                        "city",
                        "special",
                        "other"
                    ]
                },
                "tax_juris_name": {
                    "type": "string"
                },
                "tax_juris_code": {
                    "type": "string"
                }
            }
        },
        "LinkedRefund": {
            "type": "object",
            "properties": {
                "txn_id": {
                    "type": "string"
                },
                "txn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "txn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "txn_amount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Allocation": {
            "type": "object",
            "properties": {
                "invoice_id": {
                    "type": "string"
                },
                "allocated_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "allocated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "CreditNote": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "reference_invoice_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "vat_number": {
                    "type": "string"
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "price_type": {
                    "type": "string",
                    "enum": [
                        "tax_exclusive",
                        "tax_inclusive"
                    ]
                },
                "currency_code": {
                    "type": "string"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_allocated": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_refunded": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_available": {
                    "type": "integer",
                    "format": "int32"
                },
                "refunded_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "voided_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "sub_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "round_off_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItem"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "line_item_discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemDiscount"
                    }
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "line_item_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemTax"
                    }
                },
                "linked_refunds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedRefund"
                    }
                },
                "allocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Allocation"
                    }
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "CreditNoteCreateRequest": {
            "type": "object",
            "properties": {
                "reference_invoice_id": {
                    "type": "string"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "customer_notes": {
                    "type": "string"
                }
            }
        },
        "CreditNoteRecordRefundRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "transaction[amount]": {
                    "type": "integer",
                    "format": "int32"
                },
                "transaction[payment_method]": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "transaction[reference_number]": {
                    "type": "string"
                },
                "transaction[date]": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CreditNoteVoidCreditNoteRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "CreditNoteDeleteRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "CreditNoteEstimate": {
            "type": "object",
            "properties": {
                "reference_invoice_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "price_type": {
                    "type": "string",
                    "enum": [
                        "tax_exclusive",
                        "tax_inclusive"
                    ]
                },
                "currency_code": {
                    "type": "string"
                },
                "sub_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_allocated": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_available": {
                    "type": "integer",
                    "format": "int32"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItem"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "line_item_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemTax"
                    }
                },
                "line_item_discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemDiscount"
                    }
                }
            }
        },
        "BillingAddress": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "line3": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "validation_status": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "ReferralUrl": {
            "type": "object",
            "properties": {
                "external_customer_id": {
                    "type": "string"
                },
                "referral_sharing_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "referral_campaign_id": {
                    "type": "string"
                },
                "referral_account_id": {
                    "type": "string"
                },
                "referral_external_campaign_id": {
                    "type": "string"
                },
                "referral_system": {
                    "type": "string",
                    "enum": [
                        "referral_candy",
                        "referral_saasquatch",
                        "friendbuy"
                    ]
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "send_account_email": {
                    "type": "boolean"
                },
                "send_billing_email": {
                    "type": "boolean"
                }
            }
        },
        "PaymentMethod": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "reference_id": {
                    "type": "string"
                }
            }
        },
        "Balance": {
            "type": "object",
            "properties": {
                "promotional_credits": {
                    "type": "integer",
                    "format": "int32"
                },
                "excess_payments": {
                    "type": "integer",
                    "format": "int32"
                },
                "refundable_credits": {
                    "type": "integer",
                    "format": "int32"
                },
                "unbilled_charges": {
                    "type": "integer",
                    "format": "int32"
                },
                "balance_currency_code": {
                    "type": "string"
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "vat_number": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "net_term_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "allow_direct_debit": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_from_ip": {
                    "type": "string"
                },
                "taxability": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "entity_code": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "exempt_number": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "locale": {
                    "type": "string"
                },
                "consolidated_invoicing": {
                    "type": "boolean"
                },
                "billing_date": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_date_mode": {
                    "type": "string",
                    "enum": [
                        "using_defaults",
                        "manually_set"
                    ]
                },
                "billing_day_of_week": {
                    "type": "string",
                    "enum": [
                        "sunday",
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday"
                    ]
                },
                "billing_day_of_week_mode": {
                    "type": "string",
                    "enum": [
                        "using_defaults",
                        "manually_set"
                    ]
                },
                "card_status": {
                    "type": "string",
                    "enum": [
                        "no_card",
                        "valid",
                        "expiring",
                        "expired",
                        "pending_verification",
                        "invalid"
                    ]
                },
                "fraud_flag": {
                    "type": "string",
                    "enum": [
                        "safe",
                        "suspicious",
                        "fraudulent"
                    ]
                },
                "primary_payment_source_id": {
                    "type": "string"
                },
                "backup_payment_source_id": {
                    "type": "string"
                },
                "billing_address": {
                    "$ref": "#/definitions/BillingAddress"
                },
                "referral_urls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReferralUrl"
                    }
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                },
                "payment_method": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "invoice_notes": {
                    "type": "string"
                },
                "preferred_currency_code": {
                    "type": "string"
                },
                "promotional_credits": {
                    "type": "integer",
                    "format": "int32"
                },
                "unbilled_charges": {
                    "type": "integer",
                    "format": "int32"
                },
                "refundable_credits": {
                    "type": "integer",
                    "format": "int32"
                },
                "excess_payments": {
                    "type": "integer",
                    "format": "int32"
                },
                "balances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Balance"
                    }
                },
                "meta_data": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "registered_for_gst": {
                    "type": "boolean"
                }
            }
        },
        "CustomerCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "preferred_currency_code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "net_term_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "allow_direct_debit": {
                    "type": "boolean"
                },
                "vat_number": {
                    "type": "string"
                },
                "registered_for_gst": {
                    "type": "boolean"
                },
                "taxability": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "locale": {
                    "type": "string"
                },
                "entity_code": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "exempt_number": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "consolidated_invoicing": {
                    "type": "boolean"
                },
                "created_from_ip": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[tmp_token]": {
                    "type": "string"
                },
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[tmp_token]": {
                    "type": "string"
                },
                "payment_method[issuing_country]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                },
                "card[ip_address]": {
                    "type": "string"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "CustomerUpdateRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "preferred_currency_code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "allow_direct_debit": {
                    "type": "boolean"
                },
                "net_term_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "taxability": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "locale": {
                    "type": "string"
                },
                "entity_code": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "exempt_number": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "fraud_flag": {
                    "type": "string",
                    "enum": [
                        "safe",
                        "suspicious",
                        "fraudulent"
                    ]
                },
                "consolidated_invoicing": {
                    "type": "boolean"
                }
            }
        },
        "CustomerUpdatePaymentMethodRequest": {
            "type": "object",
            "properties": {
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[tmp_token]": {
                    "type": "string"
                },
                "payment_method[issuing_country]": {
                    "type": "string"
                }
            }
        },
        "CustomerUpdateBillingInfoRequest": {
            "type": "object",
            "properties": {
                "vat_number": {
                    "type": "string"
                },
                "registered_for_gst": {
                    "type": "boolean"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "CustomerAssignPaymentRoleRequest": {
            "type": "object",
            "properties": {
                "payment_source_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "primary",
                        "backup",
                        "none"
                    ]
                }
            }
        },
        "CustomerAddContactRequest": {
            "type": "object",
            "properties": {
                "contact[id]": {
                    "type": "string"
                },
                "contact[first_name]": {
                    "type": "string"
                },
                "contact[last_name]": {
                    "type": "string"
                },
                "contact[email]": {
                    "type": "string"
                },
                "contact[phone]": {
                    "type": "string"
                },
                "contact[label]": {
                    "type": "string"
                },
                "contact[enabled]": {
                    "type": "boolean"
                },
                "contact[send_billing_email]": {
                    "type": "boolean"
                },
                "contact[send_account_email]": {
                    "type": "boolean"
                }
            }
        },
        "CustomerUpdateContactRequest": {
            "type": "object",
            "properties": {
                "contact[id]": {
                    "type": "string"
                },
                "contact[first_name]": {
                    "type": "string"
                },
                "contact[last_name]": {
                    "type": "string"
                },
                "contact[email]": {
                    "type": "string"
                },
                "contact[phone]": {
                    "type": "string"
                },
                "contact[label]": {
                    "type": "string"
                },
                "contact[enabled]": {
                    "type": "boolean"
                },
                "contact[send_billing_email]": {
                    "type": "boolean"
                },
                "contact[send_account_email]": {
                    "type": "boolean"
                }
            }
        },
        "CustomerDeleteContactRequest": {
            "type": "object",
            "properties": {
                "contact[id]": {
                    "type": "string"
                }
            }
        },
        "CustomerAddPromotionalCreditsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "CustomerDeductPromotionalCreditsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "CustomerSetPromotionalCreditsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "CustomerRecordExcessPaymentRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "transaction[amount]": {
                    "type": "integer",
                    "format": "int32"
                },
                "transaction[currency_code]": {
                    "type": "string"
                },
                "transaction[date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "transaction[payment_method]": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "transaction[reference_number]": {
                    "type": "string"
                }
            }
        },
        "CustomerCollectPaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "replace_primary_payment_source": {
                    "type": "boolean"
                },
                "retain_payment_source": {
                    "type": "boolean"
                },
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[tmp_token]": {
                    "type": "string"
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                }
            }
        },
        "CustomerDeleteRequest": {
            "type": "object",
            "properties": {
                "delete_payment_method": {
                    "type": "boolean"
                }
            }
        },
        "CustomerMoveRequest": {
            "type": "object",
            "properties": {
                "id_at_from_site": {
                    "type": "string"
                },
                "from_site": {
                    "type": "string"
                }
            }
        },
        "CustomerChangeBillingDateRequest": {
            "type": "object",
            "properties": {
                "billing_date": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_date_mode": {
                    "type": "string",
                    "enum": [
                        "using_defaults",
                        "manually_set"
                    ]
                },
                "billing_day_of_week": {
                    "type": "string",
                    "enum": [
                        "sunday",
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday"
                    ]
                },
                "billing_day_of_week_mode": {
                    "type": "string",
                    "enum": [
                        "using_defaults",
                        "manually_set"
                    ]
                }
            }
        },
        "Download": {
            "type": "object",
            "properties": {
                "download_url": {
                    "type": "string"
                },
                "valid_till": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Estimate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription_estimate": {
                    "$ref": "#/definitions/SubscriptionEstimate"
                },
                "invoice_estimate": {
                    "$ref": "#/definitions/InvoiceEstimate"
                },
                "invoice_estimates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceEstimate"
                    }
                },
                "next_invoice_estimate": {
                    "$ref": "#/definitions/InvoiceEstimate"
                },
                "credit_note_estimates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreditNoteEstimate"
                    }
                },
                "unbilled_charge_estimates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UnbilledCharge"
                    }
                }
            }
        },
        "EstimateCreateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "coupon_ids": {
                    "type": "string"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "subscription[id]": {
                    "type": "string"
                },
                "subscription[plan_id]": {
                    "type": "string"
                },
                "subscription[plan_quantity]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[plan_unit_price]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[setup_fee]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[start_date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[trial_end]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[coupon]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "customer[registered_for_gst]": {
                    "type": "boolean"
                },
                "customer[taxability]": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "customer[entity_code]": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "customer[exempt_number]": {
                    "type": "string"
                }
            }
        },
        "EstimateCreateSubForCustomerEstimateRequest": {
            "type": "object",
            "properties": {
                "use_existing_balances": {
                    "type": "boolean"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "coupon_ids": {
                    "type": "string"
                },
                "subscription[id]": {
                    "type": "string"
                },
                "subscription[plan_id]": {
                    "type": "string"
                },
                "subscription[plan_quantity]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[plan_unit_price]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[setup_fee]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[start_date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[trial_end]": {
                    "type": "integer",
                    "format": "int64"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "EstimateUpdateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "replace_addon_list": {
                    "type": "boolean"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "reactivate_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "coupon_ids": {
                    "type": "string"
                },
                "replace_coupon_list": {
                    "type": "boolean"
                },
                "prorate": {
                    "type": "boolean"
                },
                "end_of_term": {
                    "type": "boolean"
                },
                "force_term_reset": {
                    "type": "boolean"
                },
                "reactivate": {
                    "type": "boolean"
                },
                "include_delayed_charges": {
                    "type": "boolean"
                },
                "use_existing_balances": {
                    "type": "boolean"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "subscription[id]": {
                    "type": "string"
                },
                "subscription[plan_id]": {
                    "type": "string"
                },
                "subscription[plan_quantity]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[plan_unit_price]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[setup_fee]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[start_date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[trial_end]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[coupon]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "customer[registered_for_gst]": {
                    "type": "boolean"
                },
                "customer[taxability]": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                }
            }
        },
        "EstimateRenewalEstimateRequest": {
            "type": "object",
            "properties": {
                "include_delayed_charges": {
                    "type": "boolean"
                },
                "use_existing_balances": {
                    "type": "boolean"
                },
                "ignore_scheduled_cancellation": {
                    "type": "boolean"
                },
                "ignore_scheduled_changes": {
                    "type": "boolean"
                }
            }
        },
        "EstimateChangeTermEndRequest": {
            "type": "object",
            "properties": {
                "term_ends_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "prorate": {
                    "type": "boolean"
                },
                "invoice_immediately": {
                    "type": "boolean"
                }
            }
        },
        "EstimateCancelSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_of_term": {
                    "type": "boolean"
                },
                "credit_option_for_current_term_charges": {
                    "type": "string",
                    "enum": [
                        "none",
                        "prorate",
                        "full"
                    ]
                },
                "unbilled_charges_option": {
                    "type": "string",
                    "enum": [
                        "invoice",
                        "delete"
                    ]
                },
                "account_receivables_handling": {
                    "type": "string",
                    "enum": [
                        "no_action",
                        "schedule_payment_collection",
                        "write_off"
                    ]
                },
                "refundable_credits_handling": {
                    "type": "string",
                    "enum": [
                        "no_action",
                        "schedule_refund"
                    ]
                }
            }
        },
        "Webhook": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "webhook_status": {
                    "type": "string",
                    "enum": [
                        "not_configured",
                        "scheduled",
                        "succeeded",
                        "re_scheduled",
                        "failed",
                        "skipped",
                        "not_applicable"
                    ]
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "occurred_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "admin_console",
                        "api",
                        "scheduled_job",
                        "hosted_page",
                        "portal",
                        "system",
                        "none",
                        "js_api",
                        "migration",
                        "bulk_operation",
                        "external_service"
                    ]
                },
                "user": {
                    "type": "string"
                },
                "webhook_status": {
                    "type": "string",
                    "enum": [
                        "not_configured",
                        "scheduled",
                        "succeeded",
                        "re_scheduled",
                        "failed",
                        "skipped",
                        "not_applicable"
                    ]
                },
                "webhook_failure_reason": {
                    "type": "string"
                },
                "webhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Webhook"
                    }
                },
                "event_type": {
                    "type": "string",
                    "enum": [
                        "plan_created",
                        "plan_updated",
                        "plan_deleted",
                        "addon_created",
                        "addon_updated",
                        "addon_deleted",
                        "coupon_created",
                        "coupon_updated",
                        "coupon_deleted",
                        "coupon_set_created",
                        "coupon_set_updated",
                        "coupon_set_deleted",
                        "coupon_codes_added",
                        "coupon_codes_deleted",
                        "coupon_codes_updated",
                        "customer_created",
                        "customer_changed",
                        "customer_deleted",
                        "customer_moved_out",
                        "customer_moved_in",
                        "promotional_credits_added",
                        "promotional_credits_deducted",
                        "subscription_created",
                        "subscription_started",
                        "subscription_trial_end_reminder",
                        "subscription_activated",
                        "subscription_changed",
                        "subscription_cancellation_scheduled",
                        "subscription_cancellation_reminder",
                        "subscription_cancelled",
                        "subscription_reactivated",
                        "subscription_renewed",
                        "subscription_scheduled_cancellation_removed",
                        "subscription_changes_scheduled",
                        "subscription_scheduled_changes_removed",
                        "subscription_shipping_address_updated",
                        "subscription_deleted",
                        "pending_invoice_created",
                        "pending_invoice_updated",
                        "invoice_generated",
                        "invoice_updated",
                        "invoice_deleted",
                        "credit_note_created",
                        "credit_note_updated",
                        "credit_note_deleted",
                        "subscription_renewal_reminder",
                        "transaction_created",
                        "transaction_updated",
                        "transaction_deleted",
                        "payment_succeeded",
                        "payment_failed",
                        "payment_refunded",
                        "payment_initiated",
                        "refund_initiated",
                        "netd_payment_due_reminder",
                        "card_added",
                        "card_updated",
                        "card_expiry_reminder",
                        "card_expired",
                        "card_deleted",
                        "payment_source_added",
                        "payment_source_updated",
                        "payment_source_deleted",
                        "unbilled_charges_created",
                        "unbilled_charges_voided",
                        "unbilled_charges_deleted",
                        "unbilled_charges_invoiced"
                    ]
                },
                "api_version": {
                    "type": "string",
                    "enum": [
                        "v1",
                        "v2"
                    ]
                }
            }
        },
        "HostedPage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "url": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "created",
                        "requested",
                        "succeeded",
                        "cancelled",
                        "failed",
                        "acknowledged"
                    ]
                },
                "failure_reason": {
                    "type": "string",
                    "enum": [
                        "card_error",
                        "server_error"
                    ]
                },
                "pass_thru_content": {
                    "type": "string"
                },
                "embed": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "expires_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkout_info": {
                    "type": "string"
                }
            }
        },
        "HostedPageCheckoutNewRequest": {
            "type": "object",
            "properties": {
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "redirect_url": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                },
                "pass_thru_content": {
                    "type": "string"
                },
                "embed": {
                    "type": "boolean"
                },
                "iframe_messaging": {
                    "type": "boolean"
                },
                "subscription[id]": {
                    "type": "string"
                },
                "customer[id]": {
                    "type": "string"
                },
                "customer[email]": {
                    "type": "string"
                },
                "customer[first_name]": {
                    "type": "string"
                },
                "customer[last_name]": {
                    "type": "string"
                },
                "customer[company]": {
                    "type": "string"
                },
                "customer[taxability]": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "customer[locale]": {
                    "type": "string"
                },
                "customer[phone]": {
                    "type": "string"
                },
                "subscription[plan_id]": {
                    "type": "string"
                },
                "subscription[plan_quantity]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[plan_unit_price]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[setup_fee]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[start_date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[trial_end]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[coupon]": {
                    "type": "string"
                },
                "subscription[auto_collection]": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "subscription[invoice_notes]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "customer[consolidated_invoicing]": {
                    "type": "boolean"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "HostedPageCheckoutExistingRequest": {
            "type": "object",
            "properties": {
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "replace_addon_list": {
                    "type": "boolean"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "reactivate_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "reactivate": {
                    "type": "boolean"
                },
                "force_term_reset": {
                    "type": "boolean"
                },
                "redirect_url": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                },
                "pass_thru_content": {
                    "type": "string"
                },
                "embed": {
                    "type": "boolean"
                },
                "iframe_messaging": {
                    "type": "boolean"
                },
                "subscription[id]": {
                    "type": "string"
                },
                "subscription[plan_id]": {
                    "type": "string"
                },
                "subscription[plan_quantity]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[plan_unit_price]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[setup_fee]": {
                    "type": "integer",
                    "format": "int32"
                },
                "subscription[start_date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[trial_end]": {
                    "type": "integer",
                    "format": "int64"
                },
                "subscription[coupon]": {
                    "type": "string"
                },
                "subscription[invoice_notes]": {
                    "type": "string"
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                }
            }
        },
        "HostedPageUpdateCardRequest": {
            "type": "object",
            "properties": {
                "redirect_url": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                },
                "pass_thru_content": {
                    "type": "string"
                },
                "embed": {
                    "type": "boolean"
                },
                "iframe_messaging": {
                    "type": "boolean"
                },
                "customer[id]": {
                    "type": "string"
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                }
            }
        },
        "HostedPageUpdatePaymentMethodRequest": {
            "type": "object",
            "properties": {
                "redirect_url": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                },
                "pass_thru_content": {
                    "type": "string"
                },
                "embed": {
                    "type": "boolean"
                },
                "iframe_messaging": {
                    "type": "boolean"
                },
                "customer[id]": {
                    "type": "string"
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                }
            }
        },
        "HostedPageManagePaymentSourcesRequest": {
            "type": "object",
            "properties": {
                "customer[id]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                }
            }
        },
        "HostedPageCollectNowRequest": {
            "type": "object",
            "properties": {
                "currency_code": {
                    "type": "string"
                },
                "customer[id]": {
                    "type": "string"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                }
            }
        },
        "LinkedPayment": {
            "type": "object",
            "properties": {
                "txn_id": {
                    "type": "string"
                },
                "applied_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "applied_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "txn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "txn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "txn_amount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppliedCredit": {
            "type": "object",
            "properties": {
                "cn_id": {
                    "type": "string"
                },
                "applied_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "applied_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "cn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "AdjustmentCreditNote": {
            "type": "object",
            "properties": {
                "cn_id": {
                    "type": "string"
                },
                "cn_reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "cn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "cn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "IssuedCreditNote": {
            "type": "object",
            "properties": {
                "cn_id": {
                    "type": "string"
                },
                "cn_reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "cn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "cn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "LinkedOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "reference_id": {
                    "type": "string"
                },
                "fulfillment_status": {
                    "type": "string"
                },
                "batch_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Note": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "note": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "ShippingAddress": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "line3": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "validation_status": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "vat_number": {
                    "type": "string"
                },
                "price_type": {
                    "type": "string",
                    "enum": [
                        "tax_exclusive",
                        "tax_inclusive"
                    ]
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "due_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "net_term_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_paid": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_adjusted": {
                    "type": "integer",
                    "format": "int32"
                },
                "write_off_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "credits_applied": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_due": {
                    "type": "integer",
                    "format": "int32"
                },
                "paid_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "dunning_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "exhausted",
                        "stopped",
                        "success"
                    ]
                },
                "next_retry_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "voided_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "sub_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "tax": {
                    "type": "integer",
                    "format": "int32"
                },
                "first_invoice": {
                    "type": "boolean"
                },
                "has_advance_charges": {
                    "type": "boolean"
                },
                "amount_to_collect": {
                    "type": "integer",
                    "format": "int32"
                },
                "round_off_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItem"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "line_item_discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemDiscount"
                    }
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "line_item_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemTax"
                    }
                },
                "linked_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedPayment"
                    }
                },
                "applied_credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppliedCredit"
                    }
                },
                "adjustment_credit_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AdjustmentCreditNote"
                    }
                },
                "issued_credit_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IssuedCreditNote"
                    }
                },
                "linked_orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedOrder"
                    }
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "shipping_address": {
                    "$ref": "#/definitions/ShippingAddress"
                },
                "billing_address": {
                    "$ref": "#/definitions/BillingAddress"
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "InvoiceCreateRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "coupon": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "InvoiceChargeRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "coupon": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                }
            }
        },
        "InvoiceChargeAddonRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "addon_id": {
                    "type": "string"
                },
                "addon_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "addon_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "coupon": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                }
            }
        },
        "InvoiceImportInvoiceRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "price_type": {
                    "type": "string",
                    "enum": [
                        "tax_exclusive",
                        "tax_inclusive"
                    ]
                },
                "tax_override_reason": {
                    "type": "string",
                    "enum": [
                        "id_exempt",
                        "customer_exempt"
                    ]
                },
                "vat_number": {
                    "type": "string"
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "round_off": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "due_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "net_term_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "use_for_proration": {
                    "type": "boolean"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "InvoiceApplyPaymentsRequest": {
            "type": "object",
            "properties": {}
        },
        "InvoiceApplyCreditsRequest": {
            "type": "object",
            "properties": {}
        },
        "InvoiceAddChargeRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "line_item[date_from]": {
                    "type": "integer",
                    "format": "int64"
                },
                "line_item[date_to]": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "InvoiceAddAddonChargeRequest": {
            "type": "object",
            "properties": {
                "addon_id": {
                    "type": "string"
                },
                "addon_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "addon_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "line_item[date_from]": {
                    "type": "integer",
                    "format": "int64"
                },
                "line_item[date_to]": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "InvoiceCollectPaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_source_id": {
                    "type": "string"
                }
            }
        },
        "InvoiceRecordPaymentRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "transaction[amount]": {
                    "type": "integer",
                    "format": "int32"
                },
                "transaction[payment_method]": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "transaction[reference_number]": {
                    "type": "string"
                },
                "transaction[id_at_gateway]": {
                    "type": "string"
                },
                "transaction[status]": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "transaction[date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "transaction[error_code]": {
                    "type": "string"
                },
                "transaction[error_text]": {
                    "type": "string"
                }
            }
        },
        "InvoiceRefundRequest": {
            "type": "object",
            "properties": {
                "refund_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "customer_notes": {
                    "type": "string"
                },
                "credit_note[reason_code]": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                }
            }
        },
        "InvoiceRecordRefundRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "customer_notes": {
                    "type": "string"
                },
                "transaction[amount]": {
                    "type": "integer",
                    "format": "int32"
                },
                "transaction[payment_method]": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "transaction[reference_number]": {
                    "type": "string"
                },
                "transaction[date]": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_note[reason_code]": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                }
            }
        },
        "InvoiceRemovePaymentRequest": {
            "type": "object",
            "properties": {
                "transaction[id]": {
                    "type": "string"
                }
            }
        },
        "InvoiceRemoveCreditNoteRequest": {
            "type": "object",
            "properties": {
                "credit_note[id]": {
                    "type": "string"
                }
            }
        },
        "InvoiceVoidInvoiceRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "InvoiceWriteOffRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "InvoiceDeleteRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "InvoiceUpdateDetailsRequest": {
            "type": "object",
            "properties": {
                "vat_number": {
                    "type": "string"
                },
                "po_number": {
                    "type": "string"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "InvoiceEstimate": {
            "type": "object",
            "properties": {
                "recurring": {
                    "type": "boolean"
                },
                "price_type": {
                    "type": "string",
                    "enum": [
                        "tax_exclusive",
                        "tax_inclusive"
                    ]
                },
                "currency_code": {
                    "type": "string"
                },
                "sub_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "credits_applied": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_paid": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount_due": {
                    "type": "integer",
                    "format": "int32"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItem"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "line_item_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemTax"
                    }
                },
                "line_item_discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LineItemDiscount"
                    }
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "reference_id": {
                    "type": "string"
                },
                "fulfillment_status": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "tracking_id": {
                    "type": "string"
                },
                "batch_id": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "status_update_at": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OrderCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "reference_id": {
                    "type": "string"
                },
                "fulfillment_status": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "tracking_id": {
                    "type": "string"
                },
                "batch_id": {
                    "type": "string"
                }
            }
        },
        "OrderUpdateRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "reference_id": {
                    "type": "string"
                },
                "fulfillment_status": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "tracking_id": {
                    "type": "string"
                },
                "batch_id": {
                    "type": "string"
                }
            }
        },
        "BankAccount": {
            "type": "object",
            "properties": {
                "name_on_account": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "mandate_id": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string",
                    "enum": [
                        "checking",
                        "savings"
                    ]
                }
            }
        },
        "AmazonPayment": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "agreement_id": {
                    "type": "string"
                }
            }
        },
        "Paypal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "agreement_id": {
                    "type": "string"
                }
            }
        },
        "PaymentSource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "reference_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "issuing_country": {
                    "type": "string"
                },
                "card": {
                    "$ref": "#/definitions/Card"
                },
                "bank_account": {
                    "$ref": "#/definitions/BankAccount"
                },
                "amazon_payment": {
                    "$ref": "#/definitions/AmazonPayment"
                },
                "paypal": {
                    "$ref": "#/definitions/Paypal"
                }
            }
        },
        "PaymentSourceCreateUsingTempTokenRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "tmp_token": {
                    "type": "string"
                },
                "issuing_country": {
                    "type": "string"
                },
                "replace_primary_payment_source": {
                    "type": "boolean"
                }
            }
        },
        "PaymentSourceCreateUsingPermanentTokenRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "issuing_country": {
                    "type": "string"
                },
                "replace_primary_payment_source": {
                    "type": "boolean"
                }
            }
        },
        "PaymentSourceCreateCardRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "replace_primary_payment_source": {
                    "type": "boolean"
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                }
            }
        },
        "PaymentSourceUpdateCardRequest": {
            "type": "object",
            "properties": {
                "gateway_meta_data": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                }
            }
        },
        "PaymentSourceSwitchGatewayAccountRequest": {
            "type": "object",
            "properties": {
                "gateway_account_id": {
                    "type": "string"
                }
            }
        },
        "PaymentSourceExportPaymentSourceRequest": {
            "type": "object",
            "properties": {
                "gateway_account_id": {
                    "type": "string"
                }
            }
        },
        "Plan": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "trial_period": {
                    "type": "integer",
                    "format": "int32"
                },
                "trial_period_unit": {
                    "type": "string",
                    "enum": [
                        "day",
                        "month"
                    ]
                },
                "charge_model": {
                    "type": "string",
                    "enum": [
                        "flat_fee",
                        "per_unit"
                    ]
                },
                "free_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_cost": {
                    "type": "integer",
                    "format": "int32"
                },
                "downgrade_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "archived_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "redirect_url": {
                    "type": "string"
                },
                "enabled_in_hosted_pages": {
                    "type": "boolean"
                },
                "enabled_in_portal": {
                    "type": "boolean"
                },
                "tax_code": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "accounting_code": {
                    "type": "string"
                },
                "accounting_category1": {
                    "type": "string"
                },
                "accounting_category2": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "taxable": {
                    "type": "boolean"
                },
                "tax_profile_id": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                }
            }
        },
        "PlanCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "trial_period": {
                    "type": "integer",
                    "format": "int32"
                },
                "trial_period_unit": {
                    "type": "string",
                    "enum": [
                        "day",
                        "month"
                    ]
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "setup_cost": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "charge_model": {
                    "type": "string",
                    "enum": [
                        "flat_fee",
                        "per_unit"
                    ]
                },
                "free_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "downgrade_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "redirect_url": {
                    "type": "string"
                },
                "enabled_in_hosted_pages": {
                    "type": "boolean"
                },
                "enabled_in_portal": {
                    "type": "boolean"
                },
                "taxable": {
                    "type": "boolean"
                },
                "tax_profile_id": {
                    "type": "string"
                },
                "tax_code": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "accounting_code": {
                    "type": "string"
                },
                "accounting_category1": {
                    "type": "string"
                },
                "accounting_category2": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "PlanUpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "trial_period": {
                    "type": "integer",
                    "format": "int32"
                },
                "trial_period_unit": {
                    "type": "string",
                    "enum": [
                        "day",
                        "month"
                    ]
                },
                "period": {
                    "type": "integer",
                    "format": "int32"
                },
                "period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "setup_cost": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "charge_model": {
                    "type": "string",
                    "enum": [
                        "flat_fee",
                        "per_unit"
                    ]
                },
                "free_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "downgrade_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "redirect_url": {
                    "type": "string"
                },
                "enabled_in_hosted_pages": {
                    "type": "boolean"
                },
                "enabled_in_portal": {
                    "type": "boolean"
                },
                "taxable": {
                    "type": "boolean"
                },
                "tax_profile_id": {
                    "type": "string"
                },
                "tax_code": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "accounting_code": {
                    "type": "string"
                },
                "accounting_category1": {
                    "type": "string"
                },
                "accounting_category2": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                }
            }
        },
        "PlanCopyRequest": {
            "type": "object",
            "properties": {
                "from_site": {
                    "type": "string"
                },
                "id_at_from_site": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "for_site_merging": {
                    "type": "boolean"
                }
            }
        },
        "LinkedCustomer": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "has_billing_address": {
                    "type": "boolean"
                },
                "has_payment_method": {
                    "type": "boolean"
                },
                "has_active_subscription": {
                    "type": "boolean"
                }
            }
        },
        "PortalSession": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "access_url": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "expires_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "customer_id": {
                    "type": "string"
                },
                "login_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "logout_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "login_ipaddress": {
                    "type": "string"
                },
                "logout_ipaddress": {
                    "type": "string"
                },
                "linked_customers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedCustomer"
                    }
                }
            }
        },
        "PortalSessionCreateRequest": {
            "type": "object",
            "properties": {
                "redirect_url": {
                    "type": "string"
                },
                "forward_url": {
                    "type": "string"
                },
                "customer[id]": {
                    "type": "string"
                }
            }
        },
        "PortalSessionActivateRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "PromotionalCredit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                },
                "closing_balance": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PromotionalCreditAddRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "PromotionalCreditDeductRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "PromotionalCreditSetRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string",
                    "enum": [
                        "loyalty_credits",
                        "referral_rewards",
                        "general"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "ResourceMigration": {
            "type": "object",
            "properties": {
                "from_site": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "errors": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ResourceMigrationRetrieveLatestRequest": {
            "type": "object",
            "properties": {
                "from_site": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "SiteMigrationDetail": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "other_site_name": {
                    "type": "string"
                },
                "entity_id_at_other_site": {
                    "type": "string"
                },
                "migrated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "ReferralInfo": {
            "type": "object",
            "properties": {
                "referral_code": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                },
                "referrer_id": {
                    "type": "string"
                },
                "external_reference_id": {
                    "type": "string"
                },
                "reward_status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "paid",
                        "invalid"
                    ]
                },
                "referral_system": {
                    "type": "string",
                    "enum": [
                        "referral_candy",
                        "referral_saasquatch",
                        "friendbuy"
                    ]
                },
                "account_id": {
                    "type": "string"
                },
                "campaign_id": {
                    "type": "string"
                },
                "external_campaign_id": {
                    "type": "string"
                },
                "friend_offer_type": {
                    "type": "string",
                    "enum": [
                        "none",
                        "coupon",
                        "coupon_code"
                    ]
                },
                "referrer_reward_type": {
                    "type": "string",
                    "enum": [
                        "none",
                        "referral_direct_reward",
                        "custom_promotional_credit",
                        "custom_revenue_percent_based"
                    ]
                },
                "notify_referral_system": {
                    "type": "string",
                    "enum": [
                        "none",
                        "first_paid_conversion",
                        "all_invoices"
                    ]
                },
                "destination_url": {
                    "type": "string"
                },
                "post_purchase_widget_enabled": {
                    "type": "boolean"
                }
            }
        },
        "Subscription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_period": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_period_unit": {
                    "type": "string",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ]
                },
                "plan_free_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "current_term_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "current_term_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "next_billing_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "remaining_billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "po_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "activated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancelled_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancel_reason": {
                    "type": "string",
                    "enum": [
                        "not_paid",
                        "no_card",
                        "fraud_review_failed",
                        "non_compliant_eu_customer",
                        "tax_calculation_failed",
                        "currency_incompatible_with_gateway",
                        "non_compliant_customer"
                    ]
                },
                "affiliate_token": {
                    "type": "string"
                },
                "created_from_ip": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "has_scheduled_changes": {
                    "type": "boolean"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "due_invoices_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "due_since": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_dues": {
                    "type": "integer",
                    "format": "int32"
                },
                "mrr": {
                    "type": "integer",
                    "format": "int32"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "base_currency_code": {
                    "type": "string"
                },
                "addons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Addon"
                    }
                },
                "coupon": {
                    "type": "string"
                },
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Coupon"
                    }
                },
                "shipping_address": {
                    "$ref": "#/definitions/ShippingAddress"
                },
                "referral_info": {
                    "$ref": "#/definitions/ReferralInfo"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "SubscriptionCreateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "coupon": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "po_number": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "string"
                },
                "affiliate_token": {
                    "type": "string"
                },
                "created_from_ip": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "customer[id]": {
                    "type": "string"
                },
                "customer[email]": {
                    "type": "string"
                },
                "customer[first_name]": {
                    "type": "string"
                },
                "customer[last_name]": {
                    "type": "string"
                },
                "customer[company]": {
                    "type": "string"
                },
                "customer[taxability]": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "customer[locale]": {
                    "type": "string"
                },
                "customer[entity_code]": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "customer[exempt_number]": {
                    "type": "string"
                },
                "customer[net_term_days]": {
                    "type": "integer",
                    "format": "int32"
                },
                "customer[phone]": {
                    "type": "string"
                },
                "customer[auto_collection]": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "customer[allow_direct_debit]": {
                    "type": "boolean"
                },
                "customer[consolidated_invoicing]": {
                    "type": "boolean"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[tmp_token]": {
                    "type": "string"
                },
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[tmp_token]": {
                    "type": "string"
                },
                "payment_method[issuing_country]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                },
                "card[ip_address]": {
                    "type": "string"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "customer[registered_for_gst]": {
                    "type": "boolean"
                }
            }
        },
        "SubscriptionCreateForCustomerRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "coupon": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "po_number": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "SubscriptionRemoveScheduledCancellationRequest": {
            "type": "object",
            "properties": {
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriptionRemoveCouponsRequest": {
            "type": "object",
            "properties": {
                "coupon_ids": {
                    "type": "string"
                }
            }
        },
        "SubscriptionUpdateRequest": {
            "type": "object",
            "properties": {
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "replace_addon_list": {
                    "type": "boolean"
                },
                "coupon": {
                    "type": "string"
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                },
                "reactivate_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "po_number": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "string"
                },
                "replace_coupon_list": {
                    "type": "boolean"
                },
                "prorate": {
                    "type": "boolean"
                },
                "end_of_term": {
                    "type": "boolean"
                },
                "force_term_reset": {
                    "type": "boolean"
                },
                "reactivate": {
                    "type": "boolean"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[tmp_token]": {
                    "type": "string"
                },
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[tmp_token]": {
                    "type": "string"
                },
                "payment_method[issuing_country]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                },
                "card[ip_address]": {
                    "type": "string"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "customer[vat_number]": {
                    "type": "string"
                },
                "customer[registered_for_gst]": {
                    "type": "boolean"
                }
            }
        },
        "SubscriptionChangeTermEndRequest": {
            "type": "object",
            "properties": {
                "term_ends_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "prorate": {
                    "type": "boolean"
                },
                "invoice_immediately": {
                    "type": "boolean"
                }
            }
        },
        "SubscriptionCancelRequest": {
            "type": "object",
            "properties": {
                "end_of_term": {
                    "type": "boolean"
                },
                "credit_option_for_current_term_charges": {
                    "type": "string",
                    "enum": [
                        "none",
                        "prorate",
                        "full"
                    ]
                },
                "unbilled_charges_option": {
                    "type": "string",
                    "enum": [
                        "invoice",
                        "delete"
                    ]
                },
                "account_receivables_handling": {
                    "type": "string",
                    "enum": [
                        "no_action",
                        "schedule_payment_collection",
                        "write_off"
                    ]
                },
                "refundable_credits_handling": {
                    "type": "string",
                    "enum": [
                        "no_action",
                        "schedule_refund"
                    ]
                }
            }
        },
        "SubscriptionReactivateRequest": {
            "type": "object",
            "properties": {
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "trial_period_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "reactivate_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_immediately": {
                    "type": "boolean"
                },
                "billing_alignment_mode": {
                    "type": "string",
                    "enum": [
                        "immediate",
                        "delayed"
                    ]
                },
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriptionAddChargeAtTermEndRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "SubscriptionChargeAddonAtTermEndRequest": {
            "type": "object",
            "properties": {
                "addon_id": {
                    "type": "string"
                },
                "addon_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "addon_unit_price": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriptionChargeFutureRenewalsRequest": {
            "type": "object",
            "properties": {
                "terms_to_charge": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SubscriptionImportSubscriptionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "po_number": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "current_term_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "current_term_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancelled_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "affiliate_token": {
                    "type": "string"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "customer[id]": {
                    "type": "string"
                },
                "customer[email]": {
                    "type": "string"
                },
                "customer[first_name]": {
                    "type": "string"
                },
                "customer[last_name]": {
                    "type": "string"
                },
                "customer[company]": {
                    "type": "string"
                },
                "customer[taxability]": {
                    "type": "string",
                    "enum": [
                        "taxable",
                        "exempt"
                    ]
                },
                "customer[locale]": {
                    "type": "string"
                },
                "customer[entity_code]": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e",
                        "f",
                        "g",
                        "h",
                        "i",
                        "j",
                        "k",
                        "l",
                        "n",
                        "p",
                        "q",
                        "r",
                        "med1",
                        "med2"
                    ]
                },
                "customer[exempt_number]": {
                    "type": "string"
                },
                "customer[net_term_days]": {
                    "type": "integer",
                    "format": "int32"
                },
                "customer[phone]": {
                    "type": "string"
                },
                "customer[auto_collection]": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "customer[allow_direct_debit]": {
                    "type": "boolean"
                },
                "card[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "card[gateway_account_id]": {
                    "type": "string"
                },
                "card[tmp_token]": {
                    "type": "string"
                },
                "payment_method[type]": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "payment_method[gateway]": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "payment_method[gateway_account_id]": {
                    "type": "string"
                },
                "payment_method[reference_id]": {
                    "type": "string"
                },
                "payment_method[issuing_country]": {
                    "type": "string"
                },
                "card[first_name]": {
                    "type": "string"
                },
                "card[last_name]": {
                    "type": "string"
                },
                "card[number]": {
                    "type": "string"
                },
                "card[expiry_month]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[expiry_year]": {
                    "type": "integer",
                    "format": "int32"
                },
                "card[cvv]": {
                    "type": "string"
                },
                "card[billing_addr1]": {
                    "type": "string"
                },
                "card[billing_addr2]": {
                    "type": "string"
                },
                "card[billing_city]": {
                    "type": "string"
                },
                "card[billing_state_code]": {
                    "type": "string"
                },
                "card[billing_state]": {
                    "type": "string"
                },
                "card[billing_zip]": {
                    "type": "string"
                },
                "card[billing_country]": {
                    "type": "string"
                },
                "billing_address[first_name]": {
                    "type": "string"
                },
                "billing_address[last_name]": {
                    "type": "string"
                },
                "billing_address[email]": {
                    "type": "string"
                },
                "billing_address[company]": {
                    "type": "string"
                },
                "billing_address[phone]": {
                    "type": "string"
                },
                "billing_address[line1]": {
                    "type": "string"
                },
                "billing_address[line2]": {
                    "type": "string"
                },
                "billing_address[line3]": {
                    "type": "string"
                },
                "billing_address[city]": {
                    "type": "string"
                },
                "billing_address[state_code]": {
                    "type": "string"
                },
                "billing_address[state]": {
                    "type": "string"
                },
                "billing_address[zip]": {
                    "type": "string"
                },
                "billing_address[country]": {
                    "type": "string"
                },
                "billing_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                },
                "customer[vat_number]": {
                    "type": "string"
                }
            }
        },
        "SubscriptionImportForCustomerRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "plan_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_unit_price": {
                    "type": "integer",
                    "format": "int32"
                },
                "setup_fee": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_cycles": {
                    "type": "integer",
                    "format": "int32"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                },
                "po_number": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "current_term_end": {
                    "type": "integer",
                    "format": "int64"
                },
                "current_term_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "trial_start": {
                    "type": "integer",
                    "format": "int64"
                },
                "cancelled_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_notes": {
                    "type": "string"
                },
                "meta_data": {
                    "type": "string"
                },
                "shipping_address[first_name]": {
                    "type": "string"
                },
                "shipping_address[last_name]": {
                    "type": "string"
                },
                "shipping_address[email]": {
                    "type": "string"
                },
                "shipping_address[company]": {
                    "type": "string"
                },
                "shipping_address[phone]": {
                    "type": "string"
                },
                "shipping_address[line1]": {
                    "type": "string"
                },
                "shipping_address[line2]": {
                    "type": "string"
                },
                "shipping_address[line3]": {
                    "type": "string"
                },
                "shipping_address[city]": {
                    "type": "string"
                },
                "shipping_address[state_code]": {
                    "type": "string"
                },
                "shipping_address[state]": {
                    "type": "string"
                },
                "shipping_address[zip]": {
                    "type": "string"
                },
                "shipping_address[country]": {
                    "type": "string"
                },
                "shipping_address[validation_status]": {
                    "type": "string",
                    "enum": [
                        "not_validated",
                        "valid",
                        "partially_valid",
                        "invalid"
                    ]
                }
            }
        },
        "SubscriptionOverrideBillingProfileRequest": {
            "type": "object",
            "properties": {
                "payment_source_id": {
                    "type": "string"
                },
                "auto_collection": {
                    "type": "string",
                    "enum": [
                        "on",
                        "off"
                    ]
                }
            }
        },
        "SubscriptionEstimate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "next_billing_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "shipping_address": {
                    "$ref": "#/definitions/ShippingAddress"
                }
            }
        },
        "ThirdPartyPaymentMethod": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                }
            }
        },
        "TimeMachine": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "time_travel_status": {
                    "type": "string",
                    "enum": [
                        "not_enabled",
                        "in_progress",
                        "succeeded",
                        "failed"
                    ]
                },
                "genesis_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "destination_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "failure_code": {
                    "type": "string"
                },
                "failure_reason": {
                    "type": "string"
                },
                "error_json": {
                    "type": "string"
                },
                "null": {
                    "$ref": "#/definitions/TimeMachine"
                }
            }
        },
        "TimeMachineStartAfreshRequest": {
            "type": "object",
            "properties": {
                "genesis_time": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TimeMachineTravelForwardRequest": {
            "type": "object",
            "properties": {
                "destination_time": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "LinkedInvoice": {
            "type": "object",
            "properties": {
                "invoice_id": {
                    "type": "string"
                },
                "applied_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "applied_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoice_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "invoice_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                }
            }
        },
        "LinkedCreditNote": {
            "type": "object",
            "properties": {
                "cn_id": {
                    "type": "string"
                },
                "applied_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "applied_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_reason_code": {
                    "type": "string",
                    "enum": [
                        "write_off",
                        "subscription_change",
                        "subscription_cancellation",
                        "chargeback",
                        "product_unsatisfactory",
                        "service_unsatisfactory",
                        "order_change",
                        "order_cancellation",
                        "waiver",
                        "other",
                        "fraudulent"
                    ]
                },
                "cn_date": {
                    "type": "integer",
                    "format": "int64"
                },
                "cn_total": {
                    "type": "integer",
                    "format": "int32"
                },
                "cn_status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "cn_reference_invoice_id": {
                    "type": "string"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "gateway_account_id": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string",
                    "enum": [
                        "card",
                        "cash",
                        "check",
                        "chargeback",
                        "bank_transfer",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "direct_debit",
                        "alipay",
                        "unionpay",
                        "apple_pay",
                        "other"
                    ]
                },
                "reference_number": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string",
                    "enum": [
                        "chargebee",
                        "stripe",
                        "wepay",
                        "braintree",
                        "authorize_net",
                        "paypal_pro",
                        "pin",
                        "eway",
                        "eway_rapid",
                        "worldpay",
                        "balanced_payments",
                        "beanstream",
                        "bluepay",
                        "elavon",
                        "first_data_global",
                        "hdfc",
                        "migs",
                        "nmi",
                        "ogone",
                        "paymill",
                        "paypal_payflow_pro",
                        "sage_pay",
                        "tco",
                        "wirecard",
                        "amazon_payments",
                        "paypal_express_checkout",
                        "gocardless",
                        "adyen",
                        "orbital",
                        "moneris_us",
                        "moneris",
                        "not_applicable"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "authorization",
                        "payment",
                        "refund",
                        "payment_reversal"
                    ]
                },
                "date": {
                    "type": "integer",
                    "format": "int64"
                },
                "settled_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "currency_code": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "id_at_gateway": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_progress",
                        "success",
                        "voided",
                        "failure",
                        "timeout",
                        "needs_attention"
                    ]
                },
                "fraud_flag": {
                    "type": "string",
                    "enum": [
                        "safe",
                        "suspicious",
                        "fraudulent"
                    ]
                },
                "error_code": {
                    "type": "string"
                },
                "error_text": {
                    "type": "string"
                },
                "voided_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "fraud_reason": {
                    "type": "string"
                },
                "amount_unused": {
                    "type": "integer",
                    "format": "int32"
                },
                "masked_card_number": {
                    "type": "string"
                },
                "reference_transaction_id": {
                    "type": "string"
                },
                "refunded_txn_id": {
                    "type": "string"
                },
                "reversal_transaction_id": {
                    "type": "string"
                },
                "linked_invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedInvoice"
                    }
                },
                "linked_credit_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedCreditNote"
                    }
                },
                "linked_refunds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedRefund"
                    }
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "UnbilledCharge": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "date_from": {
                    "type": "integer",
                    "format": "int64"
                },
                "date_to": {
                    "type": "integer",
                    "format": "int64"
                },
                "unit_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string",
                    "enum": [
                        "plan_setup",
                        "plan",
                        "addon",
                        "adhoc"
                    ]
                },
                "entity_id": {
                    "type": "string"
                },
                "is_voided": {
                    "type": "boolean"
                },
                "voided_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "UnbilledChargeInvoiceUnbilledChargesRequest": {
            "type": "object",
            "properties": {
                "subscription_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                }
            }
        },
        "UnbilledChargeInvoiceNowEstimateRequest": {
            "type": "object",
            "properties": {
                "subscription_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                }
            }
        }
    },
    "security": [
        {
            "HTTPBasic": []
        }
    ],
    "securityDefinitions": {
        "HTTPBasic": {
            "description": "HTTP Basic authentication",
            "type": "basic"
        }
    }
}
